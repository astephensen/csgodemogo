// Code generated by protoc-gen-go.
// source: cstrike15_usermessages_public.proto
// DO NOT EDIT!

/*
Package cstrike15_usermessages_public is a generated protocol buffer package.

It is generated from these files:
	cstrike15_usermessages_public.proto

It has these top-level messages:
	CCSUsrMsg_VGUIMenu
	CCSUsrMsg_Geiger
	CCSUsrMsg_Train
	CCSUsrMsg_HudText
	CCSUsrMsg_SayText
	CCSUsrMsg_SayText2
	CCSUsrMsg_TextMsg
	CCSUsrMsg_HudMsg
	CCSUsrMsg_Shake
	CCSUsrMsg_Fade
	CCSUsrMsg_Rumble
	CCSUsrMsg_CloseCaption
	CCSUsrMsg_CloseCaptionDirect
	CCSUsrMsg_SendAudio
	CCSUsrMsg_RawAudio
	CCSUsrMsg_VoiceMask
	CCSUsrMsg_Damage
	CCSUsrMsg_RadioText
	CCSUsrMsg_HintText
	CCSUsrMsg_KeyHintText
	CCSUsrMsg_ProcessSpottedEntityUpdate
	CCSUsrMsg_ReloadEffect
	CCSUsrMsg_AdjustMoney
	CCSUsrMsg_KillCam
	CCSUsrMsg_DesiredTimescale
	CCSUsrMsg_CurrentTimescale
	CCSUsrMsg_AchievementEvent
	CCSUsrMsg_MatchEndConditions
	CCSUsrMsg_DisplayInventory
	CCSUsrMsg_CallVoteFailed
	CCSUsrMsg_VoteStart
	CCSUsrMsg_VotePass
	CCSUsrMsg_VoteFailed
	CCSUsrMsg_VoteSetup
	CCSUsrMsg_SendLastKillerDamageToClient
	CCSUsrMsg_ItemPickup
	CCSUsrMsg_ShowMenu
	CCSUsrMsg_BarTime
	CCSUsrMsg_AmmoDenied
	CCSUsrMsg_MarkAchievement
	CCSUsrMsg_ItemDrop
	CCSUsrMsg_GlowPropTurnOff
	CCSUsrMsg_RoundBackupFilenames
	CCSUsrMsg_ResetHud
	CCSUsrMsg_GameTitle
	CCSUsrMsg_RequestState
	CCSUsrMsg_StopSpectatorMode
	CCSUsrMsg_DisconnectToLobby
	CCSUsrMsg_WarmupHasEnded
	CCSUsrMsg_ClientInfo
*/
package cstrikeproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ECstrike15UserMessages int32

const (
	ECstrike15UserMessages_CS_UM_VGUIMenu                     ECstrike15UserMessages = 1
	ECstrike15UserMessages_CS_UM_Geiger                       ECstrike15UserMessages = 2
	ECstrike15UserMessages_CS_UM_Train                        ECstrike15UserMessages = 3
	ECstrike15UserMessages_CS_UM_HudText                      ECstrike15UserMessages = 4
	ECstrike15UserMessages_CS_UM_SayText                      ECstrike15UserMessages = 5
	ECstrike15UserMessages_CS_UM_SayText2                     ECstrike15UserMessages = 6
	ECstrike15UserMessages_CS_UM_TextMsg                      ECstrike15UserMessages = 7
	ECstrike15UserMessages_CS_UM_HudMsg                       ECstrike15UserMessages = 8
	ECstrike15UserMessages_CS_UM_ResetHud                     ECstrike15UserMessages = 9
	ECstrike15UserMessages_CS_UM_GameTitle                    ECstrike15UserMessages = 10
	ECstrike15UserMessages_CS_UM_Shake                        ECstrike15UserMessages = 12
	ECstrike15UserMessages_CS_UM_Fade                         ECstrike15UserMessages = 13
	ECstrike15UserMessages_CS_UM_Rumble                       ECstrike15UserMessages = 14
	ECstrike15UserMessages_CS_UM_CloseCaption                 ECstrike15UserMessages = 15
	ECstrike15UserMessages_CS_UM_CloseCaptionDirect           ECstrike15UserMessages = 16
	ECstrike15UserMessages_CS_UM_SendAudio                    ECstrike15UserMessages = 17
	ECstrike15UserMessages_CS_UM_RawAudio                     ECstrike15UserMessages = 18
	ECstrike15UserMessages_CS_UM_VoiceMask                    ECstrike15UserMessages = 19
	ECstrike15UserMessages_CS_UM_RequestState                 ECstrike15UserMessages = 20
	ECstrike15UserMessages_CS_UM_Damage                       ECstrike15UserMessages = 21
	ECstrike15UserMessages_CS_UM_RadioText                    ECstrike15UserMessages = 22
	ECstrike15UserMessages_CS_UM_HintText                     ECstrike15UserMessages = 23
	ECstrike15UserMessages_CS_UM_KeyHintText                  ECstrike15UserMessages = 24
	ECstrike15UserMessages_CS_UM_ProcessSpottedEntityUpdate   ECstrike15UserMessages = 25
	ECstrike15UserMessages_CS_UM_ReloadEffect                 ECstrike15UserMessages = 26
	ECstrike15UserMessages_CS_UM_AdjustMoney                  ECstrike15UserMessages = 27
	ECstrike15UserMessages_CS_UM_UpdateTeamMoney              ECstrike15UserMessages = 28
	ECstrike15UserMessages_CS_UM_StopSpectatorMode            ECstrike15UserMessages = 29
	ECstrike15UserMessages_CS_UM_KillCam                      ECstrike15UserMessages = 30
	ECstrike15UserMessages_CS_UM_DesiredTimescale             ECstrike15UserMessages = 31
	ECstrike15UserMessages_CS_UM_CurrentTimescale             ECstrike15UserMessages = 32
	ECstrike15UserMessages_CS_UM_AchievementEvent             ECstrike15UserMessages = 33
	ECstrike15UserMessages_CS_UM_MatchEndConditions           ECstrike15UserMessages = 34
	ECstrike15UserMessages_CS_UM_DisconnectToLobby            ECstrike15UserMessages = 35
	ECstrike15UserMessages_CS_UM_DisplayInventory             ECstrike15UserMessages = 37
	ECstrike15UserMessages_CS_UM_WarmupHasEnded               ECstrike15UserMessages = 38
	ECstrike15UserMessages_CS_UM_ClientInfo                   ECstrike15UserMessages = 39
	ECstrike15UserMessages_CS_UM_CallVoteFailed               ECstrike15UserMessages = 45
	ECstrike15UserMessages_CS_UM_VoteStart                    ECstrike15UserMessages = 46
	ECstrike15UserMessages_CS_UM_VotePass                     ECstrike15UserMessages = 47
	ECstrike15UserMessages_CS_UM_VoteFailed                   ECstrike15UserMessages = 48
	ECstrike15UserMessages_CS_UM_VoteSetup                    ECstrike15UserMessages = 49
	ECstrike15UserMessages_CS_UM_SendLastKillerDamageToClient ECstrike15UserMessages = 51
	ECstrike15UserMessages_CS_UM_ItemPickup                   ECstrike15UserMessages = 53
	ECstrike15UserMessages_CS_UM_ShowMenu                     ECstrike15UserMessages = 54
	ECstrike15UserMessages_CS_UM_BarTime                      ECstrike15UserMessages = 55
	ECstrike15UserMessages_CS_UM_AmmoDenied                   ECstrike15UserMessages = 56
	ECstrike15UserMessages_CS_UM_MarkAchievement              ECstrike15UserMessages = 57
	ECstrike15UserMessages_CS_UM_ItemDrop                     ECstrike15UserMessages = 59
	ECstrike15UserMessages_CS_UM_GlowPropTurnOff              ECstrike15UserMessages = 60
)

var ECstrike15UserMessages_name = map[int32]string{
	1:  "CS_UM_VGUIMenu",
	2:  "CS_UM_Geiger",
	3:  "CS_UM_Train",
	4:  "CS_UM_HudText",
	5:  "CS_UM_SayText",
	6:  "CS_UM_SayText2",
	7:  "CS_UM_TextMsg",
	8:  "CS_UM_HudMsg",
	9:  "CS_UM_ResetHud",
	10: "CS_UM_GameTitle",
	12: "CS_UM_Shake",
	13: "CS_UM_Fade",
	14: "CS_UM_Rumble",
	15: "CS_UM_CloseCaption",
	16: "CS_UM_CloseCaptionDirect",
	17: "CS_UM_SendAudio",
	18: "CS_UM_RawAudio",
	19: "CS_UM_VoiceMask",
	20: "CS_UM_RequestState",
	21: "CS_UM_Damage",
	22: "CS_UM_RadioText",
	23: "CS_UM_HintText",
	24: "CS_UM_KeyHintText",
	25: "CS_UM_ProcessSpottedEntityUpdate",
	26: "CS_UM_ReloadEffect",
	27: "CS_UM_AdjustMoney",
	28: "CS_UM_UpdateTeamMoney",
	29: "CS_UM_StopSpectatorMode",
	30: "CS_UM_KillCam",
	31: "CS_UM_DesiredTimescale",
	32: "CS_UM_CurrentTimescale",
	33: "CS_UM_AchievementEvent",
	34: "CS_UM_MatchEndConditions",
	35: "CS_UM_DisconnectToLobby",
	37: "CS_UM_DisplayInventory",
	38: "CS_UM_WarmupHasEnded",
	39: "CS_UM_ClientInfo",
	45: "CS_UM_CallVoteFailed",
	46: "CS_UM_VoteStart",
	47: "CS_UM_VotePass",
	48: "CS_UM_VoteFailed",
	49: "CS_UM_VoteSetup",
	51: "CS_UM_SendLastKillerDamageToClient",
	53: "CS_UM_ItemPickup",
	54: "CS_UM_ShowMenu",
	55: "CS_UM_BarTime",
	56: "CS_UM_AmmoDenied",
	57: "CS_UM_MarkAchievement",
	59: "CS_UM_ItemDrop",
	60: "CS_UM_GlowPropTurnOff",
}
var ECstrike15UserMessages_value = map[string]int32{
	"CS_UM_VGUIMenu":                     1,
	"CS_UM_Geiger":                       2,
	"CS_UM_Train":                        3,
	"CS_UM_HudText":                      4,
	"CS_UM_SayText":                      5,
	"CS_UM_SayText2":                     6,
	"CS_UM_TextMsg":                      7,
	"CS_UM_HudMsg":                       8,
	"CS_UM_ResetHud":                     9,
	"CS_UM_GameTitle":                    10,
	"CS_UM_Shake":                        12,
	"CS_UM_Fade":                         13,
	"CS_UM_Rumble":                       14,
	"CS_UM_CloseCaption":                 15,
	"CS_UM_CloseCaptionDirect":           16,
	"CS_UM_SendAudio":                    17,
	"CS_UM_RawAudio":                     18,
	"CS_UM_VoiceMask":                    19,
	"CS_UM_RequestState":                 20,
	"CS_UM_Damage":                       21,
	"CS_UM_RadioText":                    22,
	"CS_UM_HintText":                     23,
	"CS_UM_KeyHintText":                  24,
	"CS_UM_ProcessSpottedEntityUpdate":   25,
	"CS_UM_ReloadEffect":                 26,
	"CS_UM_AdjustMoney":                  27,
	"CS_UM_UpdateTeamMoney":              28,
	"CS_UM_StopSpectatorMode":            29,
	"CS_UM_KillCam":                      30,
	"CS_UM_DesiredTimescale":             31,
	"CS_UM_CurrentTimescale":             32,
	"CS_UM_AchievementEvent":             33,
	"CS_UM_MatchEndConditions":           34,
	"CS_UM_DisconnectToLobby":            35,
	"CS_UM_DisplayInventory":             37,
	"CS_UM_WarmupHasEnded":               38,
	"CS_UM_ClientInfo":                   39,
	"CS_UM_CallVoteFailed":               45,
	"CS_UM_VoteStart":                    46,
	"CS_UM_VotePass":                     47,
	"CS_UM_VoteFailed":                   48,
	"CS_UM_VoteSetup":                    49,
	"CS_UM_SendLastKillerDamageToClient": 51,
	"CS_UM_ItemPickup":                   53,
	"CS_UM_ShowMenu":                     54,
	"CS_UM_BarTime":                      55,
	"CS_UM_AmmoDenied":                   56,
	"CS_UM_MarkAchievement":              57,
	"CS_UM_ItemDrop":                     59,
	"CS_UM_GlowPropTurnOff":              60,
}

func (x ECstrike15UserMessages) Enum() *ECstrike15UserMessages {
	p := new(ECstrike15UserMessages)
	*p = x
	return p
}
func (x ECstrike15UserMessages) String() string {
	return proto.EnumName(ECstrike15UserMessages_name, int32(x))
}
func (x *ECstrike15UserMessages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ECstrike15UserMessages_value, data, "ECstrike15UserMessages")
	if err != nil {
		return err
	}
	*x = ECstrike15UserMessages(value)
	return nil
}
func (ECstrike15UserMessages) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CCSUsrMsg_VGUIMenu struct {
	Name             *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Show             *bool                        `protobuf:"varint,2,opt,name=show" json:"show,omitempty"`
	Subkeys          []*CCSUsrMsg_VGUIMenu_Subkey `protobuf:"bytes,3,rep,name=subkeys" json:"subkeys,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CCSUsrMsg_VGUIMenu) Reset()                    { *m = CCSUsrMsg_VGUIMenu{} }
func (m *CCSUsrMsg_VGUIMenu) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_VGUIMenu) ProtoMessage()               {}
func (*CCSUsrMsg_VGUIMenu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CCSUsrMsg_VGUIMenu) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CCSUsrMsg_VGUIMenu) GetShow() bool {
	if m != nil && m.Show != nil {
		return *m.Show
	}
	return false
}

func (m *CCSUsrMsg_VGUIMenu) GetSubkeys() []*CCSUsrMsg_VGUIMenu_Subkey {
	if m != nil {
		return m.Subkeys
	}
	return nil
}

type CCSUsrMsg_VGUIMenu_Subkey struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Str              *string `protobuf:"bytes,2,opt,name=str" json:"str,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_VGUIMenu_Subkey) Reset()                    { *m = CCSUsrMsg_VGUIMenu_Subkey{} }
func (m *CCSUsrMsg_VGUIMenu_Subkey) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_VGUIMenu_Subkey) ProtoMessage()               {}
func (*CCSUsrMsg_VGUIMenu_Subkey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *CCSUsrMsg_VGUIMenu_Subkey) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CCSUsrMsg_VGUIMenu_Subkey) GetStr() string {
	if m != nil && m.Str != nil {
		return *m.Str
	}
	return ""
}

type CCSUsrMsg_Geiger struct {
	Range            *int32 `protobuf:"varint,1,opt,name=range" json:"range,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_Geiger) Reset()                    { *m = CCSUsrMsg_Geiger{} }
func (m *CCSUsrMsg_Geiger) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_Geiger) ProtoMessage()               {}
func (*CCSUsrMsg_Geiger) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CCSUsrMsg_Geiger) GetRange() int32 {
	if m != nil && m.Range != nil {
		return *m.Range
	}
	return 0
}

type CCSUsrMsg_Train struct {
	Train            *int32 `protobuf:"varint,1,opt,name=train" json:"train,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_Train) Reset()                    { *m = CCSUsrMsg_Train{} }
func (m *CCSUsrMsg_Train) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_Train) ProtoMessage()               {}
func (*CCSUsrMsg_Train) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CCSUsrMsg_Train) GetTrain() int32 {
	if m != nil && m.Train != nil {
		return *m.Train
	}
	return 0
}

type CCSUsrMsg_HudText struct {
	Text             *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_HudText) Reset()                    { *m = CCSUsrMsg_HudText{} }
func (m *CCSUsrMsg_HudText) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_HudText) ProtoMessage()               {}
func (*CCSUsrMsg_HudText) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CCSUsrMsg_HudText) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CCSUsrMsg_SayText struct {
	EntIdx           *int32  `protobuf:"varint,1,opt,name=ent_idx" json:"ent_idx,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Chat             *bool   `protobuf:"varint,3,opt,name=chat" json:"chat,omitempty"`
	Textallchat      *bool   `protobuf:"varint,4,opt,name=textallchat" json:"textallchat,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_SayText) Reset()                    { *m = CCSUsrMsg_SayText{} }
func (m *CCSUsrMsg_SayText) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_SayText) ProtoMessage()               {}
func (*CCSUsrMsg_SayText) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CCSUsrMsg_SayText) GetEntIdx() int32 {
	if m != nil && m.EntIdx != nil {
		return *m.EntIdx
	}
	return 0
}

func (m *CCSUsrMsg_SayText) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CCSUsrMsg_SayText) GetChat() bool {
	if m != nil && m.Chat != nil {
		return *m.Chat
	}
	return false
}

func (m *CCSUsrMsg_SayText) GetTextallchat() bool {
	if m != nil && m.Textallchat != nil {
		return *m.Textallchat
	}
	return false
}

type CCSUsrMsg_SayText2 struct {
	EntIdx           *int32   `protobuf:"varint,1,opt,name=ent_idx" json:"ent_idx,omitempty"`
	Chat             *bool    `protobuf:"varint,2,opt,name=chat" json:"chat,omitempty"`
	MsgName          *string  `protobuf:"bytes,3,opt,name=msg_name" json:"msg_name,omitempty"`
	Params           []string `protobuf:"bytes,4,rep,name=params" json:"params,omitempty"`
	Textallchat      *bool    `protobuf:"varint,5,opt,name=textallchat" json:"textallchat,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCSUsrMsg_SayText2) Reset()                    { *m = CCSUsrMsg_SayText2{} }
func (m *CCSUsrMsg_SayText2) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_SayText2) ProtoMessage()               {}
func (*CCSUsrMsg_SayText2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CCSUsrMsg_SayText2) GetEntIdx() int32 {
	if m != nil && m.EntIdx != nil {
		return *m.EntIdx
	}
	return 0
}

func (m *CCSUsrMsg_SayText2) GetChat() bool {
	if m != nil && m.Chat != nil {
		return *m.Chat
	}
	return false
}

func (m *CCSUsrMsg_SayText2) GetMsgName() string {
	if m != nil && m.MsgName != nil {
		return *m.MsgName
	}
	return ""
}

func (m *CCSUsrMsg_SayText2) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *CCSUsrMsg_SayText2) GetTextallchat() bool {
	if m != nil && m.Textallchat != nil {
		return *m.Textallchat
	}
	return false
}

type CCSUsrMsg_TextMsg struct {
	MsgDst           *int32   `protobuf:"varint,1,opt,name=msg_dst" json:"msg_dst,omitempty"`
	Params           []string `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCSUsrMsg_TextMsg) Reset()                    { *m = CCSUsrMsg_TextMsg{} }
func (m *CCSUsrMsg_TextMsg) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_TextMsg) ProtoMessage()               {}
func (*CCSUsrMsg_TextMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CCSUsrMsg_TextMsg) GetMsgDst() int32 {
	if m != nil && m.MsgDst != nil {
		return *m.MsgDst
	}
	return 0
}

func (m *CCSUsrMsg_TextMsg) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

type CCSUsrMsg_HudMsg struct {
	Channel          *int32        `protobuf:"varint,1,opt,name=channel" json:"channel,omitempty"`
	Pos              *CMsgVector2D `protobuf:"bytes,2,opt,name=pos" json:"pos,omitempty"`
	Clr1             *CMsgRGBA     `protobuf:"bytes,3,opt,name=clr1" json:"clr1,omitempty"`
	Clr2             *CMsgRGBA     `protobuf:"bytes,4,opt,name=clr2" json:"clr2,omitempty"`
	Effect           *int32        `protobuf:"varint,5,opt,name=effect" json:"effect,omitempty"`
	FadeInTime       *float32      `protobuf:"fixed32,6,opt,name=fade_in_time" json:"fade_in_time,omitempty"`
	FadeOutTime      *float32      `protobuf:"fixed32,7,opt,name=fade_out_time" json:"fade_out_time,omitempty"`
	HoldTime         *float32      `protobuf:"fixed32,9,opt,name=hold_time" json:"hold_time,omitempty"`
	FxTime           *float32      `protobuf:"fixed32,10,opt,name=fx_time" json:"fx_time,omitempty"`
	Text             *string       `protobuf:"bytes,11,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CCSUsrMsg_HudMsg) Reset()                    { *m = CCSUsrMsg_HudMsg{} }
func (m *CCSUsrMsg_HudMsg) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_HudMsg) ProtoMessage()               {}
func (*CCSUsrMsg_HudMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CCSUsrMsg_HudMsg) GetChannel() int32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CCSUsrMsg_HudMsg) GetPos() *CMsgVector2D {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CCSUsrMsg_HudMsg) GetClr1() *CMsgRGBA {
	if m != nil {
		return m.Clr1
	}
	return nil
}

func (m *CCSUsrMsg_HudMsg) GetClr2() *CMsgRGBA {
	if m != nil {
		return m.Clr2
	}
	return nil
}

func (m *CCSUsrMsg_HudMsg) GetEffect() int32 {
	if m != nil && m.Effect != nil {
		return *m.Effect
	}
	return 0
}

func (m *CCSUsrMsg_HudMsg) GetFadeInTime() float32 {
	if m != nil && m.FadeInTime != nil {
		return *m.FadeInTime
	}
	return 0
}

func (m *CCSUsrMsg_HudMsg) GetFadeOutTime() float32 {
	if m != nil && m.FadeOutTime != nil {
		return *m.FadeOutTime
	}
	return 0
}

func (m *CCSUsrMsg_HudMsg) GetHoldTime() float32 {
	if m != nil && m.HoldTime != nil {
		return *m.HoldTime
	}
	return 0
}

func (m *CCSUsrMsg_HudMsg) GetFxTime() float32 {
	if m != nil && m.FxTime != nil {
		return *m.FxTime
	}
	return 0
}

func (m *CCSUsrMsg_HudMsg) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CCSUsrMsg_Shake struct {
	Command          *int32   `protobuf:"varint,1,opt,name=command" json:"command,omitempty"`
	LocalAmplitude   *float32 `protobuf:"fixed32,2,opt,name=local_amplitude" json:"local_amplitude,omitempty"`
	Frequency        *float32 `protobuf:"fixed32,3,opt,name=frequency" json:"frequency,omitempty"`
	Duration         *float32 `protobuf:"fixed32,4,opt,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCSUsrMsg_Shake) Reset()                    { *m = CCSUsrMsg_Shake{} }
func (m *CCSUsrMsg_Shake) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_Shake) ProtoMessage()               {}
func (*CCSUsrMsg_Shake) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CCSUsrMsg_Shake) GetCommand() int32 {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return 0
}

func (m *CCSUsrMsg_Shake) GetLocalAmplitude() float32 {
	if m != nil && m.LocalAmplitude != nil {
		return *m.LocalAmplitude
	}
	return 0
}

func (m *CCSUsrMsg_Shake) GetFrequency() float32 {
	if m != nil && m.Frequency != nil {
		return *m.Frequency
	}
	return 0
}

func (m *CCSUsrMsg_Shake) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CCSUsrMsg_Fade struct {
	Duration         *int32    `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	HoldTime         *int32    `protobuf:"varint,2,opt,name=hold_time" json:"hold_time,omitempty"`
	Flags            *int32    `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Clr              *CMsgRGBA `protobuf:"bytes,4,opt,name=clr" json:"clr,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CCSUsrMsg_Fade) Reset()                    { *m = CCSUsrMsg_Fade{} }
func (m *CCSUsrMsg_Fade) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_Fade) ProtoMessage()               {}
func (*CCSUsrMsg_Fade) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CCSUsrMsg_Fade) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CCSUsrMsg_Fade) GetHoldTime() int32 {
	if m != nil && m.HoldTime != nil {
		return *m.HoldTime
	}
	return 0
}

func (m *CCSUsrMsg_Fade) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CCSUsrMsg_Fade) GetClr() *CMsgRGBA {
	if m != nil {
		return m.Clr
	}
	return nil
}

type CCSUsrMsg_Rumble struct {
	Index            *int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Data             *int32 `protobuf:"varint,2,opt,name=data" json:"data,omitempty"`
	Flags            *int32 `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_Rumble) Reset()                    { *m = CCSUsrMsg_Rumble{} }
func (m *CCSUsrMsg_Rumble) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_Rumble) ProtoMessage()               {}
func (*CCSUsrMsg_Rumble) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CCSUsrMsg_Rumble) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CCSUsrMsg_Rumble) GetData() int32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

func (m *CCSUsrMsg_Rumble) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

type CCSUsrMsg_CloseCaption struct {
	Hash             *uint32 `protobuf:"varint,1,opt,name=hash" json:"hash,omitempty"`
	Duration         *int32  `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	FromPlayer       *bool   `protobuf:"varint,3,opt,name=from_player" json:"from_player,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_CloseCaption) Reset()                    { *m = CCSUsrMsg_CloseCaption{} }
func (m *CCSUsrMsg_CloseCaption) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_CloseCaption) ProtoMessage()               {}
func (*CCSUsrMsg_CloseCaption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CCSUsrMsg_CloseCaption) GetHash() uint32 {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return 0
}

func (m *CCSUsrMsg_CloseCaption) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CCSUsrMsg_CloseCaption) GetFromPlayer() bool {
	if m != nil && m.FromPlayer != nil {
		return *m.FromPlayer
	}
	return false
}

type CCSUsrMsg_CloseCaptionDirect struct {
	Hash             *uint32 `protobuf:"varint,1,opt,name=hash" json:"hash,omitempty"`
	Duration         *int32  `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	FromPlayer       *bool   `protobuf:"varint,3,opt,name=from_player" json:"from_player,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_CloseCaptionDirect) Reset()                    { *m = CCSUsrMsg_CloseCaptionDirect{} }
func (m *CCSUsrMsg_CloseCaptionDirect) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_CloseCaptionDirect) ProtoMessage()               {}
func (*CCSUsrMsg_CloseCaptionDirect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CCSUsrMsg_CloseCaptionDirect) GetHash() uint32 {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return 0
}

func (m *CCSUsrMsg_CloseCaptionDirect) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CCSUsrMsg_CloseCaptionDirect) GetFromPlayer() bool {
	if m != nil && m.FromPlayer != nil {
		return *m.FromPlayer
	}
	return false
}

type CCSUsrMsg_SendAudio struct {
	RadioSound       *string `protobuf:"bytes,1,opt,name=radio_sound" json:"radio_sound,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_SendAudio) Reset()                    { *m = CCSUsrMsg_SendAudio{} }
func (m *CCSUsrMsg_SendAudio) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_SendAudio) ProtoMessage()               {}
func (*CCSUsrMsg_SendAudio) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CCSUsrMsg_SendAudio) GetRadioSound() string {
	if m != nil && m.RadioSound != nil {
		return *m.RadioSound
	}
	return ""
}

type CCSUsrMsg_RawAudio struct {
	Pitch            *int32   `protobuf:"varint,1,opt,name=pitch" json:"pitch,omitempty"`
	Entidx           *int32   `protobuf:"varint,2,opt,name=entidx" json:"entidx,omitempty"`
	Duration         *float32 `protobuf:"fixed32,3,opt,name=duration" json:"duration,omitempty"`
	VoiceFilename    *string  `protobuf:"bytes,4,opt,name=voice_filename" json:"voice_filename,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCSUsrMsg_RawAudio) Reset()                    { *m = CCSUsrMsg_RawAudio{} }
func (m *CCSUsrMsg_RawAudio) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_RawAudio) ProtoMessage()               {}
func (*CCSUsrMsg_RawAudio) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CCSUsrMsg_RawAudio) GetPitch() int32 {
	if m != nil && m.Pitch != nil {
		return *m.Pitch
	}
	return 0
}

func (m *CCSUsrMsg_RawAudio) GetEntidx() int32 {
	if m != nil && m.Entidx != nil {
		return *m.Entidx
	}
	return 0
}

func (m *CCSUsrMsg_RawAudio) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CCSUsrMsg_RawAudio) GetVoiceFilename() string {
	if m != nil && m.VoiceFilename != nil {
		return *m.VoiceFilename
	}
	return ""
}

type CCSUsrMsg_VoiceMask struct {
	PlayerMasks      []*CCSUsrMsg_VoiceMask_PlayerMask `protobuf:"bytes,1,rep,name=player_masks" json:"player_masks,omitempty"`
	PlayerModEnable  *bool                             `protobuf:"varint,2,opt,name=player_mod_enable" json:"player_mod_enable,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CCSUsrMsg_VoiceMask) Reset()                    { *m = CCSUsrMsg_VoiceMask{} }
func (m *CCSUsrMsg_VoiceMask) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_VoiceMask) ProtoMessage()               {}
func (*CCSUsrMsg_VoiceMask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CCSUsrMsg_VoiceMask) GetPlayerMasks() []*CCSUsrMsg_VoiceMask_PlayerMask {
	if m != nil {
		return m.PlayerMasks
	}
	return nil
}

func (m *CCSUsrMsg_VoiceMask) GetPlayerModEnable() bool {
	if m != nil && m.PlayerModEnable != nil {
		return *m.PlayerModEnable
	}
	return false
}

type CCSUsrMsg_VoiceMask_PlayerMask struct {
	GameRulesMask    *int32 `protobuf:"varint,1,opt,name=game_rules_mask" json:"game_rules_mask,omitempty"`
	BanMasks         *int32 `protobuf:"varint,2,opt,name=ban_masks" json:"ban_masks,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_VoiceMask_PlayerMask) Reset()         { *m = CCSUsrMsg_VoiceMask_PlayerMask{} }
func (m *CCSUsrMsg_VoiceMask_PlayerMask) String() string { return proto.CompactTextString(m) }
func (*CCSUsrMsg_VoiceMask_PlayerMask) ProtoMessage()    {}
func (*CCSUsrMsg_VoiceMask_PlayerMask) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{15, 0}
}

func (m *CCSUsrMsg_VoiceMask_PlayerMask) GetGameRulesMask() int32 {
	if m != nil && m.GameRulesMask != nil {
		return *m.GameRulesMask
	}
	return 0
}

func (m *CCSUsrMsg_VoiceMask_PlayerMask) GetBanMasks() int32 {
	if m != nil && m.BanMasks != nil {
		return *m.BanMasks
	}
	return 0
}

type CCSUsrMsg_Damage struct {
	Amount            *int32      `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	InflictorWorldPos *CMsgVector `protobuf:"bytes,2,opt,name=inflictor_world_pos" json:"inflictor_world_pos,omitempty"`
	XXX_unrecognized  []byte      `json:"-"`
}

func (m *CCSUsrMsg_Damage) Reset()                    { *m = CCSUsrMsg_Damage{} }
func (m *CCSUsrMsg_Damage) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_Damage) ProtoMessage()               {}
func (*CCSUsrMsg_Damage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CCSUsrMsg_Damage) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *CCSUsrMsg_Damage) GetInflictorWorldPos() *CMsgVector {
	if m != nil {
		return m.InflictorWorldPos
	}
	return nil
}

type CCSUsrMsg_RadioText struct {
	MsgDst           *int32   `protobuf:"varint,1,opt,name=msg_dst" json:"msg_dst,omitempty"`
	Client           *int32   `protobuf:"varint,2,opt,name=client" json:"client,omitempty"`
	MsgName          *string  `protobuf:"bytes,3,opt,name=msg_name" json:"msg_name,omitempty"`
	Params           []string `protobuf:"bytes,4,rep,name=params" json:"params,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCSUsrMsg_RadioText) Reset()                    { *m = CCSUsrMsg_RadioText{} }
func (m *CCSUsrMsg_RadioText) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_RadioText) ProtoMessage()               {}
func (*CCSUsrMsg_RadioText) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CCSUsrMsg_RadioText) GetMsgDst() int32 {
	if m != nil && m.MsgDst != nil {
		return *m.MsgDst
	}
	return 0
}

func (m *CCSUsrMsg_RadioText) GetClient() int32 {
	if m != nil && m.Client != nil {
		return *m.Client
	}
	return 0
}

func (m *CCSUsrMsg_RadioText) GetMsgName() string {
	if m != nil && m.MsgName != nil {
		return *m.MsgName
	}
	return ""
}

func (m *CCSUsrMsg_RadioText) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

type CCSUsrMsg_HintText struct {
	Text             *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_HintText) Reset()                    { *m = CCSUsrMsg_HintText{} }
func (m *CCSUsrMsg_HintText) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_HintText) ProtoMessage()               {}
func (*CCSUsrMsg_HintText) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CCSUsrMsg_HintText) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CCSUsrMsg_KeyHintText struct {
	Hints            []string `protobuf:"bytes,1,rep,name=hints" json:"hints,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCSUsrMsg_KeyHintText) Reset()                    { *m = CCSUsrMsg_KeyHintText{} }
func (m *CCSUsrMsg_KeyHintText) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_KeyHintText) ProtoMessage()               {}
func (*CCSUsrMsg_KeyHintText) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CCSUsrMsg_KeyHintText) GetHints() []string {
	if m != nil {
		return m.Hints
	}
	return nil
}

type CCSUsrMsg_ProcessSpottedEntityUpdate struct {
	NewUpdate        *bool                                                       `protobuf:"varint,1,opt,name=new_update" json:"new_update,omitempty"`
	EntityUpdates    []*CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate `protobuf:"bytes,2,rep,name=entity_updates" json:"entity_updates,omitempty"`
	XXX_unrecognized []byte                                                      `json:"-"`
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate) Reset()         { *m = CCSUsrMsg_ProcessSpottedEntityUpdate{} }
func (m *CCSUsrMsg_ProcessSpottedEntityUpdate) String() string { return proto.CompactTextString(m) }
func (*CCSUsrMsg_ProcessSpottedEntityUpdate) ProtoMessage()    {}
func (*CCSUsrMsg_ProcessSpottedEntityUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20}
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate) GetNewUpdate() bool {
	if m != nil && m.NewUpdate != nil {
		return *m.NewUpdate
	}
	return false
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate) GetEntityUpdates() []*CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate {
	if m != nil {
		return m.EntityUpdates
	}
	return nil
}

type CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate struct {
	EntityIdx        *int32 `protobuf:"varint,1,opt,name=entity_idx" json:"entity_idx,omitempty"`
	ClassId          *int32 `protobuf:"varint,2,opt,name=class_id" json:"class_id,omitempty"`
	OriginX          *int32 `protobuf:"varint,3,opt,name=origin_x" json:"origin_x,omitempty"`
	OriginY          *int32 `protobuf:"varint,4,opt,name=origin_y" json:"origin_y,omitempty"`
	OriginZ          *int32 `protobuf:"varint,5,opt,name=origin_z" json:"origin_z,omitempty"`
	AngleY           *int32 `protobuf:"varint,6,opt,name=angle_y" json:"angle_y,omitempty"`
	Defuser          *bool  `protobuf:"varint,7,opt,name=defuser" json:"defuser,omitempty"`
	PlayerHasDefuser *bool  `protobuf:"varint,8,opt,name=player_has_defuser" json:"player_has_defuser,omitempty"`
	PlayerHasC4      *bool  `protobuf:"varint,9,opt,name=player_has_c4" json:"player_has_c4,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) Reset() {
	*m = CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate{}
}
func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) ProtoMessage() {}
func (*CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20, 0}
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) GetEntityIdx() int32 {
	if m != nil && m.EntityIdx != nil {
		return *m.EntityIdx
	}
	return 0
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) GetOriginX() int32 {
	if m != nil && m.OriginX != nil {
		return *m.OriginX
	}
	return 0
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) GetOriginY() int32 {
	if m != nil && m.OriginY != nil {
		return *m.OriginY
	}
	return 0
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) GetOriginZ() int32 {
	if m != nil && m.OriginZ != nil {
		return *m.OriginZ
	}
	return 0
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) GetAngleY() int32 {
	if m != nil && m.AngleY != nil {
		return *m.AngleY
	}
	return 0
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) GetDefuser() bool {
	if m != nil && m.Defuser != nil {
		return *m.Defuser
	}
	return false
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) GetPlayerHasDefuser() bool {
	if m != nil && m.PlayerHasDefuser != nil {
		return *m.PlayerHasDefuser
	}
	return false
}

func (m *CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate) GetPlayerHasC4() bool {
	if m != nil && m.PlayerHasC4 != nil {
		return *m.PlayerHasC4
	}
	return false
}

type CCSUsrMsg_ReloadEffect struct {
	Entidx           *int32 `protobuf:"varint,1,opt,name=entidx" json:"entidx,omitempty"`
	Actanim          *int32 `protobuf:"varint,2,opt,name=actanim" json:"actanim,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_ReloadEffect) Reset()                    { *m = CCSUsrMsg_ReloadEffect{} }
func (m *CCSUsrMsg_ReloadEffect) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_ReloadEffect) ProtoMessage()               {}
func (*CCSUsrMsg_ReloadEffect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *CCSUsrMsg_ReloadEffect) GetEntidx() int32 {
	if m != nil && m.Entidx != nil {
		return *m.Entidx
	}
	return 0
}

func (m *CCSUsrMsg_ReloadEffect) GetActanim() int32 {
	if m != nil && m.Actanim != nil {
		return *m.Actanim
	}
	return 0
}

type CCSUsrMsg_AdjustMoney struct {
	Amount           *int32 `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_AdjustMoney) Reset()                    { *m = CCSUsrMsg_AdjustMoney{} }
func (m *CCSUsrMsg_AdjustMoney) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_AdjustMoney) ProtoMessage()               {}
func (*CCSUsrMsg_AdjustMoney) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *CCSUsrMsg_AdjustMoney) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type CCSUsrMsg_KillCam struct {
	ObsMode          *int32 `protobuf:"varint,1,opt,name=obs_mode" json:"obs_mode,omitempty"`
	FirstTarget      *int32 `protobuf:"varint,2,opt,name=first_target" json:"first_target,omitempty"`
	SecondTarget     *int32 `protobuf:"varint,3,opt,name=second_target" json:"second_target,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_KillCam) Reset()                    { *m = CCSUsrMsg_KillCam{} }
func (m *CCSUsrMsg_KillCam) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_KillCam) ProtoMessage()               {}
func (*CCSUsrMsg_KillCam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *CCSUsrMsg_KillCam) GetObsMode() int32 {
	if m != nil && m.ObsMode != nil {
		return *m.ObsMode
	}
	return 0
}

func (m *CCSUsrMsg_KillCam) GetFirstTarget() int32 {
	if m != nil && m.FirstTarget != nil {
		return *m.FirstTarget
	}
	return 0
}

func (m *CCSUsrMsg_KillCam) GetSecondTarget() int32 {
	if m != nil && m.SecondTarget != nil {
		return *m.SecondTarget
	}
	return 0
}

type CCSUsrMsg_DesiredTimescale struct {
	DesiredTimescale    *float32 `protobuf:"fixed32,1,opt,name=desired_timescale" json:"desired_timescale,omitempty"`
	DurationRealtimeSec *float32 `protobuf:"fixed32,2,opt,name=duration_realtime_sec" json:"duration_realtime_sec,omitempty"`
	InterpolatorType    *int32   `protobuf:"varint,3,opt,name=interpolator_type" json:"interpolator_type,omitempty"`
	StartBlendTime      *float32 `protobuf:"fixed32,4,opt,name=start_blend_time" json:"start_blend_time,omitempty"`
	XXX_unrecognized    []byte   `json:"-"`
}

func (m *CCSUsrMsg_DesiredTimescale) Reset()                    { *m = CCSUsrMsg_DesiredTimescale{} }
func (m *CCSUsrMsg_DesiredTimescale) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_DesiredTimescale) ProtoMessage()               {}
func (*CCSUsrMsg_DesiredTimescale) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CCSUsrMsg_DesiredTimescale) GetDesiredTimescale() float32 {
	if m != nil && m.DesiredTimescale != nil {
		return *m.DesiredTimescale
	}
	return 0
}

func (m *CCSUsrMsg_DesiredTimescale) GetDurationRealtimeSec() float32 {
	if m != nil && m.DurationRealtimeSec != nil {
		return *m.DurationRealtimeSec
	}
	return 0
}

func (m *CCSUsrMsg_DesiredTimescale) GetInterpolatorType() int32 {
	if m != nil && m.InterpolatorType != nil {
		return *m.InterpolatorType
	}
	return 0
}

func (m *CCSUsrMsg_DesiredTimescale) GetStartBlendTime() float32 {
	if m != nil && m.StartBlendTime != nil {
		return *m.StartBlendTime
	}
	return 0
}

type CCSUsrMsg_CurrentTimescale struct {
	CurTimescale     *float32 `protobuf:"fixed32,1,opt,name=cur_timescale" json:"cur_timescale,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCSUsrMsg_CurrentTimescale) Reset()                    { *m = CCSUsrMsg_CurrentTimescale{} }
func (m *CCSUsrMsg_CurrentTimescale) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_CurrentTimescale) ProtoMessage()               {}
func (*CCSUsrMsg_CurrentTimescale) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CCSUsrMsg_CurrentTimescale) GetCurTimescale() float32 {
	if m != nil && m.CurTimescale != nil {
		return *m.CurTimescale
	}
	return 0
}

type CCSUsrMsg_AchievementEvent struct {
	Achievement      *int32 `protobuf:"varint,1,opt,name=achievement" json:"achievement,omitempty"`
	Count            *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	UserId           *int32 `protobuf:"varint,3,opt,name=user_id" json:"user_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_AchievementEvent) Reset()                    { *m = CCSUsrMsg_AchievementEvent{} }
func (m *CCSUsrMsg_AchievementEvent) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_AchievementEvent) ProtoMessage()               {}
func (*CCSUsrMsg_AchievementEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *CCSUsrMsg_AchievementEvent) GetAchievement() int32 {
	if m != nil && m.Achievement != nil {
		return *m.Achievement
	}
	return 0
}

func (m *CCSUsrMsg_AchievementEvent) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CCSUsrMsg_AchievementEvent) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type CCSUsrMsg_MatchEndConditions struct {
	Fraglimit        *int32 `protobuf:"varint,1,opt,name=fraglimit" json:"fraglimit,omitempty"`
	MpMaxrounds      *int32 `protobuf:"varint,2,opt,name=mp_maxrounds" json:"mp_maxrounds,omitempty"`
	MpWinlimit       *int32 `protobuf:"varint,3,opt,name=mp_winlimit" json:"mp_winlimit,omitempty"`
	MpTimelimit      *int32 `protobuf:"varint,4,opt,name=mp_timelimit" json:"mp_timelimit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_MatchEndConditions) Reset()                    { *m = CCSUsrMsg_MatchEndConditions{} }
func (m *CCSUsrMsg_MatchEndConditions) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_MatchEndConditions) ProtoMessage()               {}
func (*CCSUsrMsg_MatchEndConditions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CCSUsrMsg_MatchEndConditions) GetFraglimit() int32 {
	if m != nil && m.Fraglimit != nil {
		return *m.Fraglimit
	}
	return 0
}

func (m *CCSUsrMsg_MatchEndConditions) GetMpMaxrounds() int32 {
	if m != nil && m.MpMaxrounds != nil {
		return *m.MpMaxrounds
	}
	return 0
}

func (m *CCSUsrMsg_MatchEndConditions) GetMpWinlimit() int32 {
	if m != nil && m.MpWinlimit != nil {
		return *m.MpWinlimit
	}
	return 0
}

func (m *CCSUsrMsg_MatchEndConditions) GetMpTimelimit() int32 {
	if m != nil && m.MpTimelimit != nil {
		return *m.MpTimelimit
	}
	return 0
}

type CCSUsrMsg_DisplayInventory struct {
	Display          *bool  `protobuf:"varint,1,opt,name=display" json:"display,omitempty"`
	UserId           *int32 `protobuf:"varint,2,opt,name=user_id" json:"user_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_DisplayInventory) Reset()                    { *m = CCSUsrMsg_DisplayInventory{} }
func (m *CCSUsrMsg_DisplayInventory) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_DisplayInventory) ProtoMessage()               {}
func (*CCSUsrMsg_DisplayInventory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *CCSUsrMsg_DisplayInventory) GetDisplay() bool {
	if m != nil && m.Display != nil {
		return *m.Display
	}
	return false
}

func (m *CCSUsrMsg_DisplayInventory) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type CCSUsrMsg_CallVoteFailed struct {
	Reason           *int32 `protobuf:"varint,1,opt,name=reason" json:"reason,omitempty"`
	Time             *int32 `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_CallVoteFailed) Reset()                    { *m = CCSUsrMsg_CallVoteFailed{} }
func (m *CCSUsrMsg_CallVoteFailed) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_CallVoteFailed) ProtoMessage()               {}
func (*CCSUsrMsg_CallVoteFailed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *CCSUsrMsg_CallVoteFailed) GetReason() int32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

func (m *CCSUsrMsg_CallVoteFailed) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type CCSUsrMsg_VoteStart struct {
	Team             *int32  `protobuf:"varint,1,opt,name=team" json:"team,omitempty"`
	EntIdx           *int32  `protobuf:"varint,2,opt,name=ent_idx" json:"ent_idx,omitempty"`
	VoteType         *int32  `protobuf:"varint,3,opt,name=vote_type" json:"vote_type,omitempty"`
	DispStr          *string `protobuf:"bytes,4,opt,name=disp_str" json:"disp_str,omitempty"`
	DetailsStr       *string `protobuf:"bytes,5,opt,name=details_str" json:"details_str,omitempty"`
	OtherTeamStr     *string `protobuf:"bytes,6,opt,name=other_team_str" json:"other_team_str,omitempty"`
	IsYesNoVote      *bool   `protobuf:"varint,7,opt,name=is_yes_no_vote" json:"is_yes_no_vote,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_VoteStart) Reset()                    { *m = CCSUsrMsg_VoteStart{} }
func (m *CCSUsrMsg_VoteStart) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_VoteStart) ProtoMessage()               {}
func (*CCSUsrMsg_VoteStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *CCSUsrMsg_VoteStart) GetTeam() int32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CCSUsrMsg_VoteStart) GetEntIdx() int32 {
	if m != nil && m.EntIdx != nil {
		return *m.EntIdx
	}
	return 0
}

func (m *CCSUsrMsg_VoteStart) GetVoteType() int32 {
	if m != nil && m.VoteType != nil {
		return *m.VoteType
	}
	return 0
}

func (m *CCSUsrMsg_VoteStart) GetDispStr() string {
	if m != nil && m.DispStr != nil {
		return *m.DispStr
	}
	return ""
}

func (m *CCSUsrMsg_VoteStart) GetDetailsStr() string {
	if m != nil && m.DetailsStr != nil {
		return *m.DetailsStr
	}
	return ""
}

func (m *CCSUsrMsg_VoteStart) GetOtherTeamStr() string {
	if m != nil && m.OtherTeamStr != nil {
		return *m.OtherTeamStr
	}
	return ""
}

func (m *CCSUsrMsg_VoteStart) GetIsYesNoVote() bool {
	if m != nil && m.IsYesNoVote != nil {
		return *m.IsYesNoVote
	}
	return false
}

type CCSUsrMsg_VotePass struct {
	Team             *int32  `protobuf:"varint,1,opt,name=team" json:"team,omitempty"`
	VoteType         *int32  `protobuf:"varint,2,opt,name=vote_type" json:"vote_type,omitempty"`
	DispStr          *string `protobuf:"bytes,3,opt,name=disp_str" json:"disp_str,omitempty"`
	DetailsStr       *string `protobuf:"bytes,4,opt,name=details_str" json:"details_str,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_VotePass) Reset()                    { *m = CCSUsrMsg_VotePass{} }
func (m *CCSUsrMsg_VotePass) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_VotePass) ProtoMessage()               {}
func (*CCSUsrMsg_VotePass) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *CCSUsrMsg_VotePass) GetTeam() int32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CCSUsrMsg_VotePass) GetVoteType() int32 {
	if m != nil && m.VoteType != nil {
		return *m.VoteType
	}
	return 0
}

func (m *CCSUsrMsg_VotePass) GetDispStr() string {
	if m != nil && m.DispStr != nil {
		return *m.DispStr
	}
	return ""
}

func (m *CCSUsrMsg_VotePass) GetDetailsStr() string {
	if m != nil && m.DetailsStr != nil {
		return *m.DetailsStr
	}
	return ""
}

type CCSUsrMsg_VoteFailed struct {
	Team             *int32 `protobuf:"varint,1,opt,name=team" json:"team,omitempty"`
	Reason           *int32 `protobuf:"varint,2,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_VoteFailed) Reset()                    { *m = CCSUsrMsg_VoteFailed{} }
func (m *CCSUsrMsg_VoteFailed) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_VoteFailed) ProtoMessage()               {}
func (*CCSUsrMsg_VoteFailed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *CCSUsrMsg_VoteFailed) GetTeam() int32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CCSUsrMsg_VoteFailed) GetReason() int32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

type CCSUsrMsg_VoteSetup struct {
	PotentialIssues  []string `protobuf:"bytes,1,rep,name=potential_issues" json:"potential_issues,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCSUsrMsg_VoteSetup) Reset()                    { *m = CCSUsrMsg_VoteSetup{} }
func (m *CCSUsrMsg_VoteSetup) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_VoteSetup) ProtoMessage()               {}
func (*CCSUsrMsg_VoteSetup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *CCSUsrMsg_VoteSetup) GetPotentialIssues() []string {
	if m != nil {
		return m.PotentialIssues
	}
	return nil
}

type CCSUsrMsg_SendLastKillerDamageToClient struct {
	NumHitsGiven     *int32 `protobuf:"varint,1,opt,name=num_hits_given" json:"num_hits_given,omitempty"`
	DamageGiven      *int32 `protobuf:"varint,2,opt,name=damage_given" json:"damage_given,omitempty"`
	NumHitsTaken     *int32 `protobuf:"varint,3,opt,name=num_hits_taken" json:"num_hits_taken,omitempty"`
	DamageTaken      *int32 `protobuf:"varint,4,opt,name=damage_taken" json:"damage_taken,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_SendLastKillerDamageToClient) Reset() {
	*m = CCSUsrMsg_SendLastKillerDamageToClient{}
}
func (m *CCSUsrMsg_SendLastKillerDamageToClient) String() string { return proto.CompactTextString(m) }
func (*CCSUsrMsg_SendLastKillerDamageToClient) ProtoMessage()    {}
func (*CCSUsrMsg_SendLastKillerDamageToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{34}
}

func (m *CCSUsrMsg_SendLastKillerDamageToClient) GetNumHitsGiven() int32 {
	if m != nil && m.NumHitsGiven != nil {
		return *m.NumHitsGiven
	}
	return 0
}

func (m *CCSUsrMsg_SendLastKillerDamageToClient) GetDamageGiven() int32 {
	if m != nil && m.DamageGiven != nil {
		return *m.DamageGiven
	}
	return 0
}

func (m *CCSUsrMsg_SendLastKillerDamageToClient) GetNumHitsTaken() int32 {
	if m != nil && m.NumHitsTaken != nil {
		return *m.NumHitsTaken
	}
	return 0
}

func (m *CCSUsrMsg_SendLastKillerDamageToClient) GetDamageTaken() int32 {
	if m != nil && m.DamageTaken != nil {
		return *m.DamageTaken
	}
	return 0
}

type CCSUsrMsg_ItemPickup struct {
	Item             *string `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_ItemPickup) Reset()                    { *m = CCSUsrMsg_ItemPickup{} }
func (m *CCSUsrMsg_ItemPickup) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_ItemPickup) ProtoMessage()               {}
func (*CCSUsrMsg_ItemPickup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *CCSUsrMsg_ItemPickup) GetItem() string {
	if m != nil && m.Item != nil {
		return *m.Item
	}
	return ""
}

type CCSUsrMsg_ShowMenu struct {
	BitsValidSlots   *int32  `protobuf:"varint,1,opt,name=bits_valid_slots" json:"bits_valid_slots,omitempty"`
	DisplayTime      *int32  `protobuf:"varint,2,opt,name=display_time" json:"display_time,omitempty"`
	MenuString       *string `protobuf:"bytes,3,opt,name=menu_string" json:"menu_string,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_ShowMenu) Reset()                    { *m = CCSUsrMsg_ShowMenu{} }
func (m *CCSUsrMsg_ShowMenu) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_ShowMenu) ProtoMessage()               {}
func (*CCSUsrMsg_ShowMenu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *CCSUsrMsg_ShowMenu) GetBitsValidSlots() int32 {
	if m != nil && m.BitsValidSlots != nil {
		return *m.BitsValidSlots
	}
	return 0
}

func (m *CCSUsrMsg_ShowMenu) GetDisplayTime() int32 {
	if m != nil && m.DisplayTime != nil {
		return *m.DisplayTime
	}
	return 0
}

func (m *CCSUsrMsg_ShowMenu) GetMenuString() string {
	if m != nil && m.MenuString != nil {
		return *m.MenuString
	}
	return ""
}

type CCSUsrMsg_BarTime struct {
	Time             *string `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_BarTime) Reset()                    { *m = CCSUsrMsg_BarTime{} }
func (m *CCSUsrMsg_BarTime) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_BarTime) ProtoMessage()               {}
func (*CCSUsrMsg_BarTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *CCSUsrMsg_BarTime) GetTime() string {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return ""
}

type CCSUsrMsg_AmmoDenied struct {
	AmmoIdx          *int32 `protobuf:"varint,1,opt,name=ammoIdx" json:"ammoIdx,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_AmmoDenied) Reset()                    { *m = CCSUsrMsg_AmmoDenied{} }
func (m *CCSUsrMsg_AmmoDenied) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_AmmoDenied) ProtoMessage()               {}
func (*CCSUsrMsg_AmmoDenied) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *CCSUsrMsg_AmmoDenied) GetAmmoIdx() int32 {
	if m != nil && m.AmmoIdx != nil {
		return *m.AmmoIdx
	}
	return 0
}

type CCSUsrMsg_MarkAchievement struct {
	Achievement      *string `protobuf:"bytes,1,opt,name=achievement" json:"achievement,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_MarkAchievement) Reset()                    { *m = CCSUsrMsg_MarkAchievement{} }
func (m *CCSUsrMsg_MarkAchievement) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_MarkAchievement) ProtoMessage()               {}
func (*CCSUsrMsg_MarkAchievement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *CCSUsrMsg_MarkAchievement) GetAchievement() string {
	if m != nil && m.Achievement != nil {
		return *m.Achievement
	}
	return ""
}

type CCSUsrMsg_ItemDrop struct {
	Itemid           *int64 `protobuf:"varint,1,opt,name=itemid" json:"itemid,omitempty"`
	Death            *bool  `protobuf:"varint,2,opt,name=death" json:"death,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_ItemDrop) Reset()                    { *m = CCSUsrMsg_ItemDrop{} }
func (m *CCSUsrMsg_ItemDrop) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_ItemDrop) ProtoMessage()               {}
func (*CCSUsrMsg_ItemDrop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *CCSUsrMsg_ItemDrop) GetItemid() int64 {
	if m != nil && m.Itemid != nil {
		return *m.Itemid
	}
	return 0
}

func (m *CCSUsrMsg_ItemDrop) GetDeath() bool {
	if m != nil && m.Death != nil {
		return *m.Death
	}
	return false
}

type CCSUsrMsg_GlowPropTurnOff struct {
	Entidx           *int32 `protobuf:"varint,1,opt,name=entidx" json:"entidx,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_GlowPropTurnOff) Reset()                    { *m = CCSUsrMsg_GlowPropTurnOff{} }
func (m *CCSUsrMsg_GlowPropTurnOff) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_GlowPropTurnOff) ProtoMessage()               {}
func (*CCSUsrMsg_GlowPropTurnOff) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *CCSUsrMsg_GlowPropTurnOff) GetEntidx() int32 {
	if m != nil && m.Entidx != nil {
		return *m.Entidx
	}
	return 0
}

type CCSUsrMsg_RoundBackupFilenames struct {
	Count            *int32  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Index            *int32  `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Filename         *string `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
	Nicename         *string `protobuf:"bytes,4,opt,name=nicename" json:"nicename,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCSUsrMsg_RoundBackupFilenames) Reset()                    { *m = CCSUsrMsg_RoundBackupFilenames{} }
func (m *CCSUsrMsg_RoundBackupFilenames) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_RoundBackupFilenames) ProtoMessage()               {}
func (*CCSUsrMsg_RoundBackupFilenames) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *CCSUsrMsg_RoundBackupFilenames) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CCSUsrMsg_RoundBackupFilenames) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CCSUsrMsg_RoundBackupFilenames) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCSUsrMsg_RoundBackupFilenames) GetNicename() string {
	if m != nil && m.Nicename != nil {
		return *m.Nicename
	}
	return ""
}

type CCSUsrMsg_ResetHud struct {
	Reset_           *bool  `protobuf:"varint,1,opt,name=reset" json:"reset,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_ResetHud) Reset()                    { *m = CCSUsrMsg_ResetHud{} }
func (m *CCSUsrMsg_ResetHud) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_ResetHud) ProtoMessage()               {}
func (*CCSUsrMsg_ResetHud) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *CCSUsrMsg_ResetHud) GetReset_() bool {
	if m != nil && m.Reset_ != nil {
		return *m.Reset_
	}
	return false
}

type CCSUsrMsg_GameTitle struct {
	Dummy            *int32 `protobuf:"varint,1,opt,name=dummy" json:"dummy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_GameTitle) Reset()                    { *m = CCSUsrMsg_GameTitle{} }
func (m *CCSUsrMsg_GameTitle) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_GameTitle) ProtoMessage()               {}
func (*CCSUsrMsg_GameTitle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *CCSUsrMsg_GameTitle) GetDummy() int32 {
	if m != nil && m.Dummy != nil {
		return *m.Dummy
	}
	return 0
}

type CCSUsrMsg_RequestState struct {
	Dummy            *int32 `protobuf:"varint,1,opt,name=dummy" json:"dummy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_RequestState) Reset()                    { *m = CCSUsrMsg_RequestState{} }
func (m *CCSUsrMsg_RequestState) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_RequestState) ProtoMessage()               {}
func (*CCSUsrMsg_RequestState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *CCSUsrMsg_RequestState) GetDummy() int32 {
	if m != nil && m.Dummy != nil {
		return *m.Dummy
	}
	return 0
}

type CCSUsrMsg_StopSpectatorMode struct {
	Dummy            *int32 `protobuf:"varint,1,opt,name=dummy" json:"dummy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_StopSpectatorMode) Reset()                    { *m = CCSUsrMsg_StopSpectatorMode{} }
func (m *CCSUsrMsg_StopSpectatorMode) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_StopSpectatorMode) ProtoMessage()               {}
func (*CCSUsrMsg_StopSpectatorMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *CCSUsrMsg_StopSpectatorMode) GetDummy() int32 {
	if m != nil && m.Dummy != nil {
		return *m.Dummy
	}
	return 0
}

type CCSUsrMsg_DisconnectToLobby struct {
	Dummy            *int32 `protobuf:"varint,1,opt,name=dummy" json:"dummy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_DisconnectToLobby) Reset()                    { *m = CCSUsrMsg_DisconnectToLobby{} }
func (m *CCSUsrMsg_DisconnectToLobby) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_DisconnectToLobby) ProtoMessage()               {}
func (*CCSUsrMsg_DisconnectToLobby) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *CCSUsrMsg_DisconnectToLobby) GetDummy() int32 {
	if m != nil && m.Dummy != nil {
		return *m.Dummy
	}
	return 0
}

type CCSUsrMsg_WarmupHasEnded struct {
	Dummy            *int32 `protobuf:"varint,1,opt,name=dummy" json:"dummy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_WarmupHasEnded) Reset()                    { *m = CCSUsrMsg_WarmupHasEnded{} }
func (m *CCSUsrMsg_WarmupHasEnded) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_WarmupHasEnded) ProtoMessage()               {}
func (*CCSUsrMsg_WarmupHasEnded) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *CCSUsrMsg_WarmupHasEnded) GetDummy() int32 {
	if m != nil && m.Dummy != nil {
		return *m.Dummy
	}
	return 0
}

type CCSUsrMsg_ClientInfo struct {
	Dummy            *int32 `protobuf:"varint,1,opt,name=dummy" json:"dummy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCSUsrMsg_ClientInfo) Reset()                    { *m = CCSUsrMsg_ClientInfo{} }
func (m *CCSUsrMsg_ClientInfo) String() string            { return proto.CompactTextString(m) }
func (*CCSUsrMsg_ClientInfo) ProtoMessage()               {}
func (*CCSUsrMsg_ClientInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *CCSUsrMsg_ClientInfo) GetDummy() int32 {
	if m != nil && m.Dummy != nil {
		return *m.Dummy
	}
	return 0
}

func init() {
	proto.RegisterType((*CCSUsrMsg_VGUIMenu)(nil), "CCSUsrMsg_VGUIMenu")
	proto.RegisterType((*CCSUsrMsg_VGUIMenu_Subkey)(nil), "CCSUsrMsg_VGUIMenu.Subkey")
	proto.RegisterType((*CCSUsrMsg_Geiger)(nil), "CCSUsrMsg_Geiger")
	proto.RegisterType((*CCSUsrMsg_Train)(nil), "CCSUsrMsg_Train")
	proto.RegisterType((*CCSUsrMsg_HudText)(nil), "CCSUsrMsg_HudText")
	proto.RegisterType((*CCSUsrMsg_SayText)(nil), "CCSUsrMsg_SayText")
	proto.RegisterType((*CCSUsrMsg_SayText2)(nil), "CCSUsrMsg_SayText2")
	proto.RegisterType((*CCSUsrMsg_TextMsg)(nil), "CCSUsrMsg_TextMsg")
	proto.RegisterType((*CCSUsrMsg_HudMsg)(nil), "CCSUsrMsg_HudMsg")
	proto.RegisterType((*CCSUsrMsg_Shake)(nil), "CCSUsrMsg_Shake")
	proto.RegisterType((*CCSUsrMsg_Fade)(nil), "CCSUsrMsg_Fade")
	proto.RegisterType((*CCSUsrMsg_Rumble)(nil), "CCSUsrMsg_Rumble")
	proto.RegisterType((*CCSUsrMsg_CloseCaption)(nil), "CCSUsrMsg_CloseCaption")
	proto.RegisterType((*CCSUsrMsg_CloseCaptionDirect)(nil), "CCSUsrMsg_CloseCaptionDirect")
	proto.RegisterType((*CCSUsrMsg_SendAudio)(nil), "CCSUsrMsg_SendAudio")
	proto.RegisterType((*CCSUsrMsg_RawAudio)(nil), "CCSUsrMsg_RawAudio")
	proto.RegisterType((*CCSUsrMsg_VoiceMask)(nil), "CCSUsrMsg_VoiceMask")
	proto.RegisterType((*CCSUsrMsg_VoiceMask_PlayerMask)(nil), "CCSUsrMsg_VoiceMask.PlayerMask")
	proto.RegisterType((*CCSUsrMsg_Damage)(nil), "CCSUsrMsg_Damage")
	proto.RegisterType((*CCSUsrMsg_RadioText)(nil), "CCSUsrMsg_RadioText")
	proto.RegisterType((*CCSUsrMsg_HintText)(nil), "CCSUsrMsg_HintText")
	proto.RegisterType((*CCSUsrMsg_KeyHintText)(nil), "CCSUsrMsg_KeyHintText")
	proto.RegisterType((*CCSUsrMsg_ProcessSpottedEntityUpdate)(nil), "CCSUsrMsg_ProcessSpottedEntityUpdate")
	proto.RegisterType((*CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate)(nil), "CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate")
	proto.RegisterType((*CCSUsrMsg_ReloadEffect)(nil), "CCSUsrMsg_ReloadEffect")
	proto.RegisterType((*CCSUsrMsg_AdjustMoney)(nil), "CCSUsrMsg_AdjustMoney")
	proto.RegisterType((*CCSUsrMsg_KillCam)(nil), "CCSUsrMsg_KillCam")
	proto.RegisterType((*CCSUsrMsg_DesiredTimescale)(nil), "CCSUsrMsg_DesiredTimescale")
	proto.RegisterType((*CCSUsrMsg_CurrentTimescale)(nil), "CCSUsrMsg_CurrentTimescale")
	proto.RegisterType((*CCSUsrMsg_AchievementEvent)(nil), "CCSUsrMsg_AchievementEvent")
	proto.RegisterType((*CCSUsrMsg_MatchEndConditions)(nil), "CCSUsrMsg_MatchEndConditions")
	proto.RegisterType((*CCSUsrMsg_DisplayInventory)(nil), "CCSUsrMsg_DisplayInventory")
	proto.RegisterType((*CCSUsrMsg_CallVoteFailed)(nil), "CCSUsrMsg_CallVoteFailed")
	proto.RegisterType((*CCSUsrMsg_VoteStart)(nil), "CCSUsrMsg_VoteStart")
	proto.RegisterType((*CCSUsrMsg_VotePass)(nil), "CCSUsrMsg_VotePass")
	proto.RegisterType((*CCSUsrMsg_VoteFailed)(nil), "CCSUsrMsg_VoteFailed")
	proto.RegisterType((*CCSUsrMsg_VoteSetup)(nil), "CCSUsrMsg_VoteSetup")
	proto.RegisterType((*CCSUsrMsg_SendLastKillerDamageToClient)(nil), "CCSUsrMsg_SendLastKillerDamageToClient")
	proto.RegisterType((*CCSUsrMsg_ItemPickup)(nil), "CCSUsrMsg_ItemPickup")
	proto.RegisterType((*CCSUsrMsg_ShowMenu)(nil), "CCSUsrMsg_ShowMenu")
	proto.RegisterType((*CCSUsrMsg_BarTime)(nil), "CCSUsrMsg_BarTime")
	proto.RegisterType((*CCSUsrMsg_AmmoDenied)(nil), "CCSUsrMsg_AmmoDenied")
	proto.RegisterType((*CCSUsrMsg_MarkAchievement)(nil), "CCSUsrMsg_MarkAchievement")
	proto.RegisterType((*CCSUsrMsg_ItemDrop)(nil), "CCSUsrMsg_ItemDrop")
	proto.RegisterType((*CCSUsrMsg_GlowPropTurnOff)(nil), "CCSUsrMsg_GlowPropTurnOff")
	proto.RegisterType((*CCSUsrMsg_RoundBackupFilenames)(nil), "CCSUsrMsg_RoundBackupFilenames")
	proto.RegisterType((*CCSUsrMsg_ResetHud)(nil), "CCSUsrMsg_ResetHud")
	proto.RegisterType((*CCSUsrMsg_GameTitle)(nil), "CCSUsrMsg_GameTitle")
	proto.RegisterType((*CCSUsrMsg_RequestState)(nil), "CCSUsrMsg_RequestState")
	proto.RegisterType((*CCSUsrMsg_StopSpectatorMode)(nil), "CCSUsrMsg_StopSpectatorMode")
	proto.RegisterType((*CCSUsrMsg_DisconnectToLobby)(nil), "CCSUsrMsg_DisconnectToLobby")
	proto.RegisterType((*CCSUsrMsg_WarmupHasEnded)(nil), "CCSUsrMsg_WarmupHasEnded")
	proto.RegisterType((*CCSUsrMsg_ClientInfo)(nil), "CCSUsrMsg_ClientInfo")
	proto.RegisterEnum("ECstrike15UserMessages", ECstrike15UserMessages_name, ECstrike15UserMessages_value)
}

func init() { proto.RegisterFile("cstrike15_usermessages_public.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x57, 0x5f, 0x73, 0x1b, 0x49,
	0x11, 0x47, 0x52, 0xec, 0x58, 0xe3, 0xd8, 0x1e, 0x6f, 0x62, 0xc7, 0x71, 0x72, 0x77, 0xce, 0x26,
	0x97, 0x84, 0x3b, 0x70, 0x2e, 0xbe, 0x04, 0x92, 0x82, 0xa2, 0xca, 0x91, 0x1d, 0xc7, 0x75, 0x71,
	0x91, 0xf3, 0x9f, 0x00, 0x55, 0x50, 0xcb, 0x48, 0x3b, 0x92, 0xe6, 0xbc, 0xbb, 0xb3, 0xcc, 0xcc,
	0xda, 0x16, 0x4f, 0x14, 0xc5, 0x1b, 0xef, 0x3c, 0x52, 0xc5, 0x97, 0xe1, 0x23, 0xf0, 0xcc, 0x47,
	0xa1, 0xe7, 0xcf, 0x6a, 0x46, 0xb2, 0x73, 0x45, 0xdd, 0x8b, 0xad, 0xed, 0xe9, 0xe9, 0xff, 0xfd,
	0xeb, 0x1e, 0xf4, 0xa0, 0x27, 0x95, 0x60, 0xa7, 0xf4, 0xd9, 0x8b, 0xa4, 0x92, 0x54, 0xe4, 0x54,
	0x4a, 0x32, 0xa0, 0x32, 0x29, 0xab, 0x6e, 0xc6, 0x7a, 0x9b, 0xa5, 0xe0, 0x8a, 0xaf, 0x6f, 0x0c,
	0x38, 0x1f, 0x64, 0xf4, 0xa9, 0xf9, 0xea, 0x56, 0xfd, 0xa7, 0x29, 0x95, 0x3d, 0xc1, 0x4a, 0xc5,
	0x85, 0xe3, 0x58, 0x2b, 0xa8, 0xba, 0xf2, 0x6e, 0xfc, 0xd7, 0x06, 0x8a, 0x3a, 0x9d, 0xa3, 0x13,
	0x29, 0x0e, 0xe4, 0x20, 0xf9, 0xb0, 0x77, 0xb2, 0x7f, 0x40, 0x8b, 0x2a, 0xba, 0x81, 0xae, 0x15,
	0x24, 0xa7, 0x6b, 0x8d, 0x8d, 0xc6, 0x93, 0xb6, 0xfe, 0x92, 0x43, 0x7e, 0xbe, 0xd6, 0x84, 0xaf,
	0xb9, 0xe8, 0x4b, 0x74, 0x5d, 0x56, 0xdd, 0x53, 0x3a, 0x92, 0x6b, 0xad, 0x8d, 0xd6, 0x93, 0xf9,
	0xad, 0xf5, 0xcd, 0xcb, 0x12, 0x36, 0x8f, 0x0c, 0xcb, 0xfa, 0x03, 0x34, 0x6b, 0x7f, 0x4d, 0x89,
	0x9c, 0x47, 0x2d, 0xf0, 0xcc, 0x48, 0x6c, 0xc7, 0xf7, 0x11, 0xf6, 0x12, 0xf6, 0x28, 0x1b, 0x50,
	0x11, 0x2d, 0xa0, 0x19, 0x41, 0x8a, 0x81, 0xe5, 0x9f, 0x89, 0x37, 0xd0, 0x92, 0x67, 0x39, 0x16,
	0x84, 0x15, 0x9a, 0x43, 0xe9, 0x1f, 0x8e, 0xe3, 0x3e, 0x5a, 0xf6, 0x1c, 0x6f, 0xab, 0xf4, 0x98,
	0x5e, 0x28, 0xad, 0x54, 0xc1, 0x7f, 0xab, 0x34, 0x3e, 0x09, 0x59, 0x8e, 0xc8, 0xc8, 0xb0, 0x2c,
	0xa1, 0xeb, 0xb4, 0x50, 0x09, 0x4b, 0x2f, 0xac, 0xa0, 0xf1, 0x9d, 0x66, 0xed, 0x7b, 0x6f, 0x48,
	0x14, 0xb8, 0xaa, 0x7d, 0xbf, 0x89, 0xe6, 0xf5, 0x19, 0xc9, 0x32, 0x43, 0xbc, 0xa6, 0x89, 0xf1,
	0x77, 0x61, 0x08, 0x9d, 0xd8, 0xad, 0x2b, 0xe5, 0x9a, 0x4b, 0x36, 0x8a, 0x18, 0xcd, 0xe5, 0xc0,
	0x6e, 0x42, 0xd2, 0x32, 0x9a, 0x16, 0xd1, 0x6c, 0x49, 0x04, 0xc9, 0x25, 0x88, 0x6d, 0xc1, 0xf7,
	0x94, 0xae, 0x19, 0xa3, 0xeb, 0x79, 0xe8, 0x82, 0x56, 0x04, 0xff, 0xb5, 0x2a, 0x2d, 0x2b, 0x95,
	0xca, 0xa9, 0xf2, 0xa2, 0x74, 0x86, 0xda, 0xf1, 0x7f, 0x1b, 0x61, 0x84, 0x21, 0x38, 0xee, 0x16,
	0x08, 0x2e, 0x0a, 0x9a, 0xb9, 0x5b, 0xeb, 0xa8, 0x55, 0x72, 0x69, 0xec, 0x9b, 0xdf, 0x5a, 0xd8,
	0xec, 0x00, 0xd3, 0x07, 0xda, 0x83, 0x2a, 0xda, 0xda, 0x89, 0x6e, 0x83, 0xf1, 0x99, 0x78, 0x66,
	0x4c, 0x9d, 0xdf, 0x6a, 0x9b, 0xc3, 0xc3, 0xbd, 0xd7, 0xdb, 0xee, 0x60, 0xcb, 0x84, 0x62, 0xe2,
	0x00, 0x6c, 0xa0, 0xfd, 0x3e, 0xdc, 0x37, 0x96, 0xcf, 0x44, 0xb7, 0xd0, 0x8d, 0x3e, 0x49, 0x69,
	0xc2, 0x8a, 0x44, 0x31, 0x70, 0x7a, 0x16, 0xa8, 0xcd, 0x68, 0x05, 0x2d, 0x18, 0x2a, 0xaf, 0x94,
	0x25, 0x5f, 0x37, 0xe4, 0x65, 0xd4, 0x1e, 0xf2, 0x2c, 0xb5, 0xa4, 0xb6, 0x21, 0x81, 0xb9, 0xfd,
	0x0b, 0x4b, 0x40, 0x86, 0x50, 0xe7, 0x69, 0xde, 0xe4, 0xf6, 0x8f, 0x61, 0x81, 0x1c, 0x0d, 0xc9,
	0x29, 0x35, 0x0e, 0xf2, 0x3c, 0x27, 0x45, 0xea, 0x1c, 0xbc, 0x8d, 0x96, 0x32, 0xde, 0x23, 0x59,
	0x42, 0xf2, 0x32, 0x63, 0xaa, 0x4a, 0xa9, 0x71, 0xd6, 0xa8, 0xeb, 0x0b, 0xfa, 0xa7, 0x8a, 0x16,
	0xbd, 0x91, 0x71, 0xb1, 0xa9, 0xf3, 0x93, 0x56, 0x82, 0x28, 0xc6, 0x0b, 0xe3, 0x5b, 0x33, 0xfe,
	0x3d, 0x5a, 0xf4, 0x1a, 0xde, 0x80, 0xd1, 0x13, 0x3c, 0x56, 0xc3, 0x84, 0xdd, 0x4d, 0x43, 0x82,
	0x32, 0xed, 0x67, 0x64, 0x20, 0x8d, 0xdc, 0x99, 0x68, 0x15, 0xb5, 0x20, 0x5e, 0x97, 0xc2, 0x15,
	0xff, 0x2a, 0xcc, 0xd0, 0x61, 0x95, 0x77, 0x33, 0xaa, 0xaf, 0xb2, 0x22, 0xa5, 0x41, 0x01, 0xa5,
	0x44, 0x91, 0x2b, 0xe5, 0xc6, 0x07, 0x68, 0xd5, 0xdf, 0xef, 0x64, 0x5c, 0xd2, 0x0e, 0x29, 0xb5,
	0x65, 0xfa, 0xda, 0x90, 0xc8, 0xa1, 0x11, 0xb2, 0x30, 0x61, 0xb3, 0x15, 0x04, 0x75, 0xd6, 0x17,
	0x3c, 0x4f, 0xca, 0x8c, 0x8c, 0xa8, 0xb0, 0x85, 0x1e, 0x1f, 0xa1, 0x7b, 0x57, 0x8b, 0xdb, 0x61,
	0x02, 0x72, 0xfa, 0xc3, 0x84, 0x7e, 0x81, 0x6e, 0x06, 0x39, 0xa2, 0x45, 0xba, 0x5d, 0xa5, 0x8c,
	0x6b, 0x5e, 0x41, 0xe0, 0x47, 0x22, 0x79, 0xe5, 0x72, 0xd5, 0x8e, 0xff, 0x10, 0x36, 0xd5, 0x21,
	0x39, 0xb7, 0xac, 0xe0, 0x74, 0xc9, 0x54, 0x6f, 0xe8, 0xeb, 0x1c, 0x7a, 0x4c, 0xb7, 0x98, 0xd5,
	0x1a, 0xda, 0x61, 0xd3, 0xb8, 0x8a, 0x16, 0xcf, 0x38, 0xeb, 0xd1, 0xa4, 0xcf, 0x32, 0x6a, 0x9a,
	0xed, 0x9a, 0x11, 0xff, 0xaf, 0x46, 0x68, 0xcb, 0x07, 0xcd, 0x72, 0x40, 0xe4, 0x69, 0xf4, 0x02,
	0xdd, 0xb0, 0x26, 0x27, 0x39, 0x7c, 0x4a, 0xd0, 0xa3, 0x11, 0xee, 0xb3, 0xcd, 0x2b, 0x78, 0x37,
	0xdf, 0x1b, 0x46, 0x73, 0xed, 0x0e, 0x5a, 0xae, 0xaf, 0xf1, 0x34, 0x01, 0x45, 0x90, 0x3e, 0xdb,
	0xe8, 0xeb, 0x2f, 0x11, 0x0a, 0x18, 0xa1, 0x04, 0x07, 0x60, 0x45, 0x22, 0xaa, 0x0c, 0xa0, 0x58,
	0xeb, 0xf0, 0x95, 0xd3, 0x25, 0x85, 0xd3, 0x6a, 0xbc, 0x89, 0xdf, 0x85, 0x25, 0xb1, 0x43, 0x72,
	0x40, 0x6f, 0xed, 0x31, 0xc9, 0x21, 0x4c, 0x75, 0xa7, 0x3f, 0x41, 0x37, 0x59, 0xd1, 0x07, 0x3c,
	0x87, 0x36, 0x4d, 0xce, 0xb9, 0x80, 0xda, 0xf3, 0x3d, 0x3c, 0x1f, 0xf4, 0x70, 0xfc, 0xdb, 0xd0,
	0xe1, 0x43, 0x1d, 0xef, 0x1a, 0xfe, 0x2e, 0x61, 0x47, 0x2f, 0x63, 0x10, 0x56, 0x1f, 0xd3, 0xef,
	0x07, 0xaa, 0x38, 0x0e, 0x53, 0xf5, 0x96, 0x15, 0xea, 0x0a, 0xe8, 0x7d, 0x84, 0x56, 0x3c, 0xcf,
	0x37, 0x74, 0x34, 0x66, 0x83, 0x8c, 0x0e, 0xe1, 0xb7, 0x8d, 0x74, 0x3b, 0xfe, 0x4f, 0x13, 0x3d,
	0xf4, 0x8c, 0xef, 0x05, 0xef, 0xc1, 0xd8, 0x3a, 0x2a, 0xb9, 0x52, 0x34, 0xdd, 0x85, 0x54, 0xab,
	0xd1, 0x49, 0x09, 0x4d, 0x40, 0xa3, 0x08, 0xa1, 0x82, 0x9e, 0x27, 0x95, 0xf9, 0x32, 0x4a, 0xe6,
	0xa2, 0x6f, 0xd1, 0x22, 0x35, 0x3c, 0x8e, 0xac, 0xe3, 0xa0, 0xd3, 0xf7, 0x6a, 0xf3, 0xff, 0x11,
	0xb9, 0x79, 0x05, 0x6d, 0xfd, 0xdf, 0x50, 0x27, 0x1f, 0x51, 0xef, 0x54, 0x79, 0x80, 0x87, 0x48,
	0xf5, 0x32, 0x22, 0x25, 0x90, 0x7c, 0xec, 0xb8, 0x60, 0x03, 0x80, 0xbc, 0x0b, 0xd7, 0xfe, 0x9e,
	0x32, 0x32, 0x95, 0x18, 0x52, 0xfe, 0xec, 0x90, 0x12, 0x52, 0x02, 0x93, 0x2f, 0xa3, 0xc0, 0x32,
	0x5b, 0x13, 0x52, 0xda, 0xd7, 0x0b, 0x80, 0x81, 0xc7, 0x39, 0x40, 0xea, 0xc8, 0x95, 0x1b, 0x34,
	0x61, 0x52, 0x9f, 0xcd, 0x99, 0x33, 0x40, 0xd4, 0xe0, 0xac, 0xf7, 0xdc, 0xc0, 0xe7, 0x5c, 0xfc,
	0x2a, 0xc4, 0x87, 0x43, 0x9a, 0x71, 0x92, 0xee, 0x1a, 0x78, 0x0e, 0x9a, 0xa8, 0x31, 0x56, 0xdf,
	0x53, 0xa4, 0x60, 0xb9, 0xab, 0xc3, 0xc7, 0x61, 0xee, 0xb6, 0xd3, 0xef, 0x2a, 0xa9, 0x0e, 0x78,
	0x01, 0x23, 0x7d, 0xaa, 0x18, 0xe3, 0xc3, 0x70, 0x38, 0x7d, 0xc3, 0xb2, 0xac, 0x43, 0x72, 0xe3,
	0x5f, 0x57, 0xea, 0xbe, 0x70, 0xb3, 0xdc, 0x4c, 0x02, 0x26, 0x24, 0x00, 0x3e, 0x11, 0x03, 0x5a,
	0xd7, 0x19, 0xd8, 0x2d, 0x69, 0x8f, 0x17, 0x69, 0x4d, 0xb6, 0xb8, 0xf6, 0xf7, 0x06, 0x5a, 0x0f,
	0xba, 0x80, 0x4a, 0xc0, 0x9f, 0xf4, 0x18, 0xe0, 0x55, 0x02, 0x90, 0x53, 0xdd, 0x78, 0xa9, 0xa5,
	0x19, 0xcc, 0x35, 0x44, 0xa3, 0xa6, 0x19, 0x7d, 0x82, 0x56, 0x6a, 0x30, 0x48, 0x04, 0x25, 0x99,
	0x3e, 0x4f, 0x40, 0x85, 0xc3, 0x7c, 0xb8, 0x09, 0x75, 0x47, 0x45, 0xc9, 0x33, 0xa2, 0x9b, 0x47,
	0x8d, 0x4a, 0xea, 0x92, 0xb4, 0x86, 0xb0, 0x04, 0x23, 0x54, 0x02, 0x5d, 0x5c, 0x38, 0x30, 0xb7,
	0x33, 0xe0, 0xeb, 0xd0, 0x98, 0x4e, 0x25, 0x04, 0x44, 0xce, 0x1b, 0x03, 0x2e, 0xf4, 0x2a, 0x31,
	0x6d, 0x48, 0xfc, 0x6d, 0x78, 0x69, 0xbb, 0x37, 0x64, 0xf4, 0x8c, 0xe6, 0x70, 0x71, 0xf7, 0x0c,
	0xfe, 0x68, 0xf4, 0x23, 0x9e, 0xe6, 0x42, 0x04, 0x5d, 0xd1, 0x33, 0x81, 0x6d, 0xd6, 0x29, 0xd1,
	0x19, 0xd6, 0x85, 0x65, 0xa3, 0x22, 0x42, 0x78, 0x3e, 0x20, 0x80, 0x88, 0xbb, 0x45, 0xda, 0x81,
	0xe0, 0x31, 0xed, 0xae, 0xb4, 0x03, 0x8d, 0x0c, 0x32, 0x96, 0x33, 0xe5, 0xa3, 0x9e, 0x97, 0x80,
	0x2f, 0x17, 0x42, 0xa3, 0xac, 0xf4, 0x38, 0x0d, 0xd4, 0x73, 0x56, 0x58, 0xd6, 0x56, 0xc0, 0xaa,
	0xdd, 0xb0, 0x54, 0x53, 0xa8, 0x30, 0xa1, 0xc2, 0x44, 0x30, 0xa9, 0xab, 0x6c, 0xbf, 0xd0, 0x3e,
	0x70, 0x31, 0x32, 0x35, 0x6a, 0x69, 0xae, 0x19, 0x03, 0x9b, 0x6d, 0x19, 0xbd, 0x44, 0x6b, 0x41,
	0xec, 0x60, 0xad, 0xf9, 0xc0, 0x15, 0x7d, 0x43, 0x00, 0x97, 0x53, 0x5d, 0x49, 0x90, 0x22, 0x39,
	0x9e, 0xa3, 0x1a, 0x3c, 0xc6, 0x23, 0x34, 0xfe, 0xe7, 0x14, 0x58, 0x2b, 0x7a, 0xa4, 0xd3, 0x63,
	0x21, 0x86, 0xe4, 0xbe, 0x6e, 0xeb, 0x85, 0xab, 0x59, 0x43, 0xea, 0x19, 0xf0, 0x86, 0x99, 0xd5,
	0x03, 0x02, 0xac, 0x4c, 0xf4, 0xee, 0x69, 0x06, 0x81, 0x0e, 0x40, 0x4a, 0x15, 0x58, 0x21, 0x0d,
	0x71, 0xc6, 0x10, 0x61, 0x6a, 0x70, 0x35, 0x04, 0xe3, 0xb5, 0x78, 0x43, 0x9f, 0xad, 0xe9, 0x4c,
	0x26, 0x23, 0x40, 0xee, 0x82, 0x27, 0x5a, 0xb6, 0xed, 0x47, 0x58, 0x0d, 0xa2, 0x49, 0xfb, 0xde,
	0x03, 0x0c, 0x4c, 0x99, 0x37, 0x61, 0x4d, 0xf3, 0x92, 0x35, 0xad, 0xab, 0xac, 0xb1, 0xb3, 0xea,
	0x39, 0xba, 0x35, 0x29, 0xdd, 0x05, 0x6d, 0x52, 0xbe, 0x0f, 0xa1, 0x0d, 0xda, 0xd3, 0x4b, 0x31,
	0xa3, 0xaa, 0x2a, 0x75, 0x6d, 0x03, 0x9c, 0xe9, 0x86, 0x87, 0x3d, 0x88, 0x49, 0x59, 0xd1, 0x1a,
	0x7a, 0xff, 0xd6, 0x40, 0x8f, 0x26, 0xc7, 0xf3, 0x3b, 0x22, 0x95, 0x6e, 0x63, 0x2a, 0xec, 0xf4,
	0x39, 0xe6, 0x1d, 0x33, 0x19, 0x74, 0x1c, 0x8a, 0x2a, 0x4f, 0x86, 0x4c, 0xc9, 0x64, 0xc0, 0xa0,
	0x04, 0x7c, 0x8d, 0xa5, 0x86, 0xd3, 0x51, 0x9b, 0x6e, 0xe5, 0xf1, 0xdc, 0x0a, 0x16, 0xb3, 0xc2,
	0x97, 0x99, 0xe3, 0xb6, 0x54, 0x5b, 0x66, 0x0f, 0x43, 0x6f, 0xf7, 0x15, 0xcd, 0xdf, 0xb3, 0xde,
	0x29, 0x18, 0x0e, 0xde, 0x32, 0xf8, 0x72, 0xf3, 0xe4, 0x77, 0x13, 0x3b, 0x37, 0x3c, 0x4e, 0xcc,
	0xb3, 0x05, 0x9c, 0xeb, 0x6a, 0x2d, 0x67, 0x24, 0x63, 0x69, 0x22, 0x33, 0x6e, 0xe6, 0x4a, 0xad,
	0xcb, 0x96, 0x67, 0xb8, 0x9b, 0xe9, 0xea, 0x87, 0x7b, 0x3a, 0xd6, 0xac, 0x18, 0xd8, 0x1c, 0x4c,
	0x3e, 0x24, 0x5e, 0x13, 0xa1, 0xfb, 0x7b, 0x5c, 0x90, 0x56, 0xfb, 0xe3, 0xd0, 0xc6, 0xed, 0x3c,
	0xe7, 0x3b, 0xb4, 0x60, 0x90, 0x11, 0x0d, 0x9d, 0xf0, 0xb5, 0x5f, 0x63, 0x69, 0xfc, 0x15, 0xba,
	0x13, 0xf6, 0xa9, 0x38, 0x0d, 0xda, 0xff, 0xaa, 0xce, 0x6f, 0x03, 0xc2, 0x44, 0x93, 0xee, 0xef,
	0x08, 0x5e, 0xea, 0xe4, 0x6a, 0xe7, 0x99, 0xdd, 0x8e, 0x5a, 0x1a, 0x1f, 0x52, 0x4a, 0xd4, 0xd0,
	0xee, 0x18, 0xf1, 0x97, 0xa1, 0x9a, 0xbd, 0x8c, 0x9f, 0xc3, 0x94, 0x2b, 0x8f, 0x2b, 0x51, 0xfc,
	0xba, 0xdf, 0x9f, 0xc6, 0xf7, 0xb8, 0x8b, 0x3e, 0x0d, 0x26, 0x81, 0x06, 0x83, 0xd7, 0x44, 0x47,
	0xf8, 0x8d, 0xdb, 0x90, 0xa4, 0x47, 0x9f, 0x31, 0x18, 0xd9, 0x35, 0x74, 0x5c, 0xb5, 0xe3, 0x65,
	0xca, 0x56, 0x2d, 0x50, 0x0a, 0x58, 0x8a, 0x82, 0xf5, 0xea, 0xc1, 0xc4, 0xf6, 0x46, 0x25, 0x55,
	0xf0, 0xe8, 0x30, 0x6f, 0x3a, 0xfd, 0xdb, 0x22, 0x04, 0x64, 0x3a, 0xa8, 0xd0, 0x3d, 0xb8, 0x7c,
	0xcc, 0x94, 0xdd, 0x7a, 0xd3, 0x2a, 0xcf, 0x47, 0xce, 0xdc, 0xc7, 0x93, 0x83, 0x0b, 0x96, 0x74,
	0xa9, 0xa0, 0xfd, 0xd5, 0x25, 0xc6, 0x9f, 0xa0, 0xbb, 0x41, 0x49, 0x28, 0x5e, 0x1e, 0x95, 0x30,
	0xde, 0x34, 0xb6, 0x1f, 0xc0, 0xec, 0xf9, 0x5e, 0x6e, 0x40, 0x33, 0x98, 0x3c, 0x05, 0xb0, 0x1f,
	0xf3, 0x77, 0xbc, 0xdb, 0x1d, 0x4d, 0x73, 0xff, 0x38, 0xc4, 0xae, 0xdf, 0x10, 0x91, 0x57, 0xe5,
	0x5b, 0x22, 0x01, 0x73, 0x69, 0x3a, 0xcd, 0xfa, 0x79, 0x58, 0x1b, 0xb6, 0x5f, 0xf6, 0x8b, 0x3e,
	0x9f, 0x62, 0xfb, 0xe2, 0x1f, 0x6d, 0xb4, 0xba, 0xdb, 0xa9, 0x5f, 0xf7, 0x27, 0x80, 0x94, 0x07,
	0xee, 0x81, 0x0e, 0xbb, 0xc5, 0x62, 0xe7, 0x28, 0x39, 0x39, 0x18, 0x3f, 0xa6, 0x71, 0x03, 0x42,
	0x7c, 0xc3, 0xd2, 0xec, 0xf3, 0x18, 0xeb, 0xf7, 0xd0, 0xbc, 0xa5, 0x98, 0xd7, 0x30, 0x6e, 0x01,
	0xc0, 0x2c, 0x58, 0x82, 0x7b, 0xfc, 0xe2, 0x6b, 0x9e, 0xe4, 0x5e, 0xa5, 0x78, 0xc6, 0x0b, 0xaf,
	0x1f, 0xaa, 0x78, 0xd6, 0xb3, 0xb9, 0x07, 0x25, 0xbe, 0xee, 0xf5, 0xd9, 0xc7, 0x22, 0x9e, 0xf3,
	0x17, 0xeb, 0x74, 0x62, 0x0d, 0x57, 0x4b, 0xce, 0xaa, 0x3a, 0x7b, 0x18, 0x79, 0xc3, 0xcc, 0x2b,
	0x0c, 0xdf, 0x80, 0x02, 0x44, 0x96, 0xa0, 0x1f, 0x4d, 0x78, 0xc1, 0xcb, 0xb6, 0xcf, 0x1c, 0xbc,
	0x08, 0x08, 0x11, 0x59, 0x4a, 0xf8, 0xd2, 0xc0, 0x4b, 0xd1, 0x3d, 0x08, 0xfb, 0x25, 0xba, 0x7d,
	0x81, 0x60, 0xec, 0xb5, 0x8f, 0x9f, 0x12, 0x78, 0x39, 0x30, 0xd3, 0xbd, 0x19, 0x70, 0xe4, 0x19,
	0xc7, 0xbb, 0x3b, 0xbe, 0xe9, 0x75, 0x86, 0x35, 0x85, 0x6f, 0x79, 0xeb, 0x2c, 0xe6, 0xe1, 0x15,
	0x7f, 0x7d, 0xbc, 0x35, 0xe3, 0x55, 0xaf, 0xa7, 0xde, 0x64, 0xf1, 0x6d, 0x98, 0xff, 0xcb, 0x96,
	0x16, 0x2c, 0xb8, 0x78, 0x2d, 0x7a, 0x88, 0x36, 0x2c, 0xf9, 0xe3, 0xbb, 0x27, 0xbe, 0x13, 0xda,
	0xe3, 0x97, 0x33, 0xbc, 0xee, 0x85, 0x06, 0x9b, 0x17, 0xbe, 0x0b, 0xeb, 0xcb, 0x8a, 0x25, 0x5b,
	0x01, 0xc7, 0x30, 0x08, 0xec, 0xd1, 0xbd, 0xe8, 0x2e, 0xba, 0xed, 0xe2, 0x32, 0xdd, 0x04, 0xf8,
	0x13, 0x9f, 0x6b, 0xb7, 0x9f, 0xe1, 0x4f, 0x61, 0x9b, 0x5c, 0x75, 0x1e, 0x4f, 0x6d, 0x57, 0xf8,
	0x33, 0x7f, 0x36, 0xbd, 0xec, 0xe0, 0x0d, 0x7f, 0x36, 0xbd, 0xd3, 0xe0, 0xfb, 0x3e, 0x73, 0x97,
	0x97, 0x13, 0x1c, 0x7b, 0x0b, 0x2f, 0x35, 0x1e, 0x7e, 0x10, 0x98, 0x33, 0xb5, 0x63, 0xe0, 0xcf,
	0x01, 0xe0, 0x6f, 0xd9, 0xb3, 0xc9, 0x1e, 0xc4, 0x8f, 0x00, 0xe0, 0x71, 0x5d, 0x2a, 0x75, 0xcb,
	0xe1, 0xc7, 0x9e, 0x7f, 0x72, 0xdf, 0xc0, 0x3f, 0x0d, 0x6b, 0xc2, 0xad, 0x13, 0x78, 0x33, 0xe8,
	0x3c, 0x37, 0xc3, 0xf1, 0x53, 0x2f, 0x38, 0xb8, 0xfe, 0xd5, 0xd4, 0x75, 0x3d, 0x59, 0xf1, 0xb3,
	0xe8, 0x11, 0x8a, 0x7d, 0x41, 0x7e, 0x6c, 0x78, 0xe2, 0xaf, 0xbd, 0x48, 0x3f, 0xde, 0xf0, 0x8b,
	0xa0, 0x33, 0xdd, 0x38, 0xc3, 0x3f, 0xf3, 0xd9, 0x72, 0x73, 0x08, 0xff, 0xdc, 0x5f, 0xf6, 0x73,
	0x07, 0xbf, 0xf4, 0xe5, 0x30, 0x35, 0x64, 0xf0, 0x2b, 0x2f, 0xb7, 0x9e, 0x26, 0xf8, 0x17, 0x9e,
	0x7d, 0x6a, 0x58, 0xe0, 0x5f, 0xbe, 0x9e, 0x79, 0xdb, 0xf8, 0x4b, 0xe3, 0x47, 0xff, 0x0b, 0x00,
	0x00, 0xff, 0xff, 0x61, 0x9f, 0xc0, 0x3d, 0x7a, 0x14, 0x00, 0x00,
}
