// Code generated by protoc-gen-go.
// source: netmessages_public.proto
// DO NOT EDIT!

/*
Package netmessages_public is a generated protocol buffer package.

It is generated from these files:
	netmessages_public.proto

It has these top-level messages:
	CMsgVector
	CMsgVector2D
	CMsgQAngle
	CMsgRGBA
	CNETMsg_Tick
	CNETMsg_StringCmd
	CNETMsg_SignonState
	CMsg_CVars
	CNETMsg_SetConVar
	CNETMsg_NOP
	CNETMsg_Disconnect
	CNETMsg_File
	CSVCMsg_ServerInfo
	CSVCMsg_ClassInfo
	CSVCMsg_SendTable
	CSVCMsg_Print
	CSVCMsg_SetPause
	CSVCMsg_SetView
	CSVCMsg_CreateStringTable
	CSVCMsg_UpdateStringTable
	CSVCMsg_VoiceInit
	CSVCMsg_VoiceData
	CSVCMsg_FixAngle
	CSVCMsg_CrosshairAngle
	CSVCMsg_Prefetch
	CSVCMsg_BSPDecal
	CSVCMsg_GetCvarValue
	CSVCMsg_Menu
	CSVCMsg_UserMessage
	CSVCMsg_GameEvent
	CSVCMsg_GameEventList
	CSVCMsg_TempEntities
	CSVCMsg_PacketEntities
	CSVCMsg_Sounds
*/
package cstrikeproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NET_Messages int32

const (
	NET_Messages_net_NOP         NET_Messages = 0
	NET_Messages_net_Disconnect  NET_Messages = 1
	NET_Messages_net_File        NET_Messages = 2
	NET_Messages_net_Tick        NET_Messages = 4
	NET_Messages_net_StringCmd   NET_Messages = 5
	NET_Messages_net_SetConVar   NET_Messages = 6
	NET_Messages_net_SignonState NET_Messages = 7
)

var NET_Messages_name = map[int32]string{
	0: "net_NOP",
	1: "net_Disconnect",
	2: "net_File",
	4: "net_Tick",
	5: "net_StringCmd",
	6: "net_SetConVar",
	7: "net_SignonState",
}
var NET_Messages_value = map[string]int32{
	"net_NOP":         0,
	"net_Disconnect":  1,
	"net_File":        2,
	"net_Tick":        4,
	"net_StringCmd":   5,
	"net_SetConVar":   6,
	"net_SignonState": 7,
}

func (x NET_Messages) Enum() *NET_Messages {
	p := new(NET_Messages)
	*p = x
	return p
}
func (x NET_Messages) String() string {
	return proto.EnumName(NET_Messages_name, int32(x))
}
func (x *NET_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NET_Messages_value, data, "NET_Messages")
	if err != nil {
		return err
	}
	*x = NET_Messages(value)
	return nil
}
func (NET_Messages) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type SVC_Messages int32

const (
	SVC_Messages_svc_ServerInfo        SVC_Messages = 8
	SVC_Messages_svc_SendTable         SVC_Messages = 9
	SVC_Messages_svc_ClassInfo         SVC_Messages = 10
	SVC_Messages_svc_SetPause          SVC_Messages = 11
	SVC_Messages_svc_CreateStringTable SVC_Messages = 12
	SVC_Messages_svc_UpdateStringTable SVC_Messages = 13
	SVC_Messages_svc_VoiceInit         SVC_Messages = 14
	SVC_Messages_svc_VoiceData         SVC_Messages = 15
	SVC_Messages_svc_Print             SVC_Messages = 16
	SVC_Messages_svc_Sounds            SVC_Messages = 17
	SVC_Messages_svc_SetView           SVC_Messages = 18
	SVC_Messages_svc_FixAngle          SVC_Messages = 19
	SVC_Messages_svc_CrosshairAngle    SVC_Messages = 20
	SVC_Messages_svc_BSPDecal          SVC_Messages = 21
	SVC_Messages_svc_UserMessage       SVC_Messages = 23
	SVC_Messages_svc_GameEvent         SVC_Messages = 25
	SVC_Messages_svc_PacketEntities    SVC_Messages = 26
	SVC_Messages_svc_TempEntities      SVC_Messages = 27
	SVC_Messages_svc_Prefetch          SVC_Messages = 28
	SVC_Messages_svc_Menu              SVC_Messages = 29
	SVC_Messages_svc_GameEventList     SVC_Messages = 30
	SVC_Messages_svc_GetCvarValue      SVC_Messages = 31
)

var SVC_Messages_name = map[int32]string{
	8:  "svc_ServerInfo",
	9:  "svc_SendTable",
	10: "svc_ClassInfo",
	11: "svc_SetPause",
	12: "svc_CreateStringTable",
	13: "svc_UpdateStringTable",
	14: "svc_VoiceInit",
	15: "svc_VoiceData",
	16: "svc_Print",
	17: "svc_Sounds",
	18: "svc_SetView",
	19: "svc_FixAngle",
	20: "svc_CrosshairAngle",
	21: "svc_BSPDecal",
	23: "svc_UserMessage",
	25: "svc_GameEvent",
	26: "svc_PacketEntities",
	27: "svc_TempEntities",
	28: "svc_Prefetch",
	29: "svc_Menu",
	30: "svc_GameEventList",
	31: "svc_GetCvarValue",
}
var SVC_Messages_value = map[string]int32{
	"svc_ServerInfo":        8,
	"svc_SendTable":         9,
	"svc_ClassInfo":         10,
	"svc_SetPause":          11,
	"svc_CreateStringTable": 12,
	"svc_UpdateStringTable": 13,
	"svc_VoiceInit":         14,
	"svc_VoiceData":         15,
	"svc_Print":             16,
	"svc_Sounds":            17,
	"svc_SetView":           18,
	"svc_FixAngle":          19,
	"svc_CrosshairAngle":    20,
	"svc_BSPDecal":          21,
	"svc_UserMessage":       23,
	"svc_GameEvent":         25,
	"svc_PacketEntities":    26,
	"svc_TempEntities":      27,
	"svc_Prefetch":          28,
	"svc_Menu":              29,
	"svc_GameEventList":     30,
	"svc_GetCvarValue":      31,
}

func (x SVC_Messages) Enum() *SVC_Messages {
	p := new(SVC_Messages)
	*p = x
	return p
}
func (x SVC_Messages) String() string {
	return proto.EnumName(SVC_Messages_name, int32(x))
}
func (x *SVC_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SVC_Messages_value, data, "SVC_Messages")
	if err != nil {
		return err
	}
	*x = SVC_Messages(value)
	return nil
}
func (SVC_Messages) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type CMsgVector struct {
	X                *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z                *float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgVector) Reset()                    { *m = CMsgVector{} }
func (m *CMsgVector) String() string            { return proto.CompactTextString(m) }
func (*CMsgVector) ProtoMessage()               {}
func (*CMsgVector) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CMsgVector) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgVector) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgVector) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

type CMsgVector2D struct {
	X                *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgVector2D) Reset()                    { *m = CMsgVector2D{} }
func (m *CMsgVector2D) String() string            { return proto.CompactTextString(m) }
func (*CMsgVector2D) ProtoMessage()               {}
func (*CMsgVector2D) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CMsgVector2D) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgVector2D) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type CMsgQAngle struct {
	X                *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z                *float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgQAngle) Reset()                    { *m = CMsgQAngle{} }
func (m *CMsgQAngle) String() string            { return proto.CompactTextString(m) }
func (*CMsgQAngle) ProtoMessage()               {}
func (*CMsgQAngle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *CMsgQAngle) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgQAngle) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgQAngle) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

type CMsgRGBA struct {
	R                *int32 `protobuf:"varint,1,opt,name=r" json:"r,omitempty"`
	G                *int32 `protobuf:"varint,2,opt,name=g" json:"g,omitempty"`
	B                *int32 `protobuf:"varint,3,opt,name=b" json:"b,omitempty"`
	A                *int32 `protobuf:"varint,4,opt,name=a" json:"a,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgRGBA) Reset()                    { *m = CMsgRGBA{} }
func (m *CMsgRGBA) String() string            { return proto.CompactTextString(m) }
func (*CMsgRGBA) ProtoMessage()               {}
func (*CMsgRGBA) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CMsgRGBA) GetR() int32 {
	if m != nil && m.R != nil {
		return *m.R
	}
	return 0
}

func (m *CMsgRGBA) GetG() int32 {
	if m != nil && m.G != nil {
		return *m.G
	}
	return 0
}

func (m *CMsgRGBA) GetB() int32 {
	if m != nil && m.B != nil {
		return *m.B
	}
	return 0
}

func (m *CMsgRGBA) GetA() int32 {
	if m != nil && m.A != nil {
		return *m.A
	}
	return 0
}

type CNETMsg_Tick struct {
	Tick                            *uint32 `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	HostComputationtime             *uint32 `protobuf:"varint,4,opt,name=host_computationtime" json:"host_computationtime,omitempty"`
	HostComputationtimeStdDeviation *uint32 `protobuf:"varint,5,opt,name=host_computationtime_std_deviation" json:"host_computationtime_std_deviation,omitempty"`
	HostFramestarttimeStdDeviation  *uint32 `protobuf:"varint,6,opt,name=host_framestarttime_std_deviation" json:"host_framestarttime_std_deviation,omitempty"`
	XXX_unrecognized                []byte  `json:"-"`
}

func (m *CNETMsg_Tick) Reset()                    { *m = CNETMsg_Tick{} }
func (m *CNETMsg_Tick) String() string            { return proto.CompactTextString(m) }
func (*CNETMsg_Tick) ProtoMessage()               {}
func (*CNETMsg_Tick) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *CNETMsg_Tick) GetTick() uint32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

func (m *CNETMsg_Tick) GetHostComputationtime() uint32 {
	if m != nil && m.HostComputationtime != nil {
		return *m.HostComputationtime
	}
	return 0
}

func (m *CNETMsg_Tick) GetHostComputationtimeStdDeviation() uint32 {
	if m != nil && m.HostComputationtimeStdDeviation != nil {
		return *m.HostComputationtimeStdDeviation
	}
	return 0
}

func (m *CNETMsg_Tick) GetHostFramestarttimeStdDeviation() uint32 {
	if m != nil && m.HostFramestarttimeStdDeviation != nil {
		return *m.HostFramestarttimeStdDeviation
	}
	return 0
}

type CNETMsg_StringCmd struct {
	Command          *string `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CNETMsg_StringCmd) Reset()                    { *m = CNETMsg_StringCmd{} }
func (m *CNETMsg_StringCmd) String() string            { return proto.CompactTextString(m) }
func (*CNETMsg_StringCmd) ProtoMessage()               {}
func (*CNETMsg_StringCmd) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *CNETMsg_StringCmd) GetCommand() string {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return ""
}

type CNETMsg_SignonState struct {
	SignonState       *uint32  `protobuf:"varint,1,opt,name=signon_state" json:"signon_state,omitempty"`
	SpawnCount        *uint32  `protobuf:"varint,2,opt,name=spawn_count" json:"spawn_count,omitempty"`
	NumServerPlayers  *uint32  `protobuf:"varint,3,opt,name=num_server_players" json:"num_server_players,omitempty"`
	PlayersNetworkids []string `protobuf:"bytes,4,rep,name=players_networkids" json:"players_networkids,omitempty"`
	MapName           *string  `protobuf:"bytes,5,opt,name=map_name" json:"map_name,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *CNETMsg_SignonState) Reset()                    { *m = CNETMsg_SignonState{} }
func (m *CNETMsg_SignonState) String() string            { return proto.CompactTextString(m) }
func (*CNETMsg_SignonState) ProtoMessage()               {}
func (*CNETMsg_SignonState) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *CNETMsg_SignonState) GetSignonState() uint32 {
	if m != nil && m.SignonState != nil {
		return *m.SignonState
	}
	return 0
}

func (m *CNETMsg_SignonState) GetSpawnCount() uint32 {
	if m != nil && m.SpawnCount != nil {
		return *m.SpawnCount
	}
	return 0
}

func (m *CNETMsg_SignonState) GetNumServerPlayers() uint32 {
	if m != nil && m.NumServerPlayers != nil {
		return *m.NumServerPlayers
	}
	return 0
}

func (m *CNETMsg_SignonState) GetPlayersNetworkids() []string {
	if m != nil {
		return m.PlayersNetworkids
	}
	return nil
}

func (m *CNETMsg_SignonState) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

type CMsg_CVars struct {
	Cvars            []*CMsg_CVars_CVar `protobuf:"bytes,1,rep,name=cvars" json:"cvars,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMsg_CVars) Reset()                    { *m = CMsg_CVars{} }
func (m *CMsg_CVars) String() string            { return proto.CompactTextString(m) }
func (*CMsg_CVars) ProtoMessage()               {}
func (*CMsg_CVars) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *CMsg_CVars) GetCvars() []*CMsg_CVars_CVar {
	if m != nil {
		return m.Cvars
	}
	return nil
}

type CMsg_CVars_CVar struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsg_CVars_CVar) Reset()                    { *m = CMsg_CVars_CVar{} }
func (m *CMsg_CVars_CVar) String() string            { return proto.CompactTextString(m) }
func (*CMsg_CVars_CVar) ProtoMessage()               {}
func (*CMsg_CVars_CVar) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7, 0} }

func (m *CMsg_CVars_CVar) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsg_CVars_CVar) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CNETMsg_SetConVar struct {
	Convars          *CMsg_CVars `protobuf:"bytes,1,opt,name=convars" json:"convars,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CNETMsg_SetConVar) Reset()                    { *m = CNETMsg_SetConVar{} }
func (m *CNETMsg_SetConVar) String() string            { return proto.CompactTextString(m) }
func (*CNETMsg_SetConVar) ProtoMessage()               {}
func (*CNETMsg_SetConVar) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *CNETMsg_SetConVar) GetConvars() *CMsg_CVars {
	if m != nil {
		return m.Convars
	}
	return nil
}

type CNETMsg_NOP struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CNETMsg_NOP) Reset()                    { *m = CNETMsg_NOP{} }
func (m *CNETMsg_NOP) String() string            { return proto.CompactTextString(m) }
func (*CNETMsg_NOP) ProtoMessage()               {}
func (*CNETMsg_NOP) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

type CNETMsg_Disconnect struct {
	Text             *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CNETMsg_Disconnect) Reset()                    { *m = CNETMsg_Disconnect{} }
func (m *CNETMsg_Disconnect) String() string            { return proto.CompactTextString(m) }
func (*CNETMsg_Disconnect) ProtoMessage()               {}
func (*CNETMsg_Disconnect) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *CNETMsg_Disconnect) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CNETMsg_File struct {
	TransferId       *int32  `protobuf:"varint,1,opt,name=transfer_id" json:"transfer_id,omitempty"`
	FileName         *string `protobuf:"bytes,2,opt,name=file_name" json:"file_name,omitempty"`
	IsReplayDemoFile *bool   `protobuf:"varint,3,opt,name=is_replay_demo_file" json:"is_replay_demo_file,omitempty"`
	Deny             *bool   `protobuf:"varint,4,opt,name=deny" json:"deny,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CNETMsg_File) Reset()                    { *m = CNETMsg_File{} }
func (m *CNETMsg_File) String() string            { return proto.CompactTextString(m) }
func (*CNETMsg_File) ProtoMessage()               {}
func (*CNETMsg_File) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *CNETMsg_File) GetTransferId() int32 {
	if m != nil && m.TransferId != nil {
		return *m.TransferId
	}
	return 0
}

func (m *CNETMsg_File) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *CNETMsg_File) GetIsReplayDemoFile() bool {
	if m != nil && m.IsReplayDemoFile != nil {
		return *m.IsReplayDemoFile
	}
	return false
}

func (m *CNETMsg_File) GetDeny() bool {
	if m != nil && m.Deny != nil {
		return *m.Deny
	}
	return false
}

type CSVCMsg_ServerInfo struct {
	Protocol                  *int32   `protobuf:"varint,1,opt,name=protocol" json:"protocol,omitempty"`
	ServerCount               *int32   `protobuf:"varint,2,opt,name=server_count" json:"server_count,omitempty"`
	IsDedicated               *bool    `protobuf:"varint,3,opt,name=is_dedicated" json:"is_dedicated,omitempty"`
	IsOfficialValveServer     *bool    `protobuf:"varint,4,opt,name=is_official_valve_server" json:"is_official_valve_server,omitempty"`
	IsHltv                    *bool    `protobuf:"varint,5,opt,name=is_hltv" json:"is_hltv,omitempty"`
	IsReplay                  *bool    `protobuf:"varint,6,opt,name=is_replay" json:"is_replay,omitempty"`
	IsRedirectingToProxyRelay *bool    `protobuf:"varint,21,opt,name=is_redirecting_to_proxy_relay" json:"is_redirecting_to_proxy_relay,omitempty"`
	COs                       *int32   `protobuf:"varint,7,opt,name=c_os" json:"c_os,omitempty"`
	MapCrc                    *uint32  `protobuf:"fixed32,8,opt,name=map_crc" json:"map_crc,omitempty"`
	ClientCrc                 *uint32  `protobuf:"fixed32,9,opt,name=client_crc" json:"client_crc,omitempty"`
	StringTableCrc            *uint32  `protobuf:"fixed32,10,opt,name=string_table_crc" json:"string_table_crc,omitempty"`
	MaxClients                *int32   `protobuf:"varint,11,opt,name=max_clients" json:"max_clients,omitempty"`
	MaxClasses                *int32   `protobuf:"varint,12,opt,name=max_classes" json:"max_classes,omitempty"`
	PlayerSlot                *int32   `protobuf:"varint,13,opt,name=player_slot" json:"player_slot,omitempty"`
	TickInterval              *float32 `protobuf:"fixed32,14,opt,name=tick_interval" json:"tick_interval,omitempty"`
	GameDir                   *string  `protobuf:"bytes,15,opt,name=game_dir" json:"game_dir,omitempty"`
	MapName                   *string  `protobuf:"bytes,16,opt,name=map_name" json:"map_name,omitempty"`
	MapGroupName              *string  `protobuf:"bytes,17,opt,name=map_group_name" json:"map_group_name,omitempty"`
	SkyName                   *string  `protobuf:"bytes,18,opt,name=sky_name" json:"sky_name,omitempty"`
	HostName                  *string  `protobuf:"bytes,19,opt,name=host_name" json:"host_name,omitempty"`
	UgcMapId                  *uint64  `protobuf:"varint,22,opt,name=ugc_map_id" json:"ugc_map_id,omitempty"`
	XXX_unrecognized          []byte   `json:"-"`
}

func (m *CSVCMsg_ServerInfo) Reset()                    { *m = CSVCMsg_ServerInfo{} }
func (m *CSVCMsg_ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_ServerInfo) ProtoMessage()               {}
func (*CSVCMsg_ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *CSVCMsg_ServerInfo) GetProtocol() int32 {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetServerCount() int32 {
	if m != nil && m.ServerCount != nil {
		return *m.ServerCount
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetIsDedicated() bool {
	if m != nil && m.IsDedicated != nil {
		return *m.IsDedicated
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsOfficialValveServer() bool {
	if m != nil && m.IsOfficialValveServer != nil {
		return *m.IsOfficialValveServer
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsHltv() bool {
	if m != nil && m.IsHltv != nil {
		return *m.IsHltv
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsReplay() bool {
	if m != nil && m.IsReplay != nil {
		return *m.IsReplay
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsRedirectingToProxyRelay() bool {
	if m != nil && m.IsRedirectingToProxyRelay != nil {
		return *m.IsRedirectingToProxyRelay
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetCOs() int32 {
	if m != nil && m.COs != nil {
		return *m.COs
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMapCrc() uint32 {
	if m != nil && m.MapCrc != nil {
		return *m.MapCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetClientCrc() uint32 {
	if m != nil && m.ClientCrc != nil {
		return *m.ClientCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetStringTableCrc() uint32 {
	if m != nil && m.StringTableCrc != nil {
		return *m.StringTableCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMaxClients() int32 {
	if m != nil && m.MaxClients != nil {
		return *m.MaxClients
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMaxClasses() int32 {
	if m != nil && m.MaxClasses != nil {
		return *m.MaxClasses
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetPlayerSlot() int32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetTickInterval() float32 {
	if m != nil && m.TickInterval != nil {
		return *m.TickInterval
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetGameDir() string {
	if m != nil && m.GameDir != nil {
		return *m.GameDir
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetMapGroupName() string {
	if m != nil && m.MapGroupName != nil {
		return *m.MapGroupName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetSkyName() string {
	if m != nil && m.SkyName != nil {
		return *m.SkyName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetUgcMapId() uint64 {
	if m != nil && m.UgcMapId != nil {
		return *m.UgcMapId
	}
	return 0
}

type CSVCMsg_ClassInfo struct {
	CreateOnClient   *bool                      `protobuf:"varint,1,opt,name=create_on_client" json:"create_on_client,omitempty"`
	Classes          []*CSVCMsg_ClassInfoClassT `protobuf:"bytes,2,rep,name=classes" json:"classes,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CSVCMsg_ClassInfo) Reset()                    { *m = CSVCMsg_ClassInfo{} }
func (m *CSVCMsg_ClassInfo) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_ClassInfo) ProtoMessage()               {}
func (*CSVCMsg_ClassInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *CSVCMsg_ClassInfo) GetCreateOnClient() bool {
	if m != nil && m.CreateOnClient != nil {
		return *m.CreateOnClient
	}
	return false
}

func (m *CSVCMsg_ClassInfo) GetClasses() []*CSVCMsg_ClassInfoClassT {
	if m != nil {
		return m.Classes
	}
	return nil
}

type CSVCMsg_ClassInfoClassT struct {
	ClassId          *int32  `protobuf:"varint,1,opt,name=class_id" json:"class_id,omitempty"`
	DataTableName    *string `protobuf:"bytes,2,opt,name=data_table_name" json:"data_table_name,omitempty"`
	ClassName        *string `protobuf:"bytes,3,opt,name=class_name" json:"class_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_ClassInfoClassT) Reset()                    { *m = CSVCMsg_ClassInfoClassT{} }
func (m *CSVCMsg_ClassInfoClassT) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_ClassInfoClassT) ProtoMessage()               {}
func (*CSVCMsg_ClassInfoClassT) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13, 0} }

func (m *CSVCMsg_ClassInfoClassT) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *CSVCMsg_ClassInfoClassT) GetDataTableName() string {
	if m != nil && m.DataTableName != nil {
		return *m.DataTableName
	}
	return ""
}

func (m *CSVCMsg_ClassInfoClassT) GetClassName() string {
	if m != nil && m.ClassName != nil {
		return *m.ClassName
	}
	return ""
}

type CSVCMsg_SendTable struct {
	IsEnd            *bool                         `protobuf:"varint,1,opt,name=is_end" json:"is_end,omitempty"`
	NetTableName     *string                       `protobuf:"bytes,2,opt,name=net_table_name" json:"net_table_name,omitempty"`
	NeedsDecoder     *bool                         `protobuf:"varint,3,opt,name=needs_decoder" json:"needs_decoder,omitempty"`
	Props            []*CSVCMsg_SendTableSendpropT `protobuf:"bytes,4,rep,name=props" json:"props,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CSVCMsg_SendTable) Reset()                    { *m = CSVCMsg_SendTable{} }
func (m *CSVCMsg_SendTable) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SendTable) ProtoMessage()               {}
func (*CSVCMsg_SendTable) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *CSVCMsg_SendTable) GetIsEnd() bool {
	if m != nil && m.IsEnd != nil {
		return *m.IsEnd
	}
	return false
}

func (m *CSVCMsg_SendTable) GetNetTableName() string {
	if m != nil && m.NetTableName != nil {
		return *m.NetTableName
	}
	return ""
}

func (m *CSVCMsg_SendTable) GetNeedsDecoder() bool {
	if m != nil && m.NeedsDecoder != nil {
		return *m.NeedsDecoder
	}
	return false
}

func (m *CSVCMsg_SendTable) GetProps() []*CSVCMsg_SendTableSendpropT {
	if m != nil {
		return m.Props
	}
	return nil
}

type CSVCMsg_SendTableSendpropT struct {
	Type             *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	VarName          *string  `protobuf:"bytes,2,opt,name=var_name" json:"var_name,omitempty"`
	Flags            *int32   `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Priority         *int32   `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
	DtName           *string  `protobuf:"bytes,5,opt,name=dt_name" json:"dt_name,omitempty"`
	NumElements      *int32   `protobuf:"varint,6,opt,name=num_elements" json:"num_elements,omitempty"`
	LowValue         *float32 `protobuf:"fixed32,7,opt,name=low_value" json:"low_value,omitempty"`
	HighValue        *float32 `protobuf:"fixed32,8,opt,name=high_value" json:"high_value,omitempty"`
	NumBits          *int32   `protobuf:"varint,9,opt,name=num_bits" json:"num_bits,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSVCMsg_SendTableSendpropT) Reset()                    { *m = CSVCMsg_SendTableSendpropT{} }
func (m *CSVCMsg_SendTableSendpropT) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SendTableSendpropT) ProtoMessage()               {}
func (*CSVCMsg_SendTableSendpropT) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14, 0} }

func (m *CSVCMsg_SendTableSendpropT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetVarName() string {
	if m != nil && m.VarName != nil {
		return *m.VarName
	}
	return ""
}

func (m *CSVCMsg_SendTableSendpropT) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetDtName() string {
	if m != nil && m.DtName != nil {
		return *m.DtName
	}
	return ""
}

func (m *CSVCMsg_SendTableSendpropT) GetNumElements() int32 {
	if m != nil && m.NumElements != nil {
		return *m.NumElements
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetLowValue() float32 {
	if m != nil && m.LowValue != nil {
		return *m.LowValue
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetHighValue() float32 {
	if m != nil && m.HighValue != nil {
		return *m.HighValue
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetNumBits() int32 {
	if m != nil && m.NumBits != nil {
		return *m.NumBits
	}
	return 0
}

type CSVCMsg_Print struct {
	Text             *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_Print) Reset()                    { *m = CSVCMsg_Print{} }
func (m *CSVCMsg_Print) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_Print) ProtoMessage()               {}
func (*CSVCMsg_Print) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *CSVCMsg_Print) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CSVCMsg_SetPause struct {
	Paused           *bool  `protobuf:"varint,1,opt,name=paused" json:"paused,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_SetPause) Reset()                    { *m = CSVCMsg_SetPause{} }
func (m *CSVCMsg_SetPause) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SetPause) ProtoMessage()               {}
func (*CSVCMsg_SetPause) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *CSVCMsg_SetPause) GetPaused() bool {
	if m != nil && m.Paused != nil {
		return *m.Paused
	}
	return false
}

type CSVCMsg_SetView struct {
	EntityIndex      *int32 `protobuf:"varint,1,opt,name=entity_index" json:"entity_index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_SetView) Reset()                    { *m = CSVCMsg_SetView{} }
func (m *CSVCMsg_SetView) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SetView) ProtoMessage()               {}
func (*CSVCMsg_SetView) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *CSVCMsg_SetView) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

type CSVCMsg_CreateStringTable struct {
	Name              *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	MaxEntries        *int32  `protobuf:"varint,2,opt,name=max_entries" json:"max_entries,omitempty"`
	NumEntries        *int32  `protobuf:"varint,3,opt,name=num_entries" json:"num_entries,omitempty"`
	UserDataFixedSize *bool   `protobuf:"varint,4,opt,name=user_data_fixed_size" json:"user_data_fixed_size,omitempty"`
	UserDataSize      *int32  `protobuf:"varint,5,opt,name=user_data_size" json:"user_data_size,omitempty"`
	UserDataSizeBits  *int32  `protobuf:"varint,6,opt,name=user_data_size_bits" json:"user_data_size_bits,omitempty"`
	Flags             *int32  `protobuf:"varint,7,opt,name=flags" json:"flags,omitempty"`
	StringData        []byte  `protobuf:"bytes,8,opt,name=string_data" json:"string_data,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSVCMsg_CreateStringTable) Reset()                    { *m = CSVCMsg_CreateStringTable{} }
func (m *CSVCMsg_CreateStringTable) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_CreateStringTable) ProtoMessage()               {}
func (*CSVCMsg_CreateStringTable) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *CSVCMsg_CreateStringTable) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSVCMsg_CreateStringTable) GetMaxEntries() int32 {
	if m != nil && m.MaxEntries != nil {
		return *m.MaxEntries
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetNumEntries() int32 {
	if m != nil && m.NumEntries != nil {
		return *m.NumEntries
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetUserDataFixedSize() bool {
	if m != nil && m.UserDataFixedSize != nil {
		return *m.UserDataFixedSize
	}
	return false
}

func (m *CSVCMsg_CreateStringTable) GetUserDataSize() int32 {
	if m != nil && m.UserDataSize != nil {
		return *m.UserDataSize
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetUserDataSizeBits() int32 {
	if m != nil && m.UserDataSizeBits != nil {
		return *m.UserDataSizeBits
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetStringData() []byte {
	if m != nil {
		return m.StringData
	}
	return nil
}

type CSVCMsg_UpdateStringTable struct {
	TableId           *int32 `protobuf:"varint,1,opt,name=table_id" json:"table_id,omitempty"`
	NumChangedEntries *int32 `protobuf:"varint,2,opt,name=num_changed_entries" json:"num_changed_entries,omitempty"`
	StringData        []byte `protobuf:"bytes,3,opt,name=string_data" json:"string_data,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *CSVCMsg_UpdateStringTable) Reset()                    { *m = CSVCMsg_UpdateStringTable{} }
func (m *CSVCMsg_UpdateStringTable) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_UpdateStringTable) ProtoMessage()               {}
func (*CSVCMsg_UpdateStringTable) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *CSVCMsg_UpdateStringTable) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CSVCMsg_UpdateStringTable) GetNumChangedEntries() int32 {
	if m != nil && m.NumChangedEntries != nil {
		return *m.NumChangedEntries
	}
	return 0
}

func (m *CSVCMsg_UpdateStringTable) GetStringData() []byte {
	if m != nil {
		return m.StringData
	}
	return nil
}

type CSVCMsg_VoiceInit struct {
	Quality          *int32  `protobuf:"varint,1,opt,name=quality" json:"quality,omitempty"`
	Codec            *string `protobuf:"bytes,2,opt,name=codec" json:"codec,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_VoiceInit) Reset()                    { *m = CSVCMsg_VoiceInit{} }
func (m *CSVCMsg_VoiceInit) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_VoiceInit) ProtoMessage()               {}
func (*CSVCMsg_VoiceInit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *CSVCMsg_VoiceInit) GetQuality() int32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *CSVCMsg_VoiceInit) GetCodec() string {
	if m != nil && m.Codec != nil {
		return *m.Codec
	}
	return ""
}

type CSVCMsg_VoiceData struct {
	Client           *int32  `protobuf:"varint,1,opt,name=client" json:"client,omitempty"`
	Proximity        *bool   `protobuf:"varint,2,opt,name=proximity" json:"proximity,omitempty"`
	Xuid             *uint64 `protobuf:"fixed64,3,opt,name=xuid" json:"xuid,omitempty"`
	AudibleMask      *int32  `protobuf:"varint,4,opt,name=audible_mask" json:"audible_mask,omitempty"`
	VoiceData        []byte  `protobuf:"bytes,5,opt,name=voice_data" json:"voice_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_VoiceData) Reset()                    { *m = CSVCMsg_VoiceData{} }
func (m *CSVCMsg_VoiceData) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_VoiceData) ProtoMessage()               {}
func (*CSVCMsg_VoiceData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *CSVCMsg_VoiceData) GetClient() int32 {
	if m != nil && m.Client != nil {
		return *m.Client
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetProximity() bool {
	if m != nil && m.Proximity != nil {
		return *m.Proximity
	}
	return false
}

func (m *CSVCMsg_VoiceData) GetXuid() uint64 {
	if m != nil && m.Xuid != nil {
		return *m.Xuid
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetAudibleMask() int32 {
	if m != nil && m.AudibleMask != nil {
		return *m.AudibleMask
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetVoiceData() []byte {
	if m != nil {
		return m.VoiceData
	}
	return nil
}

type CSVCMsg_FixAngle struct {
	Relative         *bool       `protobuf:"varint,1,opt,name=relative" json:"relative,omitempty"`
	Angle            *CMsgQAngle `protobuf:"bytes,2,opt,name=angle" json:"angle,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CSVCMsg_FixAngle) Reset()                    { *m = CSVCMsg_FixAngle{} }
func (m *CSVCMsg_FixAngle) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_FixAngle) ProtoMessage()               {}
func (*CSVCMsg_FixAngle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *CSVCMsg_FixAngle) GetRelative() bool {
	if m != nil && m.Relative != nil {
		return *m.Relative
	}
	return false
}

func (m *CSVCMsg_FixAngle) GetAngle() *CMsgQAngle {
	if m != nil {
		return m.Angle
	}
	return nil
}

type CSVCMsg_CrosshairAngle struct {
	Angle            *CMsgQAngle `protobuf:"bytes,1,opt,name=angle" json:"angle,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CSVCMsg_CrosshairAngle) Reset()                    { *m = CSVCMsg_CrosshairAngle{} }
func (m *CSVCMsg_CrosshairAngle) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_CrosshairAngle) ProtoMessage()               {}
func (*CSVCMsg_CrosshairAngle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *CSVCMsg_CrosshairAngle) GetAngle() *CMsgQAngle {
	if m != nil {
		return m.Angle
	}
	return nil
}

type CSVCMsg_Prefetch struct {
	SoundIndex       *int32 `protobuf:"varint,1,opt,name=sound_index" json:"sound_index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_Prefetch) Reset()                    { *m = CSVCMsg_Prefetch{} }
func (m *CSVCMsg_Prefetch) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_Prefetch) ProtoMessage()               {}
func (*CSVCMsg_Prefetch) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *CSVCMsg_Prefetch) GetSoundIndex() int32 {
	if m != nil && m.SoundIndex != nil {
		return *m.SoundIndex
	}
	return 0
}

type CSVCMsg_BSPDecal struct {
	Pos               *CMsgVector `protobuf:"bytes,1,opt,name=pos" json:"pos,omitempty"`
	DecalTextureIndex *int32      `protobuf:"varint,2,opt,name=decal_texture_index" json:"decal_texture_index,omitempty"`
	EntityIndex       *int32      `protobuf:"varint,3,opt,name=entity_index" json:"entity_index,omitempty"`
	ModelIndex        *int32      `protobuf:"varint,4,opt,name=model_index" json:"model_index,omitempty"`
	LowPriority       *bool       `protobuf:"varint,5,opt,name=low_priority" json:"low_priority,omitempty"`
	XXX_unrecognized  []byte      `json:"-"`
}

func (m *CSVCMsg_BSPDecal) Reset()                    { *m = CSVCMsg_BSPDecal{} }
func (m *CSVCMsg_BSPDecal) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_BSPDecal) ProtoMessage()               {}
func (*CSVCMsg_BSPDecal) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *CSVCMsg_BSPDecal) GetPos() *CMsgVector {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CSVCMsg_BSPDecal) GetDecalTextureIndex() int32 {
	if m != nil && m.DecalTextureIndex != nil {
		return *m.DecalTextureIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetModelIndex() int32 {
	if m != nil && m.ModelIndex != nil {
		return *m.ModelIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetLowPriority() bool {
	if m != nil && m.LowPriority != nil {
		return *m.LowPriority
	}
	return false
}

type CSVCMsg_GetCvarValue struct {
	Cookie           *int32  `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	CvarName         *string `protobuf:"bytes,2,opt,name=cvar_name" json:"cvar_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_GetCvarValue) Reset()                    { *m = CSVCMsg_GetCvarValue{} }
func (m *CSVCMsg_GetCvarValue) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_GetCvarValue) ProtoMessage()               {}
func (*CSVCMsg_GetCvarValue) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *CSVCMsg_GetCvarValue) GetCookie() int32 {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return 0
}

func (m *CSVCMsg_GetCvarValue) GetCvarName() string {
	if m != nil && m.CvarName != nil {
		return *m.CvarName
	}
	return ""
}

type CSVCMsg_Menu struct {
	DialogType       *int32 `protobuf:"varint,1,opt,name=dialog_type" json:"dialog_type,omitempty"`
	MenuKeyValues    []byte `protobuf:"bytes,2,opt,name=menu_key_values" json:"menu_key_values,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_Menu) Reset()                    { *m = CSVCMsg_Menu{} }
func (m *CSVCMsg_Menu) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_Menu) ProtoMessage()               {}
func (*CSVCMsg_Menu) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *CSVCMsg_Menu) GetDialogType() int32 {
	if m != nil && m.DialogType != nil {
		return *m.DialogType
	}
	return 0
}

func (m *CSVCMsg_Menu) GetMenuKeyValues() []byte {
	if m != nil {
		return m.MenuKeyValues
	}
	return nil
}

type CSVCMsg_UserMessage struct {
	MsgType          *int32 `protobuf:"varint,1,opt,name=msg_type" json:"msg_type,omitempty"`
	MsgData          []byte `protobuf:"bytes,2,opt,name=msg_data" json:"msg_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_UserMessage) Reset()                    { *m = CSVCMsg_UserMessage{} }
func (m *CSVCMsg_UserMessage) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_UserMessage) ProtoMessage()               {}
func (*CSVCMsg_UserMessage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *CSVCMsg_UserMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CSVCMsg_UserMessage) GetMsgData() []byte {
	if m != nil {
		return m.MsgData
	}
	return nil
}

type CSVCMsg_GameEvent struct {
	EventName        *string                  `protobuf:"bytes,1,opt,name=event_name" json:"event_name,omitempty"`
	Eventid          *int32                   `protobuf:"varint,2,opt,name=eventid" json:"eventid,omitempty"`
	Keys             []*CSVCMsg_GameEventKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CSVCMsg_GameEvent) Reset()                    { *m = CSVCMsg_GameEvent{} }
func (m *CSVCMsg_GameEvent) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEvent) ProtoMessage()               {}
func (*CSVCMsg_GameEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *CSVCMsg_GameEvent) GetEventName() string {
	if m != nil && m.EventName != nil {
		return *m.EventName
	}
	return ""
}

func (m *CSVCMsg_GameEvent) GetEventid() int32 {
	if m != nil && m.Eventid != nil {
		return *m.Eventid
	}
	return 0
}

func (m *CSVCMsg_GameEvent) GetKeys() []*CSVCMsg_GameEventKeyT {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CSVCMsg_GameEventKeyT struct {
	Type             *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	ValString        *string  `protobuf:"bytes,2,opt,name=val_string" json:"val_string,omitempty"`
	ValFloat         *float32 `protobuf:"fixed32,3,opt,name=val_float" json:"val_float,omitempty"`
	ValLong          *int32   `protobuf:"varint,4,opt,name=val_long" json:"val_long,omitempty"`
	ValShort         *int32   `protobuf:"varint,5,opt,name=val_short" json:"val_short,omitempty"`
	ValByte          *int32   `protobuf:"varint,6,opt,name=val_byte" json:"val_byte,omitempty"`
	ValBool          *bool    `protobuf:"varint,7,opt,name=val_bool" json:"val_bool,omitempty"`
	ValUint64        *uint64  `protobuf:"varint,8,opt,name=val_uint64" json:"val_uint64,omitempty"`
	ValWstring       []byte   `protobuf:"bytes,9,opt,name=val_wstring" json:"val_wstring,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSVCMsg_GameEventKeyT) Reset()                    { *m = CSVCMsg_GameEventKeyT{} }
func (m *CSVCMsg_GameEventKeyT) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventKeyT) ProtoMessage()               {}
func (*CSVCMsg_GameEventKeyT) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29, 0} }

func (m *CSVCMsg_GameEventKeyT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValString() string {
	if m != nil && m.ValString != nil {
		return *m.ValString
	}
	return ""
}

func (m *CSVCMsg_GameEventKeyT) GetValFloat() float32 {
	if m != nil && m.ValFloat != nil {
		return *m.ValFloat
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValLong() int32 {
	if m != nil && m.ValLong != nil {
		return *m.ValLong
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValShort() int32 {
	if m != nil && m.ValShort != nil {
		return *m.ValShort
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValByte() int32 {
	if m != nil && m.ValByte != nil {
		return *m.ValByte
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValBool() bool {
	if m != nil && m.ValBool != nil {
		return *m.ValBool
	}
	return false
}

func (m *CSVCMsg_GameEventKeyT) GetValUint64() uint64 {
	if m != nil && m.ValUint64 != nil {
		return *m.ValUint64
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValWstring() []byte {
	if m != nil {
		return m.ValWstring
	}
	return nil
}

type CSVCMsg_GameEventList struct {
	Descriptors      []*CSVCMsg_GameEventListDescriptorT `protobuf:"bytes,1,rep,name=descriptors" json:"descriptors,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CSVCMsg_GameEventList) Reset()                    { *m = CSVCMsg_GameEventList{} }
func (m *CSVCMsg_GameEventList) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventList) ProtoMessage()               {}
func (*CSVCMsg_GameEventList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *CSVCMsg_GameEventList) GetDescriptors() []*CSVCMsg_GameEventListDescriptorT {
	if m != nil {
		return m.Descriptors
	}
	return nil
}

type CSVCMsg_GameEventListKeyT struct {
	Type             *int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_GameEventListKeyT) Reset()                    { *m = CSVCMsg_GameEventListKeyT{} }
func (m *CSVCMsg_GameEventListKeyT) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventListKeyT) ProtoMessage()               {}
func (*CSVCMsg_GameEventListKeyT) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30, 0} }

func (m *CSVCMsg_GameEventListKeyT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_GameEventListKeyT) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CSVCMsg_GameEventListDescriptorT struct {
	Eventid          *int32                       `protobuf:"varint,1,opt,name=eventid" json:"eventid,omitempty"`
	Name             *string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Keys             []*CSVCMsg_GameEventListKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CSVCMsg_GameEventListDescriptorT) Reset()         { *m = CSVCMsg_GameEventListDescriptorT{} }
func (m *CSVCMsg_GameEventListDescriptorT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventListDescriptorT) ProtoMessage()    {}
func (*CSVCMsg_GameEventListDescriptorT) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{30, 1}
}

func (m *CSVCMsg_GameEventListDescriptorT) GetEventid() int32 {
	if m != nil && m.Eventid != nil {
		return *m.Eventid
	}
	return 0
}

func (m *CSVCMsg_GameEventListDescriptorT) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSVCMsg_GameEventListDescriptorT) GetKeys() []*CSVCMsg_GameEventListKeyT {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CSVCMsg_TempEntities struct {
	Reliable         *bool  `protobuf:"varint,1,opt,name=reliable" json:"reliable,omitempty"`
	NumEntries       *int32 `protobuf:"varint,2,opt,name=num_entries" json:"num_entries,omitempty"`
	EntityData       []byte `protobuf:"bytes,3,opt,name=entity_data" json:"entity_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_TempEntities) Reset()                    { *m = CSVCMsg_TempEntities{} }
func (m *CSVCMsg_TempEntities) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_TempEntities) ProtoMessage()               {}
func (*CSVCMsg_TempEntities) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *CSVCMsg_TempEntities) GetReliable() bool {
	if m != nil && m.Reliable != nil {
		return *m.Reliable
	}
	return false
}

func (m *CSVCMsg_TempEntities) GetNumEntries() int32 {
	if m != nil && m.NumEntries != nil {
		return *m.NumEntries
	}
	return 0
}

func (m *CSVCMsg_TempEntities) GetEntityData() []byte {
	if m != nil {
		return m.EntityData
	}
	return nil
}

type CSVCMsg_PacketEntities struct {
	MaxEntries       *int32 `protobuf:"varint,1,opt,name=max_entries" json:"max_entries,omitempty"`
	UpdatedEntries   *int32 `protobuf:"varint,2,opt,name=updated_entries" json:"updated_entries,omitempty"`
	IsDelta          *bool  `protobuf:"varint,3,opt,name=is_delta" json:"is_delta,omitempty"`
	UpdateBaseline   *bool  `protobuf:"varint,4,opt,name=update_baseline" json:"update_baseline,omitempty"`
	Baseline         *int32 `protobuf:"varint,5,opt,name=baseline" json:"baseline,omitempty"`
	DeltaFrom        *int32 `protobuf:"varint,6,opt,name=delta_from" json:"delta_from,omitempty"`
	EntityData       []byte `protobuf:"bytes,7,opt,name=entity_data" json:"entity_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_PacketEntities) Reset()                    { *m = CSVCMsg_PacketEntities{} }
func (m *CSVCMsg_PacketEntities) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_PacketEntities) ProtoMessage()               {}
func (*CSVCMsg_PacketEntities) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *CSVCMsg_PacketEntities) GetMaxEntries() int32 {
	if m != nil && m.MaxEntries != nil {
		return *m.MaxEntries
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetUpdatedEntries() int32 {
	if m != nil && m.UpdatedEntries != nil {
		return *m.UpdatedEntries
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetIsDelta() bool {
	if m != nil && m.IsDelta != nil {
		return *m.IsDelta
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetUpdateBaseline() bool {
	if m != nil && m.UpdateBaseline != nil {
		return *m.UpdateBaseline
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetBaseline() int32 {
	if m != nil && m.Baseline != nil {
		return *m.Baseline
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetDeltaFrom() int32 {
	if m != nil && m.DeltaFrom != nil {
		return *m.DeltaFrom
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetEntityData() []byte {
	if m != nil {
		return m.EntityData
	}
	return nil
}

type CSVCMsg_Sounds struct {
	ReliableSound    *bool                       `protobuf:"varint,1,opt,name=reliable_sound" json:"reliable_sound,omitempty"`
	Sounds           []*CSVCMsg_SoundsSounddataT `protobuf:"bytes,2,rep,name=sounds" json:"sounds,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *CSVCMsg_Sounds) Reset()                    { *m = CSVCMsg_Sounds{} }
func (m *CSVCMsg_Sounds) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_Sounds) ProtoMessage()               {}
func (*CSVCMsg_Sounds) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33} }

func (m *CSVCMsg_Sounds) GetReliableSound() bool {
	if m != nil && m.ReliableSound != nil {
		return *m.ReliableSound
	}
	return false
}

func (m *CSVCMsg_Sounds) GetSounds() []*CSVCMsg_SoundsSounddataT {
	if m != nil {
		return m.Sounds
	}
	return nil
}

type CSVCMsg_SoundsSounddataT struct {
	OriginX          *int32   `protobuf:"zigzag32,1,opt,name=origin_x" json:"origin_x,omitempty"`
	OriginY          *int32   `protobuf:"zigzag32,2,opt,name=origin_y" json:"origin_y,omitempty"`
	OriginZ          *int32   `protobuf:"zigzag32,3,opt,name=origin_z" json:"origin_z,omitempty"`
	Volume           *uint32  `protobuf:"varint,4,opt,name=volume" json:"volume,omitempty"`
	DelayValue       *float32 `protobuf:"fixed32,5,opt,name=delay_value" json:"delay_value,omitempty"`
	SequenceNumber   *int32   `protobuf:"varint,6,opt,name=sequence_number" json:"sequence_number,omitempty"`
	EntityIndex      *int32   `protobuf:"varint,7,opt,name=entity_index" json:"entity_index,omitempty"`
	Channel          *int32   `protobuf:"varint,8,opt,name=channel" json:"channel,omitempty"`
	Pitch            *int32   `protobuf:"varint,9,opt,name=pitch" json:"pitch,omitempty"`
	Flags            *int32   `protobuf:"varint,10,opt,name=flags" json:"flags,omitempty"`
	SoundNum         *uint32  `protobuf:"varint,11,opt,name=sound_num" json:"sound_num,omitempty"`
	SoundNumHandle   *uint32  `protobuf:"fixed32,12,opt,name=sound_num_handle" json:"sound_num_handle,omitempty"`
	SpeakerEntity    *int32   `protobuf:"varint,13,opt,name=speaker_entity" json:"speaker_entity,omitempty"`
	RandomSeed       *int32   `protobuf:"varint,14,opt,name=random_seed" json:"random_seed,omitempty"`
	SoundLevel       *int32   `protobuf:"varint,15,opt,name=sound_level" json:"sound_level,omitempty"`
	IsSentence       *bool    `protobuf:"varint,16,opt,name=is_sentence" json:"is_sentence,omitempty"`
	IsAmbient        *bool    `protobuf:"varint,17,opt,name=is_ambient" json:"is_ambient,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSVCMsg_SoundsSounddataT) Reset()                    { *m = CSVCMsg_SoundsSounddataT{} }
func (m *CSVCMsg_SoundsSounddataT) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SoundsSounddataT) ProtoMessage()               {}
func (*CSVCMsg_SoundsSounddataT) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33, 0} }

func (m *CSVCMsg_SoundsSounddataT) GetOriginX() int32 {
	if m != nil && m.OriginX != nil {
		return *m.OriginX
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetOriginY() int32 {
	if m != nil && m.OriginY != nil {
		return *m.OriginY
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetOriginZ() int32 {
	if m != nil && m.OriginZ != nil {
		return *m.OriginZ
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetDelayValue() float32 {
	if m != nil && m.DelayValue != nil {
		return *m.DelayValue
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSequenceNumber() int32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetChannel() int32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetPitch() int32 {
	if m != nil && m.Pitch != nil {
		return *m.Pitch
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundNum() uint32 {
	if m != nil && m.SoundNum != nil {
		return *m.SoundNum
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundNumHandle() uint32 {
	if m != nil && m.SoundNumHandle != nil {
		return *m.SoundNumHandle
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSpeakerEntity() int32 {
	if m != nil && m.SpeakerEntity != nil {
		return *m.SpeakerEntity
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetRandomSeed() int32 {
	if m != nil && m.RandomSeed != nil {
		return *m.RandomSeed
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundLevel() int32 {
	if m != nil && m.SoundLevel != nil {
		return *m.SoundLevel
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetIsSentence() bool {
	if m != nil && m.IsSentence != nil {
		return *m.IsSentence
	}
	return false
}

func (m *CSVCMsg_SoundsSounddataT) GetIsAmbient() bool {
	if m != nil && m.IsAmbient != nil {
		return *m.IsAmbient
	}
	return false
}

func init() {
	proto.RegisterType((*CMsgVector)(nil), "CMsgVector")
	proto.RegisterType((*CMsgVector2D)(nil), "CMsgVector2D")
	proto.RegisterType((*CMsgQAngle)(nil), "CMsgQAngle")
	proto.RegisterType((*CMsgRGBA)(nil), "CMsgRGBA")
	proto.RegisterType((*CNETMsg_Tick)(nil), "CNETMsg_Tick")
	proto.RegisterType((*CNETMsg_StringCmd)(nil), "CNETMsg_StringCmd")
	proto.RegisterType((*CNETMsg_SignonState)(nil), "CNETMsg_SignonState")
	proto.RegisterType((*CMsg_CVars)(nil), "CMsg_CVars")
	proto.RegisterType((*CMsg_CVars_CVar)(nil), "CMsg_CVars.CVar")
	proto.RegisterType((*CNETMsg_SetConVar)(nil), "CNETMsg_SetConVar")
	proto.RegisterType((*CNETMsg_NOP)(nil), "CNETMsg_NOP")
	proto.RegisterType((*CNETMsg_Disconnect)(nil), "CNETMsg_Disconnect")
	proto.RegisterType((*CNETMsg_File)(nil), "CNETMsg_File")
	proto.RegisterType((*CSVCMsg_ServerInfo)(nil), "CSVCMsg_ServerInfo")
	proto.RegisterType((*CSVCMsg_ClassInfo)(nil), "CSVCMsg_ClassInfo")
	proto.RegisterType((*CSVCMsg_ClassInfoClassT)(nil), "CSVCMsg_ClassInfo.class_t")
	proto.RegisterType((*CSVCMsg_SendTable)(nil), "CSVCMsg_SendTable")
	proto.RegisterType((*CSVCMsg_SendTableSendpropT)(nil), "CSVCMsg_SendTable.sendprop_t")
	proto.RegisterType((*CSVCMsg_Print)(nil), "CSVCMsg_Print")
	proto.RegisterType((*CSVCMsg_SetPause)(nil), "CSVCMsg_SetPause")
	proto.RegisterType((*CSVCMsg_SetView)(nil), "CSVCMsg_SetView")
	proto.RegisterType((*CSVCMsg_CreateStringTable)(nil), "CSVCMsg_CreateStringTable")
	proto.RegisterType((*CSVCMsg_UpdateStringTable)(nil), "CSVCMsg_UpdateStringTable")
	proto.RegisterType((*CSVCMsg_VoiceInit)(nil), "CSVCMsg_VoiceInit")
	proto.RegisterType((*CSVCMsg_VoiceData)(nil), "CSVCMsg_VoiceData")
	proto.RegisterType((*CSVCMsg_FixAngle)(nil), "CSVCMsg_FixAngle")
	proto.RegisterType((*CSVCMsg_CrosshairAngle)(nil), "CSVCMsg_CrosshairAngle")
	proto.RegisterType((*CSVCMsg_Prefetch)(nil), "CSVCMsg_Prefetch")
	proto.RegisterType((*CSVCMsg_BSPDecal)(nil), "CSVCMsg_BSPDecal")
	proto.RegisterType((*CSVCMsg_GetCvarValue)(nil), "CSVCMsg_GetCvarValue")
	proto.RegisterType((*CSVCMsg_Menu)(nil), "CSVCMsg_Menu")
	proto.RegisterType((*CSVCMsg_UserMessage)(nil), "CSVCMsg_UserMessage")
	proto.RegisterType((*CSVCMsg_GameEvent)(nil), "CSVCMsg_GameEvent")
	proto.RegisterType((*CSVCMsg_GameEventKeyT)(nil), "CSVCMsg_GameEvent.key_t")
	proto.RegisterType((*CSVCMsg_GameEventList)(nil), "CSVCMsg_GameEventList")
	proto.RegisterType((*CSVCMsg_GameEventListKeyT)(nil), "CSVCMsg_GameEventList.key_t")
	proto.RegisterType((*CSVCMsg_GameEventListDescriptorT)(nil), "CSVCMsg_GameEventList.descriptor_t")
	proto.RegisterType((*CSVCMsg_TempEntities)(nil), "CSVCMsg_TempEntities")
	proto.RegisterType((*CSVCMsg_PacketEntities)(nil), "CSVCMsg_PacketEntities")
	proto.RegisterType((*CSVCMsg_Sounds)(nil), "CSVCMsg_Sounds")
	proto.RegisterType((*CSVCMsg_SoundsSounddataT)(nil), "CSVCMsg_Sounds.sounddata_t")
	proto.RegisterEnum("NET_Messages", NET_Messages_name, NET_Messages_value)
	proto.RegisterEnum("SVC_Messages", SVC_Messages_name, SVC_Messages_value)
}

func init() { proto.RegisterFile("netmessages_public.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 2088 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x57, 0x4f, 0x73, 0x1b, 0x49,
	0x15, 0x5f, 0x59, 0x96, 0x2d, 0xb5, 0x25, 0x7b, 0x3c, 0x8e, 0xb3, 0x8a, 0x92, 0xb0, 0x41, 0x01,
	0x36, 0x04, 0xd0, 0x16, 0x61, 0x6b, 0x0b, 0xaa, 0x38, 0xb0, 0x71, 0xb2, 0x61, 0xab, 0xc8, 0x62,
	0xd6, 0xc1, 0x55, 0x9c, 0xba, 0xc6, 0x33, 0x2d, 0xb9, 0xcb, 0xa3, 0x19, 0xed, 0xf4, 0x48, 0xb6,
	0xf7, 0xc4, 0x89, 0x03, 0xb7, 0xfd, 0x0e, 0x1c, 0x81, 0xe2, 0xc4, 0x37, 0xe0, 0xc2, 0x8d, 0x13,
	0x37, 0x3e, 0x0b, 0xbf, 0xf7, 0xba, 0x7b, 0x66, 0x64, 0x9b, 0xe2, 0x62, 0xb7, 0xde, 0xbc, 0xee,
	0x7e, 0x7f, 0x7e, 0xef, 0xf7, 0x5e, 0x8b, 0x61, 0xa6, 0xca, 0xb9, 0x32, 0x26, 0x9a, 0x29, 0x23,
	0x17, 0xcb, 0xb3, 0x54, 0xc7, 0x93, 0x45, 0x91, 0x97, 0xf9, 0xe8, 0xc9, 0x2c, 0xcf, 0x67, 0xa9,
	0xfa, 0x88, 0x7f, 0x9d, 0x2d, 0xa7, 0x1f, 0x25, 0xca, 0xc4, 0x85, 0x5e, 0x94, 0x79, 0x61, 0x35,
	0xc6, 0x3f, 0x12, 0xe2, 0xe8, 0xad, 0x99, 0x9d, 0xaa, 0x18, 0xb2, 0xb0, 0x27, 0x5a, 0x57, 0xc3,
	0xd6, 0x93, 0xd6, 0xb3, 0x0d, 0x5a, 0x5e, 0x0f, 0x37, 0xfc, 0xf2, 0xeb, 0x61, 0x9b, 0x96, 0xe3,
	0xef, 0x88, 0x7e, 0xad, 0xfe, 0xe2, 0xd5, 0xdd, 0x1b, 0xfc, 0xa1, 0xbf, 0xf9, 0x34, 0xc3, 0xe5,
	0xff, 0xff, 0xd0, 0x4f, 0x44, 0x97, 0xd4, 0xbf, 0x7c, 0xf3, 0xf2, 0x53, 0x12, 0x17, 0xac, 0xdc,
	0xa1, 0xe5, 0x8c, 0x95, 0x79, 0x79, 0xc6, 0xca, 0xbc, 0x8c, 0x86, 0x9b, 0xb4, 0x1c, 0x7f, 0xd3,
	0x82, 0x35, 0x5f, 0xbc, 0x7e, 0x87, 0xbd, 0xf2, 0x9d, 0x8e, 0x2f, 0xc2, 0xbe, 0xd8, 0x2c, 0xf1,
	0x9f, 0xf7, 0x0f, 0xc2, 0x47, 0xe2, 0xde, 0x79, 0x6e, 0x4a, 0x19, 0xe7, 0xf3, 0xc5, 0xb2, 0x8c,
	0x4a, 0x9d, 0x67, 0xa5, 0x9e, 0x2b, 0xde, 0x3c, 0x08, 0x9f, 0x8b, 0xf1, 0x5d, 0x5f, 0xa5, 0x29,
	0x13, 0x99, 0xa8, 0x95, 0x66, 0xc9, 0xb0, 0xc3, 0xba, 0xdf, 0x17, 0xdf, 0x66, 0xdd, 0x69, 0x11,
	0x21, 0xce, 0x65, 0x54, 0x94, 0x77, 0xa8, 0x6e, 0x91, 0x2a, 0x02, 0xb4, 0xef, 0x4d, 0x3a, 0x29,
	0x0b, 0x9d, 0xcd, 0x8e, 0xe6, 0x49, 0xb8, 0x27, 0xb6, 0x71, 0xcd, 0x3c, 0xca, 0x12, 0x36, 0xad,
	0x37, 0xfe, 0x63, 0x4b, 0x1c, 0x54, 0x6a, 0x7a, 0x96, 0xe5, 0xd9, 0x09, 0x4c, 0x50, 0xe1, 0x3d,
	0xd1, 0x37, 0xfc, 0x13, 0x67, 0xe3, 0xb7, 0x73, 0xe4, 0x40, 0xec, 0x98, 0x45, 0x74, 0x99, 0xc1,
	0xd6, 0x65, 0x56, 0x72, 0x48, 0x06, 0xe1, 0x48, 0x84, 0xd9, 0x72, 0x2e, 0x8d, 0x2a, 0x56, 0xaa,
	0x90, 0x8b, 0x34, 0xba, 0x56, 0x85, 0xe1, 0x18, 0xf1, 0x37, 0x27, 0x90, 0x80, 0xc6, 0x65, 0x5e,
	0x5c, 0xe8, 0xc4, 0xc0, 0xef, 0xf6, 0xb3, 0x5e, 0x18, 0x88, 0xee, 0x3c, 0x5a, 0xc8, 0x0c, 0x9e,
	0xb0, 0x77, 0xbd, 0xf1, 0x97, 0x36, 0x5b, 0xf2, 0xe8, 0x34, 0x2a, 0x4c, 0xf8, 0x81, 0xe8, 0xc4,
	0x2b, 0x2c, 0x70, 0x77, 0xfb, 0xd9, 0xce, 0x8b, 0x60, 0x52, 0x7f, 0x9b, 0xd0, 0xdf, 0xd1, 0x53,
	0xb1, 0x49, 0xff, 0x29, 0xd8, 0x7c, 0x08, 0x7b, 0x14, 0x0e, 0x44, 0x67, 0x15, 0xa5, 0x4b, 0xc5,
	0xd6, 0xf5, 0xc6, 0x3f, 0x6e, 0x84, 0x41, 0x95, 0x47, 0x79, 0x46, 0x3b, 0x1e, 0x51, 0x18, 0x32,
	0x77, 0x78, 0x0b, 0x87, 0xef, 0x34, 0x0e, 0x1f, 0x0f, 0xc4, 0x8e, 0xdf, 0xf2, 0xc5, 0xaf, 0x8f,
	0xc7, 0x63, 0x11, 0xfa, 0x9f, 0xaf, 0xb4, 0xc1, 0xbe, 0x0c, 0x98, 0xe3, 0x0c, 0xab, 0xab, 0xd2,
	0x85, 0x31, 0xaa, 0xf3, 0xff, 0x99, 0x06, 0xd2, 0x10, 0xa8, 0xb2, 0x88, 0x32, 0x33, 0x45, 0x44,
	0x74, 0xe2, 0x60, 0xb4, 0x2f, 0x7a, 0x53, 0x7c, 0xb4, 0x1e, 0xb3, 0x75, 0xe1, 0x43, 0x71, 0xa0,
	0x8d, 0x2c, 0x14, 0x05, 0x09, 0x19, 0x9c, 0xe7, 0x92, 0x34, 0x38, 0x78, 0x5d, 0xba, 0x22, 0x51,
	0xd9, 0x35, 0xc3, 0xa4, 0x3b, 0xfe, 0x77, 0x1b, 0x76, 0x9c, 0x9c, 0x1e, 0x59, 0x4f, 0x28, 0xd6,
	0x9f, 0x67, 0xd3, 0x9c, 0xa2, 0xc8, 0xf5, 0x13, 0xe7, 0xa9, 0xbb, 0x86, 0x52, 0x67, 0x73, 0x51,
	0x67, 0x89, 0xa5, 0xb8, 0x29, 0x51, 0x89, 0x8e, 0x91, 0xcf, 0xc4, 0x5d, 0xf1, 0x44, 0x0c, 0x21,
	0xcd, 0xa7, 0x53, 0x1d, 0xeb, 0x28, 0x95, 0x08, 0xdc, 0x4a, 0xb9, 0x4c, 0xda, 0x6b, 0x09, 0x31,
	0xd0, 0x38, 0x4f, 0xcb, 0x15, 0x27, 0xa9, 0x4b, 0x5e, 0x54, 0x26, 0x33, 0xd4, 0xba, 0xe1, 0x77,
	0xc5, 0x63, 0x16, 0x25, 0xba, 0x40, 0x68, 0x00, 0x35, 0x59, 0xe6, 0x12, 0x56, 0x5d, 0x5d, 0x43,
	0x48, 0x6a, 0x87, 0xde, 0x9f, 0x58, 0xe6, 0x66, 0xb8, 0xcd, 0x06, 0xe1, 0x60, 0x4a, 0x7f, 0x5c,
	0xc4, 0xc3, 0x2e, 0x04, 0xdb, 0x61, 0x28, 0x44, 0x9c, 0x6a, 0x95, 0x95, 0x2c, 0xeb, 0xb1, 0x6c,
	0x28, 0x02, 0xc3, 0xe0, 0x95, 0x65, 0x74, 0x86, 0xd0, 0xd1, 0x17, 0xc1, 0x5f, 0x10, 0xe1, 0x79,
	0x74, 0x25, 0xed, 0x0e, 0x33, 0xdc, 0xe1, 0x33, 0x2b, 0x61, 0x64, 0x8c, 0x32, 0xc3, 0xbe, 0x17,
	0x5a, 0x0c, 0x4a, 0x93, 0xe6, 0xe5, 0x70, 0xc0, 0xc2, 0x43, 0x31, 0xa0, 0x02, 0x95, 0x3a, 0x2b,
	0xe1, 0x6d, 0x94, 0x0e, 0x77, 0x99, 0x0b, 0x10, 0xcd, 0x19, 0xb2, 0x23, 0xe1, 0xc9, 0x70, 0x8f,
	0x33, 0xd4, 0x44, 0x69, 0xc0, 0x92, 0xfb, 0x62, 0x97, 0x24, 0xb3, 0x22, 0x5f, 0x3a, 0xf9, 0xbe,
	0xd7, 0x34, 0x17, 0xd7, 0x56, 0x12, 0xb2, 0x04, 0xa1, 0xe2, 0x6a, 0x65, 0xd1, 0x01, 0x8b, 0xe0,
	0xe4, 0x72, 0x16, 0x4b, 0x3a, 0x00, 0xb8, 0xb8, 0x0f, 0xd9, 0xe6, 0xf8, 0x4f, 0x2d, 0x60, 0xd4,
	0x65, 0xf6, 0x88, 0x4c, 0xe7, 0xc4, 0xc2, 0xf5, 0xb8, 0x50, 0xc8, 0x95, 0x44, 0x11, 0x5a, 0x37,
	0x39, 0xc1, 0xdd, 0xf0, 0x07, 0x40, 0xaf, 0xf3, 0x70, 0x83, 0x4b, 0x63, 0x34, 0xb9, 0xb5, 0x7d,
	0xc2, 0x1a, 0xb2, 0x1c, 0xfd, 0xd2, 0x29, 0xcb, 0x92, 0x0c, 0xb4, 0xcb, 0x0a, 0x91, 0xef, 0x8b,
	0xbd, 0x24, 0x2a, 0x23, 0x17, 0xdc, 0x06, 0x2e, 0x39, 0x17, 0xa4, 0xca, 0xb2, 0x36, 0x63, 0xfc,
	0x6f, 0x1b, 0xb5, 0x99, 0x27, 0x2a, 0x4b, 0xde, 0xd1, 0xa6, 0x70, 0x57, 0x6c, 0x21, 0xf7, 0xca,
	0x11, 0x4a, 0x97, 0xa2, 0x83, 0x4a, 0xbf, 0x7d, 0x22, 0x02, 0x9e, 0x29, 0x95, 0x10, 0x04, 0xe3,
	0x3c, 0x01, 0xbc, 0x2c, 0x00, 0x7f, 0x28, 0x3a, 0x00, 0xca, 0xc2, 0x72, 0xc2, 0xce, 0x8b, 0xc7,
	0x93, 0x5b, 0x37, 0x4c, 0x0c, 0x56, 0xa4, 0x03, 0x67, 0xfe, 0xd2, 0x12, 0xa2, 0xfe, 0xc9, 0x35,
	0x78, 0xbd, 0x50, 0xce, 0x19, 0xb8, 0x87, 0x8a, 0x6e, 0xde, 0x09, 0x2a, 0x98, 0xa6, 0xd1, 0xcc,
	0x38, 0xc2, 0xe6, 0x52, 0xd1, 0x79, 0xa1, 0x4b, 0x5b, 0x53, 0x8c, 0xc1, 0xa4, 0x6c, 0x30, 0x10,
	0x55, 0x09, 0x71, 0x99, 0x4a, 0xd5, 0x9c, 0x61, 0xb5, 0xe5, 0x0b, 0x37, 0xcd, 0x2f, 0xa5, 0xa5,
	0x95, 0x6d, 0x06, 0x0a, 0x02, 0x74, 0xae, 0x67, 0xe7, 0x4e, 0xd6, 0xf5, 0xe0, 0xa1, 0xcd, 0x67,
	0x1a, 0x1b, 0x7b, 0xdc, 0x17, 0x1e, 0x8b, 0x81, 0xf7, 0xe7, 0x18, 0x28, 0xbe, 0xc9, 0x1a, 0x63,
	0x11, 0xd4, 0xee, 0x96, 0xc7, 0xd1, 0xd2, 0x70, 0x3c, 0x17, 0xb4, 0x70, 0xf1, 0x1c, 0x7f, 0x28,
	0xf6, 0x1a, 0x3a, 0xa7, 0x5a, 0x5d, 0x92, 0x91, 0x30, 0x0e, 0x5e, 0x00, 0xbd, 0x89, 0xb2, 0x1d,
	0xad, 0x33, 0xfe, 0x67, 0x4b, 0x3c, 0xa8, 0x60, 0xc0, 0xc0, 0xb1, 0xb4, 0x6f, 0xd3, 0xb4, 0xce,
	0x91, 0xae, 0x4e, 0x70, 0x4a, 0xa1, 0x19, 0x45, 0xae, 0x4e, 0xd8, 0x77, 0x27, 0xb4, 0x31, 0x43,
	0xeb, 0x82, 0x31, 0x85, 0x64, 0x98, 0x4c, 0xf5, 0x95, 0x4a, 0xa4, 0xd1, 0x5f, 0x2b, 0x47, 0x0e,
	0x48, 0x76, 0xfd, 0x95, 0xe5, 0x1d, 0xde, 0x05, 0x5a, 0x5b, 0x97, 0xdb, 0xa0, 0xd8, 0x68, 0x56,
	0x59, 0xd9, 0xf6, 0xd7, 0xba, 0x12, 0x27, 0x6d, 0x0e, 0x65, 0x7f, 0x2c, 0x6b, 0x5f, 0x7e, 0xbb,
	0x48, 0x6e, 0xf8, 0x82, 0x38, 0x5b, 0x78, 0x55, 0x38, 0xc6, 0x7d, 0x64, 0x7a, 0x7c, 0x1e, 0x65,
	0x33, 0x58, 0x78, 0xcb, 0xaf, 0xe6, 0x05, 0x6d, 0xbe, 0xe0, 0x27, 0x35, 0x96, 0x4f, 0x73, 0x1d,
	0xab, 0xcf, 0x33, 0x5d, 0x12, 0x1c, 0xbe, 0x5a, 0x46, 0x29, 0xe1, 0xa3, 0xe5, 0x4d, 0x25, 0xb0,
	0xc6, 0xae, 0x97, 0x64, 0x37, 0x36, 0xbd, 0xc2, 0x79, 0x94, 0xb0, 0x46, 0x75, 0x32, 0x58, 0x88,
	0xfa, 0xf4, 0x9c, 0x8e, 0xd9, 0xf0, 0xc4, 0x77, 0xb5, 0xd4, 0x96, 0x73, 0xb7, 0x28, 0x7d, 0xd1,
	0x32, 0xd1, 0xe4, 0xc0, 0x3c, 0x32, 0x17, 0x0e, 0x8a, 0x00, 0xd4, 0x8a, 0xce, 0xb4, 0x46, 0x76,
	0xd8, 0xc8, 0x5f, 0xd4, 0xf8, 0xf8, 0x4c, 0x5f, 0xd9, 0x19, 0x06, 0xce, 0x13, 0xa7, 0x96, 0x7a,
	0xa5, 0x5c, 0xc5, 0x8d, 0x44, 0x27, 0xa2, 0x4f, 0x7c, 0x99, 0x6f, 0x65, 0x76, 0xe2, 0x19, 0x7f,
	0x2c, 0xee, 0xd7, 0x98, 0xc8, 0x8d, 0x39, 0x8f, 0x74, 0x61, 0xcf, 0xa9, 0x76, 0xb5, 0x6e, 0xef,
	0xfa, 0xb0, 0xbe, 0xf7, 0xb8, 0x50, 0x53, 0x55, 0xc6, 0xe7, 0x1c, 0x45, 0xb4, 0x93, 0x64, 0x0d,
	0x73, 0x98, 0x1e, 0x2a, 0xcd, 0x97, 0x27, 0xc7, 0xaf, 0x54, 0x1c, 0xa5, 0x20, 0xae, 0xf6, 0x22,
	0x5f, 0x6f, 0xac, 0x6e, 0xa8, 0x43, 0x9a, 0x12, 0x52, 0x91, 0x54, 0x03, 0xcb, 0x42, 0xb9, 0xb3,
	0xaa, 0x06, 0xb5, 0x86, 0xea, 0x76, 0xc5, 0xe8, 0xc8, 0x40, 0xea, 0x84, 0x9b, 0x5e, 0x95, 0xea,
	0xb1, 0x2a, 0x66, 0x6e, 0x4c, 0xe3, 0x9f, 0x89, 0x7b, 0xde, 0x96, 0x37, 0xe8, 0xf4, 0xe0, 0x82,
	0x53, 0x2a, 0x4e, 0x4e, 0x50, 0x9e, 0x5f, 0x68, 0x55, 0x27, 0x28, 0x5e, 0x27, 0x8a, 0xf1, 0xcf,
	0xd1, 0xbe, 0xdd, 0xd6, 0xb7, 0x2a, 0x5b, 0xd2, 0xad, 0x09, 0xfa, 0x61, 0x8e, 0xb6, 0x53, 0xf3,
	0x0b, 0xc8, 0x12, 0xa4, 0xb0, 0x94, 0x17, 0xea, 0xda, 0x96, 0xbd, 0x05, 0x58, 0x1f, 0x17, 0x1f,
	0x54, 0x60, 0x05, 0xea, 0xdf, 0xda, 0x01, 0x98, 0x3b, 0x87, 0x59, 0x3b, 0xc1, 0x49, 0x38, 0xc3,
	0x76, 0xeb, 0x37, 0x0d, 0x4e, 0x7d, 0x03, 0x7b, 0x5e, 0xaf, 0x10, 0x03, 0xc2, 0x82, 0xa2, 0x85,
	0x6c, 0x94, 0x2c, 0xb0, 0xc9, 0x32, 0xc0, 0xc8, 0xc6, 0xeb, 0x7b, 0x62, 0x13, 0x96, 0x50, 0x9d,
	0x12, 0x71, 0x0e, 0x27, 0xb7, 0x8e, 0x99, 0x90, 0xa1, 0xe5, 0xe8, 0xaf, 0x2d, 0xd1, 0xe1, 0xd5,
	0x0d, 0xba, 0x24, 0xc0, 0x21, 0x15, 0xb6, 0x34, 0x1c, 0x61, 0x22, 0x34, 0x24, 0x9b, 0xa6, 0x79,
	0x54, 0xda, 0x91, 0xd8, 0xb2, 0x6a, 0x2a, 0xd3, 0x1c, 0x4a, 0x9b, 0x3e, 0x7e, 0xbc, 0xf1, 0x3c,
	0x2f, 0x4a, 0x57, 0xef, 0x4e, 0xe9, 0xec, 0x1a, 0x93, 0xe2, 0xd6, 0x9a, 0x24, 0xc7, 0x58, 0xb2,
	0xcd, 0x30, 0x75, 0xf7, 0x2d, 0x41, 0x83, 0x9f, 0x7c, 0xcc, 0x65, 0xbe, 0x49, 0x71, 0x26, 0xd9,
	0xa5, 0x33, 0xa2, 0xc7, 0x31, 0xf9, 0x57, 0x4b, 0x1c, 0xde, 0x72, 0xe6, 0x57, 0xda, 0x94, 0xe1,
	0x4f, 0x91, 0x96, 0xea, 0xd9, 0xe0, 0xe7, 0xc2, 0xa7, 0x93, 0x3b, 0x95, 0x27, 0xb5, 0x26, 0x82,
	0xf0, 0xf4, 0xee, 0x18, 0x78, 0x56, 0x64, 0xef, 0x47, 0xbf, 0x13, 0xfd, 0xe6, 0xa6, 0x66, 0xc8,
	0xef, 0x50, 0xc7, 0xdc, 0xde, 0x4c, 0xc0, 0xa3, 0xff, 0x61, 0x06, 0x5f, 0x8b, 0xc9, 0xb6, 0xc2,
	0xe6, 0x3b, 0x35, 0x5f, 0xbc, 0x26, 0xa0, 0x83, 0xa1, 0x5c, 0x35, 0x6b, 0x62, 0x33, 0x57, 0xcd,
	0x37, 0x58, 0xb8, 0xa2, 0x30, 0x57, 0x1b, 0x0d, 0x0a, 0xfb, 0x73, 0xab, 0x2e, 0xee, 0xe3, 0x28,
	0xbe, 0x50, 0x65, 0x75, 0xec, 0x0d, 0x7e, 0xaf, 0xf0, 0xbb, 0x64, 0x2e, 0xbd, 0x49, 0x90, 0x30,
	0x82, 0x47, 0xc3, 0xd4, 0x1d, 0xdd, 0xad, 0x55, 0xe5, 0x59, 0x64, 0x60, 0x5f, 0xe6, 0x09, 0x1f,
	0xaa, 0x95, 0xa4, 0xe3, 0x61, 0xc4, 0x3b, 0xf1, 0x24, 0xc9, 0xe7, 0x2e, 0xf9, 0x37, 0xcc, 0xdd,
	0x66, 0x73, 0xff, 0xde, 0x16, 0xbb, 0x55, 0x27, 0x23, 0x26, 0x31, 0xd4, 0x3e, 0xbc, 0xf7, 0x92,
	0xc9, 0xa5, 0x1a, 0x70, 0xb6, 0xf8, 0xa7, 0x9f, 0x6f, 0x1e, 0x4e, 0xd6, 0x37, 0x4e, 0xf8, 0xab,
	0x9d, 0x5c, 0x46, 0xff, 0xd9, 0x70, 0xcc, 0x64, 0x7f, 0x93, 0x89, 0x60, 0x85, 0x99, 0xce, 0xa4,
	0x65, 0xa9, 0xfd, 0x86, 0xc4, 0x12, 0x72, 0x53, 0x62, 0x5f, 0x7e, 0xfb, 0x44, 0x12, 0xab, 0x3c,
	0x5d, 0x56, 0x8f, 0x32, 0x62, 0x00, 0x1a, 0x5d, 0x5d, 0x83, 0xef, 0x70, 0x2d, 0x20, 0x2c, 0x46,
	0x7d, 0xb5, 0x54, 0x19, 0x68, 0x1a, 0x49, 0x3a, 0xc3, 0x14, 0xb3, 0x75, 0x27, 0x77, 0x55, 0x13,
	0x2e, 0x75, 0xa4, 0x4c, 0xa5, 0x0c, 0x77, 0x6e, 0x27, 0x0b, 0x0d, 0x32, 0xb5, 0xd3, 0x41, 0xdd,
	0x08, 0x85, 0xaf, 0x2b, 0xcb, 0xb0, 0x38, 0x9a, 0xe7, 0xd9, 0x01, 0x8f, 0xbf, 0x5e, 0x24, 0x71,
	0x54, 0x02, 0x98, 0xf4, 0x79, 0xfc, 0x45, 0xe8, 0xcc, 0x42, 0x45, 0x17, 0x68, 0xb2, 0xf6, 0x66,
	0x37, 0xd7, 0xc2, 0x6e, 0xbc, 0x3b, 0x92, 0x9c, 0xde, 0x63, 0x98, 0x21, 0x76, 0xab, 0x0e, 0xc8,
	0xc7, 0xa4, 0xc0, 0x73, 0xca, 0x83, 0x2d, 0x0b, 0x91, 0x75, 0x4c, 0x53, 0x25, 0xf9, 0xc3, 0xb3,
	0x2d, 0x17, 0x29, 0x84, 0xd1, 0xfc, 0x8c, 0x1b, 0x1a, 0xcd, 0xb5, 0xdd, 0xe7, 0x7f, 0xc0, 0xe3,
	0x16, 0x6f, 0x1b, 0xe9, 0x78, 0xcd, 0x84, 0x3b, 0x62, 0x9b, 0x46, 0x3c, 0xbc, 0x8d, 0x82, 0xf7,
	0xb0, 0x83, 0xe7, 0xbd, 0xfa, 0x65, 0x14, 0xb4, 0x50, 0x27, 0x5d, 0x92, 0xd1, 0x4b, 0x28, 0xd8,
	0xf0, 0xbf, 0xe8, 0x5d, 0x1c, 0x6c, 0xc2, 0xcb, 0x01, 0xfd, 0xaa, 0x9e, 0xa4, 0x41, 0xa7, 0x12,
	0xf9, 0xe7, 0x59, 0xb0, 0x05, 0xe3, 0xf6, 0x58, 0x54, 0xbf, 0x48, 0x83, 0xed, 0xe7, 0xff, 0x68,
	0x8b, 0x3e, 0x70, 0x50, 0x1b, 0x82, 0xbb, 0xcd, 0x2a, 0x6e, 0xbc, 0x86, 0x02, 0x7a, 0x9e, 0x0c,
	0xac, 0xcc, 0x8d, 0x8f, 0x41, 0xcf, 0x8b, 0xaa, 0xd9, 0x38, 0x10, 0x00, 0x40, 0xdf, 0x6a, 0xd9,
	0xa9, 0x2b, 0xd8, 0x09, 0x1f, 0x88, 0x43, 0x56, 0xba, 0x39, 0x39, 0x05, 0x7d, 0xff, 0xe9, 0xd6,
	0x20, 0x12, 0x0c, 0xfc, 0xd1, 0xd5, 0x08, 0x11, 0xec, 0xae, 0x89, 0x68, 0x40, 0x08, 0xf6, 0x90,
	0xe8, 0x1e, 0x89, 0x78, 0x04, 0x0c, 0x02, 0x60, 0x4d, 0xf0, 0xe5, 0x8c, 0xe5, 0x60, 0x1f, 0x38,
	0xd9, 0x71, 0xc6, 0xd0, 0x78, 0x17, 0x84, 0xde, 0x3a, 0xdf, 0xf3, 0x83, 0x03, 0xa4, 0x3b, 0xb4,
	0xd6, 0x35, 0x7b, 0x78, 0x70, 0xcf, 0x6b, 0xfa, 0xde, 0x1b, 0x1c, 0x52, 0xe4, 0xd8, 0xd8, 0xba,
	0x11, 0x05, 0xef, 0x7b, 0x9b, 0x2a, 0x66, 0x0a, 0x1e, 0xf8, 0x13, 0xd7, 0x89, 0x23, 0x18, 0x01,
	0xca, 0x01, 0xc9, 0x9b, 0x2c, 0x15, 0x3c, 0xf4, 0xf7, 0xf8, 0x69, 0x20, 0x78, 0x44, 0x59, 0x25,
	0x09, 0xb5, 0xcb, 0xe0, 0x31, 0xa6, 0xfb, 0xfd, 0xb5, 0x0b, 0x88, 0xfa, 0x82, 0x6f, 0xf9, 0xc3,
	0x9a, 0xed, 0x38, 0xf8, 0xe0, 0x65, 0xfb, 0xf7, 0xad, 0xf7, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff,
	0x32, 0xd9, 0x2f, 0xeb, 0x2b, 0x12, 0x00, 0x00,
}
