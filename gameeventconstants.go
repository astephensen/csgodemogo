// Note: This file is automatically generated. Do not edit directly.

package csgodemogo

func GameEventFromName(eventName string) interface{} {
	switch eventName {
	case "server_spawn":
		return GameEventServerSpawn{}
	case "server_pre_shutdown":
		return GameEventServerPreShutdown{}
	case "server_shutdown":
		return GameEventServerShutdown{}
	case "server_cvar":
		return GameEventServerCvar{}
	case "server_message":
		return GameEventServerMessage{}
	case "server_addban":
		return GameEventServerAddban{}
	case "server_removeban":
		return GameEventServerRemoveban{}
	case "player_connect":
		return GameEventPlayerConnect{}
	case "player_info":
		return GameEventPlayerInfo{}
	case "player_disconnect":
		return GameEventPlayerDisconnect{}
	case "player_activate":
		return GameEventPlayerActivate{}
	case "player_connect_full":
		return GameEventPlayerConnectFull{}
	case "player_say":
		return GameEventPlayerSay{}
	case "cs_round_start_beep":
		return GameEventCsRoundStartBeep{}
	case "cs_round_final_beep":
		return GameEventCsRoundFinalBeep{}
	case "round_time_warning":
		return GameEventRoundTimeWarning{}
	case "team_info":
		return GameEventTeamInfo{}
	case "team_score":
		return GameEventTeamScore{}
	case "teamplay_broadcast_audio":
		return GameEventTeamplayBroadcastAudio{}
	case "gameui_hidden":
		return GameEventGameuiHidden{}
	case "items_gifted":
		return GameEventItemsGifted{}
	case "player_team":
		return GameEventPlayerTeam{}
	case "player_class":
		return GameEventPlayerClass{}
	case "player_death":
		return GameEventPlayerDeath{}
	case "player_hurt":
		return GameEventPlayerHurt{}
	case "player_chat":
		return GameEventPlayerChat{}
	case "player_score":
		return GameEventPlayerScore{}
	case "player_spawn":
		return GameEventPlayerSpawn{}
	case "player_shoot":
		return GameEventPlayerShoot{}
	case "player_use":
		return GameEventPlayerUse{}
	case "player_changename":
		return GameEventPlayerChangename{}
	case "player_hintmessage":
		return GameEventPlayerHintmessage{}
	case "game_init":
		return GameEventGameInit{}
	case "game_newmap":
		return GameEventGameNewmap{}
	case "game_start":
		return GameEventGameStart{}
	case "game_end":
		return GameEventGameEnd{}
	case "round_start":
		return GameEventRoundStart{}
	case "round_announce_match_point":
		return GameEventRoundAnnounceMatchPoint{}
	case "round_announce_final":
		return GameEventRoundAnnounceFinal{}
	case "round_announce_last_round_half":
		return GameEventRoundAnnounceLastRoundHalf{}
	case "round_announce_match_start":
		return GameEventRoundAnnounceMatchStart{}
	case "round_announce_warmup":
		return GameEventRoundAnnounceWarmup{}
	case "round_end":
		return GameEventRoundEnd{}
	case "round_end_upload_stats":
		return GameEventRoundEndUploadStats{}
	case "round_officially_ended":
		return GameEventRoundOfficiallyEnded{}
	case "ugc_map_info_received":
		return GameEventUgcMapInfoReceived{}
	case "ugc_map_unsubscribed":
		return GameEventUgcMapUnsubscribed{}
	case "ugc_map_download_error":
		return GameEventUgcMapDownloadError{}
	case "ugc_file_download_finished":
		return GameEventUgcFileDownloadFinished{}
	case "ugc_file_download_start":
		return GameEventUgcFileDownloadStart{}
	case "begin_new_match":
		return GameEventBeginNewMatch{}
	case "round_start_pre_entity":
		return GameEventRoundStartPreEntity{}
	case "teamplay_round_start":
		return GameEventTeamplayRoundStart{}
	case "hostname_changed":
		return GameEventHostnameChanged{}
	case "difficulty_changed":
		return GameEventDifficultyChanged{}
	case "finale_start":
		return GameEventFinaleStart{}
	case "game_message":
		return GameEventGameMessage{}
	case "dm_bonus_weapon_start":
		return GameEventDmBonusWeaponStart{}
	case "survival_announce_phase":
		return GameEventSurvivalAnnouncePhase{}
	case "break_breakable":
		return GameEventBreakBreakable{}
	case "break_prop":
		return GameEventBreakProp{}
	case "player_decal":
		return GameEventPlayerDecal{}
	case "entity_killed":
		return GameEventEntityKilled{}
	case "bonus_updated":
		return GameEventBonusUpdated{}
	case "player_stats_updated":
		return GameEventPlayerStatsUpdated{}
	case "achievement_event":
		return GameEventAchievementEvent{}
	case "achievement_increment":
		return GameEventAchievementIncrement{}
	case "achievement_earned":
		return GameEventAchievementEarned{}
	case "achievement_write_failed":
		return GameEventAchievementWriteFailed{}
	case "physgun_pickup":
		return GameEventPhysgunPickup{}
	case "flare_ignite_npc":
		return GameEventFlareIgniteNpc{}
	case "helicopter_grenade_punt_miss":
		return GameEventHelicopterGrenadePuntMiss{}
	case "user_data_downloaded":
		return GameEventUserDataDownloaded{}
	case "ragdoll_dissolved":
		return GameEventRagdollDissolved{}
	case "gameinstructor_draw":
		return GameEventGameinstructorDraw{}
	case "gameinstructor_nodraw":
		return GameEventGameinstructorNodraw{}
	case "map_transition":
		return GameEventMapTransition{}
	case "entity_visible":
		return GameEventEntityVisible{}
	case "set_instructor_group_enabled":
		return GameEventSetInstructorGroupEnabled{}
	case "instructor_server_hint_create":
		return GameEventInstructorServerHintCreate{}
	case "instructor_server_hint_stop":
		return GameEventInstructorServerHintStop{}
	case "read_game_titledata":
		return GameEventReadGameTitledata{}
	case "write_game_titledata":
		return GameEventWriteGameTitledata{}
	case "reset_game_titledata":
		return GameEventResetGameTitledata{}
	case "weapon_reload_database":
		return GameEventWeaponReloadDatabase{}
	case "vote_ended":
		return GameEventVoteEnded{}
	case "vote_started":
		return GameEventVoteStarted{}
	case "vote_changed":
		return GameEventVoteChanged{}
	case "vote_passed":
		return GameEventVotePassed{}
	case "vote_failed":
		return GameEventVoteFailed{}
	case "vote_cast":
		return GameEventVoteCast{}
	case "vote_options":
		return GameEventVoteOptions{}
	case "endmatch_mapvote_selecting_map":
		return GameEventEndmatchMapvoteSelectingMap{}
	case "endmatch_cmm_start_reveal_items":
		return GameEventEndmatchCmmStartRevealItems{}
	case "inventory_updated":
		return GameEventInventoryUpdated{}
	case "cart_updated":
		return GameEventCartUpdated{}
	case "store_pricesheet_updated":
		return GameEventStorePricesheetUpdated{}
	case "gc_connected":
		return GameEventGcConnected{}
	case "item_schema_initialized":
		return GameEventItemSchemaInitialized{}
	case "client_loadout_changed":
		return GameEventClientLoadoutChanged{}
	case "add_player_sonar_icon":
		return GameEventAddPlayerSonarIcon{}
	case "add_bullet_hit_marker":
		return GameEventAddBulletHitMarker{}
	case "verify_client_hit":
		return GameEventVerifyClientHit{}
	case "other_death":
		return GameEventOtherDeath{}
	case "item_purchase":
		return GameEventItemPurchase{}
	case "bomb_beginplant":
		return GameEventBombBeginplant{}
	case "bomb_abortplant":
		return GameEventBombAbortplant{}
	case "bomb_planted":
		return GameEventBombPlanted{}
	case "bomb_defused":
		return GameEventBombDefused{}
	case "bomb_exploded":
		return GameEventBombExploded{}
	case "bomb_dropped":
		return GameEventBombDropped{}
	case "bomb_pickup":
		return GameEventBombPickup{}
	case "defuser_dropped":
		return GameEventDefuserDropped{}
	case "defuser_pickup":
		return GameEventDefuserPickup{}
	case "announce_phase_end":
		return GameEventAnnouncePhaseEnd{}
	case "cs_intermission":
		return GameEventCsIntermission{}
	case "bomb_begindefuse":
		return GameEventBombBegindefuse{}
	case "bomb_abortdefuse":
		return GameEventBombAbortdefuse{}
	case "hostage_follows":
		return GameEventHostageFollows{}
	case "hostage_hurt":
		return GameEventHostageHurt{}
	case "hostage_killed":
		return GameEventHostageKilled{}
	case "hostage_rescued":
		return GameEventHostageRescued{}
	case "hostage_stops_following":
		return GameEventHostageStopsFollowing{}
	case "hostage_rescued_all":
		return GameEventHostageRescuedAll{}
	case "hostage_call_for_help":
		return GameEventHostageCallForHelp{}
	case "vip_escaped":
		return GameEventVipEscaped{}
	case "vip_killed":
		return GameEventVipKilled{}
	case "player_radio":
		return GameEventPlayerRadio{}
	case "bomb_beep":
		return GameEventBombBeep{}
	case "weapon_fire":
		return GameEventWeaponFire{}
	case "weapon_fire_on_empty":
		return GameEventWeaponFireOnEmpty{}
	case "weapon_outofammo":
		return GameEventWeaponOutofammo{}
	case "weapon_reload":
		return GameEventWeaponReload{}
	case "weapon_zoom":
		return GameEventWeaponZoom{}
	case "silencer_detach":
		return GameEventSilencerDetach{}
	case "inspect_weapon":
		return GameEventInspectWeapon{}
	case "weapon_zoom_rifle":
		return GameEventWeaponZoomRifle{}
	case "player_spawned":
		return GameEventPlayerSpawned{}
	case "item_pickup":
		return GameEventItemPickup{}
	case "ammo_pickup":
		return GameEventAmmoPickup{}
	case "item_equip":
		return GameEventItemEquip{}
	case "enter_buyzone":
		return GameEventEnterBuyzone{}
	case "exit_buyzone":
		return GameEventExitBuyzone{}
	case "buytime_ended":
		return GameEventBuytimeEnded{}
	case "enter_bombzone":
		return GameEventEnterBombzone{}
	case "exit_bombzone":
		return GameEventExitBombzone{}
	case "enter_rescue_zone":
		return GameEventEnterRescueZone{}
	case "exit_rescue_zone":
		return GameEventExitRescueZone{}
	case "silencer_off":
		return GameEventSilencerOff{}
	case "silencer_on":
		return GameEventSilencerOn{}
	case "buymenu_open":
		return GameEventBuymenuOpen{}
	case "buymenu_close":
		return GameEventBuymenuClose{}
	case "round_prestart":
		return GameEventRoundPrestart{}
	case "round_poststart":
		return GameEventRoundPoststart{}
	case "grenade_bounce":
		return GameEventGrenadeBounce{}
	case "hegrenade_detonate":
		return GameEventHegrenadeDetonate{}
	case "flashbang_detonate":
		return GameEventFlashbangDetonate{}
	case "smokegrenade_detonate":
		return GameEventSmokegrenadeDetonate{}
	case "smokegrenade_expired":
		return GameEventSmokegrenadeExpired{}
	case "molotov_detonate":
		return GameEventMolotovDetonate{}
	case "decoy_detonate":
		return GameEventDecoyDetonate{}
	case "decoy_started":
		return GameEventDecoyStarted{}
	case "tagrenade_detonate":
		return GameEventTagrenadeDetonate{}
	case "inferno_startburn":
		return GameEventInfernoStartburn{}
	case "inferno_expire":
		return GameEventInfernoExpire{}
	case "inferno_extinguish":
		return GameEventInfernoExtinguish{}
	case "decoy_firing":
		return GameEventDecoyFiring{}
	case "bullet_impact":
		return GameEventBulletImpact{}
	case "player_footstep":
		return GameEventPlayerFootstep{}
	case "player_jump":
		return GameEventPlayerJump{}
	case "player_blind":
		return GameEventPlayerBlind{}
	case "player_falldamage":
		return GameEventPlayerFalldamage{}
	case "door_moving":
		return GameEventDoorMoving{}
	case "round_freeze_end":
		return GameEventRoundFreezeEnd{}
	case "mb_input_lock_success":
		return GameEventMbInputLockSuccess{}
	case "mb_input_lock_cancel":
		return GameEventMbInputLockCancel{}
	case "nav_blocked":
		return GameEventNavBlocked{}
	case "nav_generate":
		return GameEventNavGenerate{}
	case "achievement_info_loaded":
		return GameEventAchievementInfoLoaded{}
	case "spec_target_updated":
		return GameEventSpecTargetUpdated{}
	case "spec_mode_updated":
		return GameEventSpecModeUpdated{}
	case "hltv_changed_mode":
		return GameEventHltvChangedMode{}
	case "cs_game_disconnected":
		return GameEventCsGameDisconnected{}
	case "cs_win_panel_round":
		return GameEventCsWinPanelRound{}
	case "cs_win_panel_match":
		return GameEventCsWinPanelMatch{}
	case "cs_match_end_restart":
		return GameEventCsMatchEndRestart{}
	case "cs_pre_restart":
		return GameEventCsPreRestart{}
	case "show_freezepanel":
		return GameEventShowFreezepanel{}
	case "hide_freezepanel":
		return GameEventHideFreezepanel{}
	case "freezecam_started":
		return GameEventFreezecamStarted{}
	case "player_avenged_teammate":
		return GameEventPlayerAvengedTeammate{}
	case "achievement_earned_local":
		return GameEventAchievementEarnedLocal{}
	case "item_found":
		return GameEventItemFound{}
	case "repost_xbox_achievements":
		return GameEventRepostXboxAchievements{}
	case "match_end_conditions":
		return GameEventMatchEndConditions{}
	case "round_mvp":
		return GameEventRoundMvp{}
	case "client_disconnect":
		return GameEventClientDisconnect{}
	case "gg_player_levelup":
		return GameEventGgPlayerLevelup{}
	case "ggtr_player_levelup":
		return GameEventGgtrPlayerLevelup{}
	case "assassination_target_killed":
		return GameEventAssassinationTargetKilled{}
	case "ggprogressive_player_levelup":
		return GameEventGgprogressivePlayerLevelup{}
	case "gg_killed_enemy":
		return GameEventGgKilledEnemy{}
	case "gg_final_weapon_achieved":
		return GameEventGgFinalWeaponAchieved{}
	case "gg_bonus_grenade_achieved":
		return GameEventGgBonusGrenadeAchieved{}
	case "switch_team":
		return GameEventSwitchTeam{}
	case "gg_leader":
		return GameEventGgLeader{}
	case "gg_team_leader":
		return GameEventGgTeamLeader{}
	case "gg_player_impending_upgrade":
		return GameEventGgPlayerImpendingUpgrade{}
	case "write_profile_data":
		return GameEventWriteProfileData{}
	case "trial_time_expired":
		return GameEventTrialTimeExpired{}
	case "update_matchmaking_stats":
		return GameEventUpdateMatchmakingStats{}
	case "player_reset_vote":
		return GameEventPlayerResetVote{}
	case "enable_restart_voting":
		return GameEventEnableRestartVoting{}
	case "sfuievent":
		return GameEventSfuievent{}
	case "start_vote":
		return GameEventStartVote{}
	case "player_given_c4":
		return GameEventPlayerGivenC4{}
	case "gg_reset_round_start_sounds":
		return GameEventGgResetRoundStartSounds{}
	case "tr_player_flashbanged":
		return GameEventTrPlayerFlashbanged{}
	case "tr_mark_complete":
		return GameEventTrMarkComplete{}
	case "tr_mark_best_time":
		return GameEventTrMarkBestTime{}
	case "tr_exit_hint_trigger":
		return GameEventTrExitHintTrigger{}
	case "bot_takeover":
		return GameEventBotTakeover{}
	case "tr_show_finish_msgbox":
		return GameEventTrShowFinishMsgbox{}
	case "tr_show_exit_msgbox":
		return GameEventTrShowExitMsgbox{}
	case "reset_player_controls":
		return GameEventResetPlayerControls{}
	case "jointeam_failed":
		return GameEventJointeamFailed{}
	case "teamchange_pending":
		return GameEventTeamchangePending{}
	case "material_default_complete":
		return GameEventMaterialDefaultComplete{}
	case "cs_prev_next_spectator":
		return GameEventCsPrevNextSpectator{}
	case "nextlevel_changed":
		return GameEventNextlevelChanged{}
	case "seasoncoin_levelup":
		return GameEventSeasoncoinLevelup{}
	case "tournament_reward":
		return GameEventTournamentReward{}
	case "start_halftime":
		return GameEventStartHalftime{}
	case "hltv_status":
		return GameEventHltvStatus{}
	case "hltv_cameraman":
		return GameEventHltvCameraman{}
	case "hltv_rank_camera":
		return GameEventHltvRankCamera{}
	case "hltv_rank_entity":
		return GameEventHltvRankEntity{}
	case "hltv_fixed":
		return GameEventHltvFixed{}
	case "hltv_chase":
		return GameEventHltvChase{}
	case "hltv_message":
		return GameEventHltvMessage{}
	case "hltv_title":
		return GameEventHltvTitle{}
	case "hltv_chat":
		return GameEventHltvChat{}
	case "hltv_changed_target":
		return GameEventHltvChangedTarget{}
	}
	return nil
}

type GameEventServerSpawn struct {
	Hostname   string
	Address    string
	Port       int
	Game       string
	Mapname    string
	Maxplayers int
	Os         string
	Dedicated  bool
	Official   bool
	Password   bool
}

type GameEventServerPreShutdown struct {
	Reason string
}

type GameEventServerShutdown struct {
	Reason string
}

type GameEventServerCvar struct {
	Cvarname  string
	Cvarvalue string
}

type GameEventServerMessage struct {
	Text string
}

type GameEventServerAddban struct {
	Name      string
	UserID    int
	NetworkID string
	Ip        string
	Duration  string
	By        string
	Kicked    bool
}

type GameEventServerRemoveban struct {
	NetworkID string
	Ip        string
	By        string
}

type GameEventPlayerConnect struct {
	Name      string
	Index     int
	UserID    int
	NetworkID string
	Address   string
}

type GameEventPlayerInfo struct {
	Name      string
	Index     int
	UserID    int
	NetworkID string
	Bot       bool
}

type GameEventPlayerDisconnect struct {
	UserID    int
	Reason    string
	Name      string
	NetworkID string
}

type GameEventPlayerActivate struct {
	UserID int
}

type GameEventPlayerConnectFull struct {
	UserID int
	Index  int
}

type GameEventPlayerSay struct {
	UserID int
	Text   string
}

type GameEventCsRoundStartBeep struct {
}

type GameEventCsRoundFinalBeep struct {
}

type GameEventRoundTimeWarning struct {
}

type GameEventTeamInfo struct {
	TeamID   int
	Teamname string
}

type GameEventTeamScore struct {
	TeamID int
	Score  int
}

type GameEventTeamplayBroadcastAudio struct {
	Team  int
	Sound string
}

type GameEventGameuiHidden struct {
}

type GameEventItemsGifted struct {
	Player    int
	Itemdef   int
	Numgifts  int
	Giftidx   int
	AccountID int
}

type GameEventPlayerTeam struct {
	UserID     int
	Team       int
	Oldteam    int
	Disconnect bool
	Autoteam   bool
	Silent     bool
	Isbot      bool
}

type GameEventPlayerClass struct {
	UserID int
	Class  string
}

type GameEventPlayerDeath struct {
	UserID                  int
	Attacker                int
	Assister                int
	Weapon                  string
	WeaponItemID            string
	WeaponFauxitemID        string
	WeaponOriginalownerXuID string
	Headshot                bool
	Dominated               int
	Revenge                 int
	Penetrated              int
	Noreplay                bool
}

type GameEventPlayerHurt struct {
	UserID    int
	Attacker  int
	Health    int
	Armor     int
	Weapon    string
	DmgHealth int
	DmgArmor  int
	Hitgroup  int
}

type GameEventPlayerChat struct {
	Teamonly bool
	UserID   int
	Text     string
}

type GameEventPlayerScore struct {
	UserID int
	Kills  int
	Deaths int
	Score  int
}

type GameEventPlayerSpawn struct {
	UserID  int
	Teamnum int
}

type GameEventPlayerShoot struct {
	UserID int
	Weapon int
	Mode   int
}

type GameEventPlayerUse struct {
	UserID int
	Entity int
}

type GameEventPlayerChangename struct {
	UserID  int
	Oldname string
	Newname string
}

type GameEventPlayerHintmessage struct {
	Hintmessage string
}

type GameEventGameInit struct {
}

type GameEventGameNewmap struct {
	Mapname string
}

type GameEventGameStart struct {
	Roundslimit int
	Timelimit   int
	Fraglimit   int
	Objective   string
}

type GameEventGameEnd struct {
	Winner int
}

type GameEventRoundStart struct {
	Timelimit int
	Fraglimit int
	Objective string
}

type GameEventRoundAnnounceMatchPoint struct {
}

type GameEventRoundAnnounceFinal struct {
}

type GameEventRoundAnnounceLastRoundHalf struct {
}

type GameEventRoundAnnounceMatchStart struct {
}

type GameEventRoundAnnounceWarmup struct {
}

type GameEventRoundEnd struct {
	Winner      int
	Reason      int
	Message     string
	Legacy      int
	PlayerCount int
}

type GameEventRoundEndUploadStats struct {
}

type GameEventRoundOfficiallyEnded struct {
}

type GameEventUgcMapInfoReceived struct {
	PublishedFileId []byte
}

type GameEventUgcMapUnsubscribed struct {
	PublishedFileId []byte
}

type GameEventUgcMapDownloadError struct {
	PublishedFileId []byte
	ErrorCode       int
}

type GameEventUgcFileDownloadFinished struct {
	Hcontent []byte
}

type GameEventUgcFileDownloadStart struct {
	Hcontent        []byte
	PublishedFileId []byte
}

type GameEventBeginNewMatch struct {
}

type GameEventRoundStartPreEntity struct {
}

type GameEventTeamplayRoundStart struct {
	FullReset bool
}

type GameEventHostnameChanged struct {
	Hostname string
}

type GameEventDifficultyChanged struct {
	NewDifficulty int
	OldDifficulty int
	StrDifficulty string
}

type GameEventFinaleStart struct {
	Rushes int
}

type GameEventGameMessage struct {
	Target int
	Text   string
}

type GameEventDmBonusWeaponStart struct {
	Time  int
	WepID int
	Pos   int
}

type GameEventSurvivalAnnouncePhase struct {
	Phase int
}

type GameEventBreakBreakable struct {
	Entindex int
	UserID   int
	Material int
}

type GameEventBreakProp struct {
	Entindex int
	UserID   int
}

type GameEventPlayerDecal struct {
	UserID int
}

type GameEventEntityKilled struct {
	EntindexKilled    int
	EntindexAttacker  int
	EntindexInflictor int
	Damagebits        int
}

type GameEventBonusUpdated struct {
	Numadvanced int
	Numbronze   int
	Numsilver   int
	Numgold     int
}

type GameEventPlayerStatsUpdated struct {
	Forceupload bool
}

type GameEventAchievementEvent struct {
	AchievementName string
	CurVal          int
	MaxVal          int
}

type GameEventAchievementIncrement struct {
	AchievementId int
	CurVal        int
	MaxVal        int
}

type GameEventAchievementEarned struct {
	Player      int
	Achievement int
}

type GameEventAchievementWriteFailed struct {
}

type GameEventPhysgunPickup struct {
	Entindex int
}

type GameEventFlareIgniteNpc struct {
	Entindex int
}

type GameEventHelicopterGrenadePuntMiss struct {
}

type GameEventUserDataDownloaded struct {
}

type GameEventRagdollDissolved struct {
	Entindex int
}

type GameEventGameinstructorDraw struct {
}

type GameEventGameinstructorNodraw struct {
}

type GameEventMapTransition struct {
}

type GameEventEntityVisible struct {
	UserID     int
	Subject    int
	Classname  string
	Entityname string
}

type GameEventSetInstructorGroupEnabled struct {
	Group   string
	Enabled int
}

type GameEventInstructorServerHintCreate struct {
	HintName              string
	HintReplaceKey        string
	HintTarget            int
	HintActivatorUserID   int
	HintTimeout           int
	HintIconOnscreen      string
	HintIconOffscreen     string
	HintCaption           string
	HintActivatorCaption  string
	HintColor             string
	HintIconOffset        float64
	HintRange             float64
	HintFlags             int
	HintBinding           string
	HintGamepadBinding    string
	HintAllowNodrawTarget bool
	HintNooffscreen       bool
	HintForcecaption      bool
	HintLocalPlayerOnly   bool
}

type GameEventInstructorServerHintStop struct {
	HintName string
}

type GameEventReadGameTitledata struct {
	ControllerId int
}

type GameEventWriteGameTitledata struct {
	ControllerId int
}

type GameEventResetGameTitledata struct {
	ControllerId int
}

type GameEventWeaponReloadDatabase struct {
}

type GameEventVoteEnded struct {
}

type GameEventVoteStarted struct {
	Issue     string
	Param1    string
	Team      int
	Initiator int
}

type GameEventVoteChanged struct {
	VoteOption1    int
	VoteOption2    int
	VoteOption3    int
	VoteOption4    int
	VoteOption5    int
	PotentialVotes int
}

type GameEventVotePassed struct {
	Details string
	Param1  string
	Team    int
}

type GameEventVoteFailed struct {
	Team int
}

type GameEventVoteCast struct {
	VoteOption int
	Team       int
	EntityID   int
}

type GameEventVoteOptions struct {
	Count   int
	Option1 string
	Option2 string
	Option3 string
	Option4 string
	Option5 string
}

type GameEventEndmatchMapvoteSelectingMap struct {
	Count  int
	Slot1  int
	Slot2  int
	Slot3  int
	Slot4  int
	Slot5  int
	Slot6  int
	Slot7  int
	Slot8  int
	Slot9  int
	Slot10 int
}

type GameEventEndmatchCmmStartRevealItems struct {
}

type GameEventInventoryUpdated struct {
}

type GameEventCartUpdated struct {
}

type GameEventStorePricesheetUpdated struct {
}

type GameEventGcConnected struct {
}

type GameEventItemSchemaInitialized struct {
}

type GameEventClientLoadoutChanged struct {
}

type GameEventAddPlayerSonarIcon struct {
	UserID int
	PosX   float64
	PosY   float64
	PosZ   float64
}

type GameEventAddBulletHitMarker struct {
	UserID int
	Bone   int
	PosX   int
	PosY   int
	PosZ   int
	AngX   int
	AngY   int
	AngZ   int
	StartX int
	StartY int
	StartZ int
	Hit    bool
}

type GameEventVerifyClientHit struct {
	UserID    int
	PosX      float64
	PosY      float64
	PosZ      float64
	Timestamp float64
}

type GameEventOtherDeath struct {
	OtherID                 int
	Othertype               string
	Attacker                int
	Weapon                  string
	WeaponItemID            string
	WeaponFauxitemID        string
	WeaponOriginalownerXuID string
	Headshot                bool
	Penetrated              int
}

type GameEventItemPurchase struct {
	UserID int
	Team   int
	Weapon string
}

type GameEventBombBeginplant struct {
	UserID int
	Site   int
}

type GameEventBombAbortplant struct {
	UserID int
	Site   int
}

type GameEventBombPlanted struct {
	UserID int
	Site   int
}

type GameEventBombDefused struct {
	UserID int
	Site   int
}

type GameEventBombExploded struct {
	UserID int
	Site   int
}

type GameEventBombDropped struct {
	UserID   int
	Entindex int
}

type GameEventBombPickup struct {
	UserID int
}

type GameEventDefuserDropped struct {
	EntityID int
}

type GameEventDefuserPickup struct {
	EntityID int
	UserID   int
}

type GameEventAnnouncePhaseEnd struct {
}

type GameEventCsIntermission struct {
}

type GameEventBombBegindefuse struct {
	UserID int
	Haskit bool
}

type GameEventBombAbortdefuse struct {
	UserID int
}

type GameEventHostageFollows struct {
	UserID  int
	Hostage int
}

type GameEventHostageHurt struct {
	UserID  int
	Hostage int
}

type GameEventHostageKilled struct {
	UserID  int
	Hostage int
}

type GameEventHostageRescued struct {
	UserID  int
	Hostage int
	Site    int
}

type GameEventHostageStopsFollowing struct {
	UserID  int
	Hostage int
}

type GameEventHostageRescuedAll struct {
}

type GameEventHostageCallForHelp struct {
	Hostage int
}

type GameEventVipEscaped struct {
	UserID int
}

type GameEventVipKilled struct {
	UserID   int
	Attacker int
}

type GameEventPlayerRadio struct {
	UserID int
	Slot   int
}

type GameEventBombBeep struct {
	Entindex int
}

type GameEventWeaponFire struct {
	UserID   int
	Weapon   string
	Silenced bool
}

type GameEventWeaponFireOnEmpty struct {
	UserID int
	Weapon string
}

type GameEventWeaponOutofammo struct {
	UserID int
}

type GameEventWeaponReload struct {
	UserID int
}

type GameEventWeaponZoom struct {
	UserID int
}

type GameEventSilencerDetach struct {
	UserID int
}

type GameEventInspectWeapon struct {
	UserID int
}

type GameEventWeaponZoomRifle struct {
	UserID int
}

type GameEventPlayerSpawned struct {
	UserID    int
	Inrestart bool
}

type GameEventItemPickup struct {
	UserID int
	Item   string
	Silent bool
}

type GameEventAmmoPickup struct {
	UserID int
	Item   string
	Index  int
}

type GameEventItemEquip struct {
	UserID      int
	Item        string
	Canzoom     bool
	Hassilencer bool
	Issilenced  bool
	Hastracers  bool
	Weptype     int
	Ispainted   bool
}

type GameEventEnterBuyzone struct {
	UserID int
	Canbuy bool
}

type GameEventExitBuyzone struct {
	UserID int
	Canbuy bool
}

type GameEventBuytimeEnded struct {
}

type GameEventEnterBombzone struct {
	UserID    int
	Hasbomb   bool
	Isplanted bool
}

type GameEventExitBombzone struct {
	UserID    int
	Hasbomb   bool
	Isplanted bool
}

type GameEventEnterRescueZone struct {
	UserID int
}

type GameEventExitRescueZone struct {
	UserID int
}

type GameEventSilencerOff struct {
	UserID int
}

type GameEventSilencerOn struct {
	UserID int
}

type GameEventBuymenuOpen struct {
	UserID int
}

type GameEventBuymenuClose struct {
	UserID int
}

type GameEventRoundPrestart struct {
}

type GameEventRoundPoststart struct {
}

type GameEventGrenadeBounce struct {
	UserID int
}

type GameEventHegrenadeDetonate struct {
	UserID   int
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventFlashbangDetonate struct {
	UserID   int
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventSmokegrenadeDetonate struct {
	UserID   int
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventSmokegrenadeExpired struct {
	UserID   int
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventMolotovDetonate struct {
	UserID int
	X      float64
	Y      float64
	Z      float64
}

type GameEventDecoyDetonate struct {
	UserID   int
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventDecoyStarted struct {
	UserID   int
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventTagrenadeDetonate struct {
	UserID   int
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventInfernoStartburn struct {
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventInfernoExpire struct {
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventInfernoExtinguish struct {
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventDecoyFiring struct {
	UserID   int
	EntityID int
	X        float64
	Y        float64
	Z        float64
}

type GameEventBulletImpact struct {
	UserID int
	X      float64
	Y      float64
	Z      float64
}

type GameEventPlayerFootstep struct {
	UserID int
}

type GameEventPlayerJump struct {
	UserID int
}

type GameEventPlayerBlind struct {
	UserID int
}

type GameEventPlayerFalldamage struct {
	UserID int
	Damage float64
}

type GameEventDoorMoving struct {
	Entindex int
	UserID   int
}

type GameEventRoundFreezeEnd struct {
}

type GameEventMbInputLockSuccess struct {
}

type GameEventMbInputLockCancel struct {
}

type GameEventNavBlocked struct {
	Area    int
	Blocked bool
}

type GameEventNavGenerate struct {
}

type GameEventAchievementInfoLoaded struct {
}

type GameEventSpecTargetUpdated struct {
	UserID int
}

type GameEventSpecModeUpdated struct {
	UserID int
}

type GameEventHltvChangedMode struct {
	Oldmode   int
	Newmode   int
	ObsTarget int
}

type GameEventCsGameDisconnected struct {
}

type GameEventCsWinPanelRound struct {
	ShowTimerDefend bool
	ShowTimerAttack bool
	TimerTime       int
	FinalEvent      int
	FunfactToken    string
	FunfactPlayer   int
	FunfactData1    int
	FunfactData2    int
	FunfactData3    int
}

type GameEventCsWinPanelMatch struct {
}

type GameEventCsMatchEndRestart struct {
}

type GameEventCsPreRestart struct {
}

type GameEventShowFreezepanel struct {
	Victim      int
	Killer      int
	HitsTaken   int
	DamageTaken int
	HitsGiven   int
	DamageGiven int
}

type GameEventHideFreezepanel struct {
}

type GameEventFreezecamStarted struct {
}

type GameEventPlayerAvengedTeammate struct {
	AvengerId       int
	AvengedPlayerId int
}

type GameEventAchievementEarnedLocal struct {
	Achievement       int
	Splitscreenplayer int
}

type GameEventItemFound struct {
	Player  int
	Quality int
	Method  int
	Itemdef int
	ItemID  int
}

type GameEventRepostXboxAchievements struct {
	Splitscreenplayer int
}

type GameEventMatchEndConditions struct {
	Frags     int
	MaxRounds int
	WinRounds int
	Time      int
}

type GameEventRoundMvp struct {
	UserID       int
	Reason       int
	Musickitmvps int
}

type GameEventClientDisconnect struct {
}

type GameEventGgPlayerLevelup struct {
	UserID     int
	Weaponrank int
	Weaponname string
}

type GameEventGgtrPlayerLevelup struct {
	UserID     int
	Weaponrank int
	Weaponname string
}

type GameEventAssassinationTargetKilled struct {
	Target int
	Killer int
}

type GameEventGgprogressivePlayerLevelup struct {
	UserID     int
	Weaponrank int
	Weaponname string
}

type GameEventGgKilledEnemy struct {
	VictimID   int
	AttackerID int
	Dominated  int
	Revenge    int
	Bonus      bool
}

type GameEventGgFinalWeaponAchieved struct {
	PlayerID int
}

type GameEventGgBonusGrenadeAchieved struct {
	UserID int
}

type GameEventSwitchTeam struct {
	NumPlayers     int
	NumSpectators  int
	AvgRank        int
	NumTSlotsFree  int
	NumCTSlotsFree int
}

type GameEventGgLeader struct {
	PlayerID int
}

type GameEventGgTeamLeader struct {
	PlayerID int
}

type GameEventGgPlayerImpendingUpgrade struct {
	UserID int
}

type GameEventWriteProfileData struct {
}

type GameEventTrialTimeExpired struct {
	Slot int
}

type GameEventUpdateMatchmakingStats struct {
}

type GameEventPlayerResetVote struct {
	UserID int
	Vote   bool
}

type GameEventEnableRestartVoting struct {
	Enable bool
}

type GameEventSfuievent struct {
	Action string
	Data   string
	Slot   int
}

type GameEventStartVote struct {
	UserID        int
	Type          int
	VoteParameter int
}

type GameEventPlayerGivenC4 struct {
	UserID int
}

type GameEventGgResetRoundStartSounds struct {
	UserID int
}

type GameEventTrPlayerFlashbanged struct {
	UserID int
}

type GameEventTrMarkComplete struct {
	Complete int
}

type GameEventTrMarkBestTime struct {
	Time int
}

type GameEventTrExitHintTrigger struct {
}

type GameEventBotTakeover struct {
	UserID int
	BotID  int
	Index  int
}

type GameEventTrShowFinishMsgbox struct {
	UserID int
}

type GameEventTrShowExitMsgbox struct {
	UserID int
}

type GameEventResetPlayerControls struct {
}

type GameEventJointeamFailed struct {
	UserID int
	Reason int
}

type GameEventTeamchangePending struct {
	UserID int
	Toteam int
}

type GameEventMaterialDefaultComplete struct {
}

type GameEventCsPrevNextSpectator struct {
	Next bool
}

type GameEventNextlevelChanged struct {
	Nextlevel string
}

type GameEventSeasoncoinLevelup struct {
	Player   int
	Category int
	Rank     int
}

type GameEventTournamentReward struct {
	Defindex     int
	Totalrewards int
	AccountID    int
}

type GameEventStartHalftime struct {
}

type GameEventHltvStatus struct {
	Clients        int
	Slots          int
	Proxies        int
	Master         string
	Externaltotal  int
	Externallinked int
}

type GameEventHltvCameraman struct {
	Index int
}

type GameEventHltvRankCamera struct {
	Index  int
	Rank   float64
	Target int
}

type GameEventHltvRankEntity struct {
	Index  int
	Rank   float64
	Target int
}

type GameEventHltvFixed struct {
	Posx   int
	Posy   int
	Posz   int
	Theta  int
	Phi    int
	Offset int
	Fov    float64
	Target int
}

type GameEventHltvChase struct {
	Target1  int
	Target2  int
	Distance int
	Theta    int
	Phi      int
	Inertia  int
	Ineye    int
}

type GameEventHltvMessage struct {
	Text string
}

type GameEventHltvTitle struct {
	Text string
}

type GameEventHltvChat struct {
	Text string
}

type GameEventHltvChangedTarget struct {
	Mode      int
	OldTarget int
	ObsTarget int
}
